{
    "line": 5,
    "code": "<span class=\"CodeRay\"><span class=\"no\"> 1</span> <span class=\"r\">class</span> <span class=\"cl\">UsersController</span> &lt; <span class=\"co\">ApplicationController</span>\n<span class=\"no\"> 2</span>   <span class=\"c\"># GET /users</span>\n<span class=\"no\"> 3</span>   <span class=\"c\"># GET /users.xml</span>\n<span class=\"no\"> 4</span>   <span class=\"r\">def</span> <span class=\"fu\">index</span>\n<span class='container selected'><span class=\"no\"> 5</span>     raise <span class=\"s\"><span class=\"dl\">'</span><span class=\"k\">oops</span><span class=\"dl\">'</span></span><span class='overlay'></span></span>\n<span class=\"no\"> 6</span>     <span class=\"iv\">@users</span> = <span class=\"co\">User</span>.all\n<span class=\"no\"> 7</span> \n<span class=\"no\"> 8</span>     respond_to <span class=\"r\">do</span> |format|\n<span class=\"no\"> 9</span>       format.html <span class=\"c\"># index.html.erb</span>\n<span class=\"no\">10</span>       format.xml  { render <span class=\"sy\">:xml</span> =&gt; <span class=\"iv\">@users</span> }\n<span class=\"no\">11</span>     <span class=\"r\">end</span>\n<span class=\"no\">12</span>   <span class=\"r\">end</span>\n<span class=\"no\">13</span> \n<span class=\"no\">14</span>   <span class=\"c\"># GET /users/1</span>\n<span class=\"no\">15</span>   <span class=\"c\"># GET /users/1.xml</span>\n<span class=\"no\">16</span>   <span class=\"r\">def</span> <span class=\"fu\">show</span>\n</span>",
    "path": "/Users/alex/ruby/github/test_app/app/controllers/users_controller.rb"
},
{
    "line": 4,
    "code": "<span class=\"CodeRay\"><span class=\"no\"> 1</span> <span class=\"r\">module</span> <span class=\"cl\">ActionController</span>\n<span class=\"no\"> 2</span>   <span class=\"r\">module</span> <span class=\"cl\">ImplicitRender</span>\n<span class=\"no\"> 3</span>     <span class=\"r\">def</span> <span class=\"fu\">send_action</span>(*)\n<span class='container selected'><span class=\"no\"> 4</span>       ret = <span class=\"r\">super</span><span class='overlay'></span></span>\n<span class=\"no\"> 5</span>       default_render <span class=\"r\">unless</span> response_body\n<span class=\"no\"> 6</span>       ret\n<span class=\"no\"> 7</span>     <span class=\"r\">end</span>\n<span class=\"no\"> 8</span> \n<span class=\"no\"> 9</span>     <span class=\"r\">def</span> <span class=\"fu\">default_render</span>\n<span class=\"no\">10</span>       render\n<span class=\"no\">11</span>     <span class=\"r\">end</span>\n<span class=\"no\">12</span> \n<span class=\"no\">13</span>     <span class=\"r\">def</span> <span class=\"fu\">method_for_action</span>(action_name)\n<span class=\"no\">14</span>       <span class=\"r\">super</span> || <span class=\"r\">begin</span>\n<span class=\"no\">15</span>         <span class=\"r\">if</span> template_exists?(action_name.to_s, _prefix)\n</span>",
    "path": "/Users/alex/.rvm/gems/ruby-1.8.7-p302@test_app/gems/actionpack-3.0.3/lib/action_controller/metal/implicit_render.rb"
},
{
    "line": 4,
    "code": "<span class=\"CodeRay\"><span class=\"no\"> 1</span> <span class=\"r\">module</span> <span class=\"cl\">ActionController</span>\n<span class=\"no\"> 2</span>   <span class=\"r\">module</span> <span class=\"cl\">ImplicitRender</span>\n<span class=\"no\"> 3</span>     <span class=\"r\">def</span> <span class=\"fu\">send_action</span>(*)\n<span class='container selected'><span class=\"no\"> 4</span>       ret = <span class=\"r\">super</span><span class='overlay'></span></span>\n<span class=\"no\"> 5</span>       default_render <span class=\"r\">unless</span> response_body\n<span class=\"no\"> 6</span>       ret\n<span class=\"no\"> 7</span>     <span class=\"r\">end</span>\n<span class=\"no\"> 8</span> \n<span class=\"no\"> 9</span>     <span class=\"r\">def</span> <span class=\"fu\">default_render</span>\n<span class=\"no\">10</span>       render\n<span class=\"no\">11</span>     <span class=\"r\">end</span>\n<span class=\"no\">12</span> \n<span class=\"no\">13</span>     <span class=\"r\">def</span> <span class=\"fu\">method_for_action</span>(action_name)\n<span class=\"no\">14</span>       <span class=\"r\">super</span> || <span class=\"r\">begin</span>\n<span class=\"no\">15</span>         <span class=\"r\">if</span> template_exists?(action_name.to_s, _prefix)\n</span>",
    "path": "/Users/alex/.rvm/gems/ruby-1.8.7-p302@test_app/gems/actionpack-3.0.3/lib/action_controller/metal/implicit_render.rb"
},
{
    "line": 151,
    "code": "<span class=\"CodeRay\"><span class=\"no\">141</span>       <span class=\"c\"># ==== Returns</span>\n<span class=\"no\">142</span>       <span class=\"c\"># * &lt;tt&gt;TrueClass&lt;/tt&gt;, &lt;tt&gt;FalseClass&lt;/tt&gt;</span>\n<span class=\"no\">143</span>       <span class=\"r\">def</span> <span class=\"fu\">action_method?</span>(name)\n<span class=\"no\">144</span>         <span class=\"pc\">self</span>.class.action_methods.include?(name)\n<span class=\"no\">145</span>       <span class=\"r\">end</span>\n<span class=\"no\">146</span> \n<span class=\"no\">147</span>       <span class=\"c\"># Call the action. Override this in a subclass to modify the</span>\n<span class=\"no\">148</span>       <span class=\"c\"># behavior around processing an action. This, and not #process,</span>\n<span class=\"no\">149</span>       <span class=\"c\"># is the intended way to override action dispatching.</span>\n<span class=\"no\">150</span>       <span class=\"r\">def</span> <span class=\"fu\">process_action</span>(method_name, *args)\n<span class='container selected'><span class=\"no\">151</span>         send_action(method_name, *args)<span class='overlay'></span></span>\n<span class=\"no\">152</span>       <span class=\"r\">end</span>\n<span class=\"no\">153</span> \n<span class=\"no\">154</span>       <span class=\"c\"># Actually call the method associated with the action. Override</span>\n<span class=\"no\">155</span>       <span class=\"c\"># this method if you wish to change how action methods are called,</span>\n<span class=\"no\">156</span>       <span class=\"c\"># not to add additional behavior around it. For example, you would</span>\n<span class=\"no\">157</span>       <span class=\"c\"># override #send_action if you want to inject arguments into the</span>\n<span class=\"no\">158</span>       <span class=\"c\"># method.</span>\n<span class=\"no\">159</span>       <span class=\"r\">alias</span> <span class=\"fu\">send_action</span> <span class=\"fu\">send</span>\n<span class=\"no\">160</span> \n<span class=\"no\">161</span>       <span class=\"c\"># If the action name was not found, but a method called &quot;action_missing&quot;</span>\n<span class=\"no\">162</span>       <span class=\"c\"># was found, #method_for_action will return &quot;_handle_action_missing&quot;.</span>\n</span>",
    "path": "/Users/alex/.rvm/gems/ruby-1.8.7-p302@test_app/gems/actionpack-3.0.3/lib/abstract_controller/base.rb"
},
{
    "line": 11,
    "code": "<span class=\"CodeRay\"><span class=\"no\"> 1</span> <span class=\"r\">module</span> <span class=\"cl\">ActionController</span>\n<span class=\"no\"> 2</span>   <span class=\"r\">module</span> <span class=\"cl\">Rendering</span>\n<span class=\"no\"> 3</span>     extend <span class=\"co\">ActiveSupport</span>::<span class=\"co\">Concern</span>\n<span class=\"no\"> 4</span> \n<span class=\"no\"> 5</span>     include <span class=\"co\">ActionController</span>::<span class=\"co\">RackDelegation</span>\n<span class=\"no\"> 6</span>     include <span class=\"co\">AbstractController</span>::<span class=\"co\">Rendering</span>\n<span class=\"no\"> 7</span> \n<span class=\"no\"> 8</span>     <span class=\"c\"># Before processing, set the request formats in current controller formats.</span>\n<span class=\"no\"> 9</span>     <span class=\"r\">def</span> <span class=\"fu\">process_action</span>(*) <span class=\"c\">#:nodoc:</span>\n<span class=\"no\">10</span>       <span class=\"pc\">self</span>.formats = request.formats.map { |x| x.to_sym }\n<span class='container selected'><span class=\"no\">11</span>       <span class=\"r\">super</span><span class='overlay'></span></span>\n<span class=\"no\">12</span>     <span class=\"r\">end</span>\n<span class=\"no\">13</span> \n<span class=\"no\">14</span>     <span class=\"c\"># Check for double render errors and set the content_type after rendering.</span>\n<span class=\"no\">15</span>     <span class=\"r\">def</span> <span class=\"fu\">render</span>(*args) <span class=\"c\">#:nodoc:</span>\n<span class=\"no\">16</span>       raise ::<span class=\"co\">AbstractController</span>::<span class=\"co\">DoubleRenderError</span> <span class=\"r\">if</span> response_body\n<span class=\"no\">17</span>       <span class=\"r\">super</span>\n<span class=\"no\">18</span>       <span class=\"pc\">self</span>.content_type ||= <span class=\"co\">Mime</span>[formats.first].to_s\n<span class=\"no\">19</span>       response_body\n<span class=\"no\">20</span>     <span class=\"r\">end</span>\n<span class=\"no\">21</span> \n<span class=\"no\">22</span>     private\n</span>",
    "path": "/Users/alex/.rvm/gems/ruby-1.8.7-p302@test_app/gems/actionpack-3.0.3/lib/action_controller/metal/rendering.rb"
},
{
    "line": 18,
    "code": "<span class=\"CodeRay\"><span class=\"no\"> 8</span>     include <span class=\"co\">ActiveSupport</span>::<span class=\"co\">Callbacks</span>\n<span class=\"no\"> 9</span> \n<span class=\"no\">10</span>     included <span class=\"r\">do</span>\n<span class=\"no\">11</span>       define_callbacks <span class=\"sy\">:process_action</span>, <span class=\"sy\">:terminator</span> =&gt; <span class=\"s\"><span class=\"dl\">&quot;</span><span class=\"k\">response_body</span><span class=\"dl\">&quot;</span></span>\n<span class=\"no\">12</span>     <span class=\"r\">end</span>\n<span class=\"no\">13</span> \n<span class=\"no\">14</span>     <span class=\"c\"># Override AbstractController::Base's process_action to run the</span>\n<span class=\"no\">15</span>     <span class=\"c\"># process_action callbacks around the normal behavior.</span>\n<span class=\"no\">16</span>     <span class=\"r\">def</span> <span class=\"fu\">process_action</span>(method_name)\n<span class=\"no\">17</span>       run_callbacks(<span class=\"sy\">:process_action</span>, method_name) <span class=\"r\">do</span>\n<span class='container selected'><span class=\"no\">18</span>         <span class=\"r\">super</span><span class='overlay'></span></span>\n<span class=\"no\">19</span>       <span class=\"r\">end</span>\n<span class=\"no\">20</span>     <span class=\"r\">end</span>\n<span class=\"no\">21</span> \n<span class=\"no\">22</span>     <span class=\"r\">module</span> <span class=\"cl\">ClassMethods</span>\n<span class=\"no\">23</span>       <span class=\"c\"># If :only or :except are used, convert the options into the</span>\n<span class=\"no\">24</span>       <span class=\"c\"># primitive form (:per_key) used by ActiveSupport::Callbacks.</span>\n<span class=\"no\">25</span>       <span class=\"c\"># The basic idea is that :only =&gt; :index gets converted to</span>\n<span class=\"no\">26</span>       <span class=\"c\"># :if =&gt; proc {|c| c.action_name == &quot;index&quot; }, but that the</span>\n<span class=\"no\">27</span>       <span class=\"c\"># proc is only evaluated once per action for the lifetime of</span>\n<span class=\"no\">28</span>       <span class=\"c\"># a Rails process.</span>\n<span class=\"no\">29</span>       <span class=\"c\">#</span>\n</span>",
    "path": "/Users/alex/.rvm/gems/ruby-1.8.7-p302@test_app/gems/actionpack-3.0.3/lib/abstract_controller/callbacks.rb"
},
{
    "line": 435,
    "code": "<span class=\"CodeRay\"><span class=\"no\">425</span>         <span class=\"iv\">@_keyed_callbacks</span>[name] ||= <span class=\"r\">begin</span>\n<span class=\"no\">426</span>           str = send(<span class=\"s\"><span class=\"dl\">&quot;</span><span class=\"k\">_</span><span class=\"il\"><span class=\"idl\">#{</span>kind<span class=\"idl\">}</span></span><span class=\"k\">_callbacks</span><span class=\"dl\">&quot;</span></span>).compile(name, object)\n<span class=\"no\">427</span>           class_eval <span class=\"s\"><span class=\"dl\">&lt;&lt;-RUBY_EVAL</span></span>, <span class=\"pc\">__FILE__</span>, <span class=\"pc\">__LINE__</span> + <span class=\"i\">1</span><span class=\"s\"><span class=\"k\">\n<span class=\"no\">428</span>             def </span><span class=\"il\"><span class=\"idl\">#{</span>name<span class=\"idl\">}</span></span><span class=\"k\">() </span><span class=\"il\"><span class=\"idl\">#{</span>str<span class=\"idl\">}</span></span><span class=\"k\"> end\n<span class=\"no\">429</span>             protected :</span><span class=\"il\"><span class=\"idl\">#{</span>name<span class=\"idl\">}</span></span><span class=\"dl\">\n<span class=\"no\">430</span>           RUBY_EVAL</span></span>\n<span class=\"no\">431</span>           <span class=\"pc\">true</span>\n<span class=\"no\">432</span>         <span class=\"r\">end</span>\n<span class=\"no\">433</span>       <span class=\"r\">end</span>\n<span class=\"no\">434</span> \n<span class='container selected'><span class=\"no\">435</span>       <span class=\"c\"># This is used internally to append, prepend and skip callbacks to the</span><span class='overlay'></span></span>\n<span class=\"no\">436</span>       <span class=\"c\"># CallbackChain.</span>\n<span class=\"no\">437</span>       <span class=\"c\">#</span>\n<span class=\"no\">438</span>       <span class=\"r\">def</span> <span class=\"fu\">__update_callbacks</span>(name, filters = [], block = <span class=\"pc\">nil</span>) <span class=\"c\">#:nodoc:</span>\n<span class=\"no\">439</span>         type = [<span class=\"sy\">:before</span>, <span class=\"sy\">:after</span>, <span class=\"sy\">:around</span>].include?(filters.first) ? filters.shift : <span class=\"sy\">:before</span>\n<span class=\"no\">440</span>         options = filters.last.is_a?(<span class=\"co\">Hash</span>) ? filters.pop : {}\n<span class=\"no\">441</span>         filters.unshift(block) <span class=\"r\">if</span> block\n<span class=\"no\">442</span> \n<span class=\"no\">443</span>         ([<span class=\"pc\">self</span>] + <span class=\"co\">ActiveSupport</span>::<span class=\"co\">DescendantsTracker</span>.descendants(<span class=\"pc\">self</span>)).each <span class=\"r\">do</span> |target|\n<span class=\"no\">444</span>           chain = target.send(<span class=\"s\"><span class=\"dl\">&quot;</span><span class=\"k\">_</span><span class=\"il\"><span class=\"idl\">#{</span>name<span class=\"idl\">}</span></span><span class=\"k\">_callbacks</span><span class=\"dl\">&quot;</span></span>)\n<span class=\"no\">445</span>           <span class=\"r\">yield</span> chain, type, filters, options\n<span class=\"no\">446</span>           target.__define_runner(name)\n</span>",
    "path": "/Users/alex/.rvm/gems/ruby-1.8.7-p302@test_app/gems/activesupport-3.0.3/lib/active_support/callbacks.rb"
},
{
    "line": 409,
    "code": "<span class=\"CodeRay\"><span class=\"no\">399</span>           undef_method <span class=\"s\"><span class=\"dl\">&quot;</span><span class=\"k\">_run_</span><span class=\"il\"><span class=\"idl\">#{</span>symbol<span class=\"idl\">}</span></span><span class=\"k\">_callbacks</span><span class=\"dl\">&quot;</span></span> <span class=\"r\">if</span> method_defined?(<span class=\"s\"><span class=\"dl\">&quot;</span><span class=\"k\">_run_</span><span class=\"il\"><span class=\"idl\">#{</span>symbol<span class=\"idl\">}</span></span><span class=\"k\">_callbacks</span><span class=\"dl\">&quot;</span></span>)\n<span class=\"no\">400</span>           class_eval <span class=\"s\"><span class=\"dl\">&lt;&lt;-RUBY_EVAL</span></span>, <span class=\"pc\">__FILE__</span>, <span class=\"pc\">__LINE__</span> + <span class=\"i\">1</span><span class=\"s\"><span class=\"k\">\n<span class=\"no\">401</span>             def _run_</span><span class=\"il\"><span class=\"idl\">#{</span>symbol<span class=\"idl\">}</span></span><span class=\"k\">_callbacks(key = nil, &amp;blk)\n<span class=\"no\">402</span>               if key\n<span class=\"no\">403</span>                 name = &quot;_run__</span><span class=\"ch\">\\#</span><span class=\"k\">{self.class.name.hash.abs}__</span><span class=\"il\"><span class=\"idl\">#{</span>symbol<span class=\"idl\">}</span></span><span class=\"k\">__</span><span class=\"ch\">\\#</span><span class=\"k\">{key.hash.abs}__callbacks&quot;\n<span class=\"no\">404</span> \n<span class=\"no\">405</span>                 unless respond_to?(name)\n<span class=\"no\">406</span>                   self.class.__create_keyed_callback(name, :</span><span class=\"il\"><span class=\"idl\">#{</span>symbol<span class=\"idl\">}</span></span><span class=\"k\">, self, &amp;blk)\n<span class=\"no\">407</span>                 end\n<span class=\"no\">408</span> \n<span class='container selected'><span class=\"no\">409</span>                 send(name, &amp;blk)<span class='overlay'></span></span>\n<span class=\"no\">410</span>               else\n<span class=\"no\">411</span>                 </span><span class=\"il\"><span class=\"idl\">#{</span>body<span class=\"idl\">}</span></span><span class=\"k\">\n<span class=\"no\">412</span>               end\n<span class=\"no\">413</span>             end\n<span class=\"no\">414</span>             private :_run_</span><span class=\"il\"><span class=\"idl\">#{</span>symbol<span class=\"idl\">}</span></span><span class=\"k\">_callbacks</span><span class=\"dl\">\n<span class=\"no\">415</span>           RUBY_EVAL</span></span>\n<span class=\"no\">416</span>         <span class=\"r\">end</span>\n<span class=\"no\">417</span>       <span class=\"r\">end</span>\n<span class=\"no\">418</span> \n<span class=\"no\">419</span>       <span class=\"c\"># This is called the first time a callback is called with a particular</span>\n<span class=\"no\">420</span>       <span class=\"c\"># key. It creates a new callback method for the key, calculating</span>\n</span>",
    "path": "/Users/alex/.rvm/gems/ruby-1.8.7-p302@test_app/gems/activesupport-3.0.3/lib/active_support/callbacks.rb"
},
{
    "line": 409,
    "code": "<span class=\"CodeRay\"><span class=\"no\">399</span>           undef_method <span class=\"s\"><span class=\"dl\">&quot;</span><span class=\"k\">_run_</span><span class=\"il\"><span class=\"idl\">#{</span>symbol<span class=\"idl\">}</span></span><span class=\"k\">_callbacks</span><span class=\"dl\">&quot;</span></span> <span class=\"r\">if</span> method_defined?(<span class=\"s\"><span class=\"dl\">&quot;</span><span class=\"k\">_run_</span><span class=\"il\"><span class=\"idl\">#{</span>symbol<span class=\"idl\">}</span></span><span class=\"k\">_callbacks</span><span class=\"dl\">&quot;</span></span>)\n<span class=\"no\">400</span>           class_eval <span class=\"s\"><span class=\"dl\">&lt;&lt;-RUBY_EVAL</span></span>, <span class=\"pc\">__FILE__</span>, <span class=\"pc\">__LINE__</span> + <span class=\"i\">1</span><span class=\"s\"><span class=\"k\">\n<span class=\"no\">401</span>             def _run_</span><span class=\"il\"><span class=\"idl\">#{</span>symbol<span class=\"idl\">}</span></span><span class=\"k\">_callbacks(key = nil, &amp;blk)\n<span class=\"no\">402</span>               if key\n<span class=\"no\">403</span>                 name = &quot;_run__</span><span class=\"ch\">\\#</span><span class=\"k\">{self.class.name.hash.abs}__</span><span class=\"il\"><span class=\"idl\">#{</span>symbol<span class=\"idl\">}</span></span><span class=\"k\">__</span><span class=\"ch\">\\#</span><span class=\"k\">{key.hash.abs}__callbacks&quot;\n<span class=\"no\">404</span> \n<span class=\"no\">405</span>                 unless respond_to?(name)\n<span class=\"no\">406</span>                   self.class.__create_keyed_callback(name, :</span><span class=\"il\"><span class=\"idl\">#{</span>symbol<span class=\"idl\">}</span></span><span class=\"k\">, self, &amp;blk)\n<span class=\"no\">407</span>                 end\n<span class=\"no\">408</span> \n<span class='container selected'><span class=\"no\">409</span>                 send(name, &amp;blk)<span class='overlay'></span></span>\n<span class=\"no\">410</span>               else\n<span class=\"no\">411</span>                 </span><span class=\"il\"><span class=\"idl\">#{</span>body<span class=\"idl\">}</span></span><span class=\"k\">\n<span class=\"no\">412</span>               end\n<span class=\"no\">413</span>             end\n<span class=\"no\">414</span>             private :_run_</span><span class=\"il\"><span class=\"idl\">#{</span>symbol<span class=\"idl\">}</span></span><span class=\"k\">_callbacks</span><span class=\"dl\">\n<span class=\"no\">415</span>           RUBY_EVAL</span></span>\n<span class=\"no\">416</span>         <span class=\"r\">end</span>\n<span class=\"no\">417</span>       <span class=\"r\">end</span>\n<span class=\"no\">418</span> \n<span class=\"no\">419</span>       <span class=\"c\"># This is called the first time a callback is called with a particular</span>\n<span class=\"no\">420</span>       <span class=\"c\"># key. It creates a new callback method for the key, calculating</span>\n</span>",
    "path": "/Users/alex/.rvm/gems/ruby-1.8.7-p302@test_app/gems/activesupport-3.0.3/lib/active_support/callbacks.rb"
},
{
    "line": 93,
    "code": "<span class=\"CodeRay\"><span class=\"no\"> 83</span>   <span class=\"c\">#   saved</span>\n<span class=\"no\"> 84</span>   <span class=\"c\">#</span>\n<span class=\"no\"> 85</span>   <span class=\"r\">module</span> <span class=\"cl\">Callbacks</span>\n<span class=\"no\"> 86</span>     extend <span class=\"co\">Concern</span>\n<span class=\"no\"> 87</span> \n<span class=\"no\"> 88</span>     included <span class=\"r\">do</span>\n<span class=\"no\"> 89</span>       extend <span class=\"co\">ActiveSupport</span>::<span class=\"co\">DescendantsTracker</span>\n<span class=\"no\"> 90</span>     <span class=\"r\">end</span>\n<span class=\"no\"> 91</span> \n<span class=\"no\"> 92</span>     <span class=\"r\">def</span> <span class=\"fu\">run_callbacks</span>(kind, *args, &amp;block)\n<span class='container selected'><span class=\"no\"> 93</span>       send(<span class=\"s\"><span class=\"dl\">&quot;</span><span class=\"k\">_run_</span><span class=\"il\"><span class=\"idl\">#{</span>kind<span class=\"idl\">}</span></span><span class=\"k\">_callbacks</span><span class=\"dl\">&quot;</span></span>, *args, &amp;block)<span class='overlay'></span></span>\n<span class=\"no\"> 94</span>     <span class=\"r\">end</span>\n<span class=\"no\"> 95</span> \n<span class=\"no\"> 96</span>     <span class=\"r\">def</span> <span class=\"fu\">callback</span>(kind)\n<span class=\"no\"> 97</span>       <span class=\"co\">ActiveSupport</span>::<span class=\"co\">Deprecation</span>.warn(<span class=\"s\"><span class=\"dl\">&quot;</span><span class=\"k\">callback is deprecated. Please use run_callbacks</span><span class=\"dl\">&quot;</span></span>)\n<span class=\"no\"> 98</span>       send(<span class=\"s\"><span class=\"dl\">&quot;</span><span class=\"k\">_run_</span><span class=\"il\"><span class=\"idl\">#{</span>kind<span class=\"idl\">}</span></span><span class=\"k\">_callbacks</span><span class=\"dl\">&quot;</span></span>)\n<span class=\"no\"> 99</span>     <span class=\"r\">end</span>\n<span class=\"no\">100</span> \n<span class=\"no\">101</span>     <span class=\"r\">class</span> <span class=\"cl\">Callback</span>\n<span class=\"no\">102</span>       <span class=\"cv\">@@_callback_sequence</span> = <span class=\"i\">0</span>\n<span class=\"no\">103</span> \n<span class=\"no\">104</span>       attr_accessor <span class=\"sy\">:chain</span>, <span class=\"sy\">:filter</span>, <span class=\"sy\">:kind</span>, <span class=\"sy\">:options</span>, <span class=\"sy\">:per_key</span>, <span class=\"sy\">:klass</span>, <span class=\"sy\">:raw_filter</span>\n</span>",
    "path": "/Users/alex/.rvm/gems/ruby-1.8.7-p302@test_app/gems/activesupport-3.0.3/lib/active_support/callbacks.rb"
},
{
    "line": 93,
    "code": "<span class=\"CodeRay\"><span class=\"no\"> 83</span>   <span class=\"c\">#   saved</span>\n<span class=\"no\"> 84</span>   <span class=\"c\">#</span>\n<span class=\"no\"> 85</span>   <span class=\"r\">module</span> <span class=\"cl\">Callbacks</span>\n<span class=\"no\"> 86</span>     extend <span class=\"co\">Concern</span>\n<span class=\"no\"> 87</span> \n<span class=\"no\"> 88</span>     included <span class=\"r\">do</span>\n<span class=\"no\"> 89</span>       extend <span class=\"co\">ActiveSupport</span>::<span class=\"co\">DescendantsTracker</span>\n<span class=\"no\"> 90</span>     <span class=\"r\">end</span>\n<span class=\"no\"> 91</span> \n<span class=\"no\"> 92</span>     <span class=\"r\">def</span> <span class=\"fu\">run_callbacks</span>(kind, *args, &amp;block)\n<span class='container selected'><span class=\"no\"> 93</span>       send(<span class=\"s\"><span class=\"dl\">&quot;</span><span class=\"k\">_run_</span><span class=\"il\"><span class=\"idl\">#{</span>kind<span class=\"idl\">}</span></span><span class=\"k\">_callbacks</span><span class=\"dl\">&quot;</span></span>, *args, &amp;block)<span class='overlay'></span></span>\n<span class=\"no\"> 94</span>     <span class=\"r\">end</span>\n<span class=\"no\"> 95</span> \n<span class=\"no\"> 96</span>     <span class=\"r\">def</span> <span class=\"fu\">callback</span>(kind)\n<span class=\"no\"> 97</span>       <span class=\"co\">ActiveSupport</span>::<span class=\"co\">Deprecation</span>.warn(<span class=\"s\"><span class=\"dl\">&quot;</span><span class=\"k\">callback is deprecated. Please use run_callbacks</span><span class=\"dl\">&quot;</span></span>)\n<span class=\"no\"> 98</span>       send(<span class=\"s\"><span class=\"dl\">&quot;</span><span class=\"k\">_run_</span><span class=\"il\"><span class=\"idl\">#{</span>kind<span class=\"idl\">}</span></span><span class=\"k\">_callbacks</span><span class=\"dl\">&quot;</span></span>)\n<span class=\"no\"> 99</span>     <span class=\"r\">end</span>\n<span class=\"no\">100</span> \n<span class=\"no\">101</span>     <span class=\"r\">class</span> <span class=\"cl\">Callback</span>\n<span class=\"no\">102</span>       <span class=\"cv\">@@_callback_sequence</span> = <span class=\"i\">0</span>\n<span class=\"no\">103</span> \n<span class=\"no\">104</span>       attr_accessor <span class=\"sy\">:chain</span>, <span class=\"sy\">:filter</span>, <span class=\"sy\">:kind</span>, <span class=\"sy\">:options</span>, <span class=\"sy\">:per_key</span>, <span class=\"sy\">:klass</span>, <span class=\"sy\">:raw_filter</span>\n</span>",
    "path": "/Users/alex/.rvm/gems/ruby-1.8.7-p302@test_app/gems/activesupport-3.0.3/lib/active_support/callbacks.rb"
},
{
    "line": 17,
    "code": "<span class=\"CodeRay\"><span class=\"no\"> 7</span>     <span class=\"c\"># for ActiveSupport::Callbacks.</span>\n<span class=\"no\"> 8</span>     include <span class=\"co\">ActiveSupport</span>::<span class=\"co\">Callbacks</span>\n<span class=\"no\"> 9</span> \n<span class=\"no\">10</span>     included <span class=\"r\">do</span>\n<span class=\"no\">11</span>       define_callbacks <span class=\"sy\">:process_action</span>, <span class=\"sy\">:terminator</span> =&gt; <span class=\"s\"><span class=\"dl\">&quot;</span><span class=\"k\">response_body</span><span class=\"dl\">&quot;</span></span>\n<span class=\"no\">12</span>     <span class=\"r\">end</span>\n<span class=\"no\">13</span> \n<span class=\"no\">14</span>     <span class=\"c\"># Override AbstractController::Base's process_action to run the</span>\n<span class=\"no\">15</span>     <span class=\"c\"># process_action callbacks around the normal behavior.</span>\n<span class=\"no\">16</span>     <span class=\"r\">def</span> <span class=\"fu\">process_action</span>(method_name)\n<span class='container selected'><span class=\"no\">17</span>       run_callbacks(<span class=\"sy\">:process_action</span>, method_name) <span class=\"r\">do</span><span class='overlay'></span></span>\n<span class=\"no\">18</span>         <span class=\"r\">super</span>\n<span class=\"no\">19</span>       <span class=\"r\">end</span>\n<span class=\"no\">20</span>     <span class=\"r\">end</span>\n<span class=\"no\">21</span> \n<span class=\"no\">22</span>     <span class=\"r\">module</span> <span class=\"cl\">ClassMethods</span>\n<span class=\"no\">23</span>       <span class=\"c\"># If :only or :except are used, convert the options into the</span>\n<span class=\"no\">24</span>       <span class=\"c\"># primitive form (:per_key) used by ActiveSupport::Callbacks.</span>\n<span class=\"no\">25</span>       <span class=\"c\"># The basic idea is that :only =&gt; :index gets converted to</span>\n<span class=\"no\">26</span>       <span class=\"c\"># :if =&gt; proc {|c| c.action_name == &quot;index&quot; }, but that the</span>\n<span class=\"no\">27</span>       <span class=\"c\"># proc is only evaluated once per action for the lifetime of</span>\n<span class=\"no\">28</span>       <span class=\"c\"># a Rails process.</span>\n</span>",
    "path": "/Users/alex/.rvm/gems/ruby-1.8.7-p302@test_app/gems/actionpack-3.0.3/lib/abstract_controller/callbacks.rb"
},
{
    "line": 30,
    "code": "<span class=\"CodeRay\"><span class=\"no\">20</span>         <span class=\"sy\">:action</span>     =&gt; <span class=\"pc\">self</span>.action_name,\n<span class=\"no\">21</span>         <span class=\"sy\">:params</span>     =&gt; request.filtered_parameters,\n<span class=\"no\">22</span>         <span class=\"sy\">:formats</span>    =&gt; request.formats.map(&amp;<span class=\"sy\">:to_sym</span>),\n<span class=\"no\">23</span>         <span class=\"sy\">:method</span>     =&gt; request.method,\n<span class=\"no\">24</span>         <span class=\"sy\">:path</span>       =&gt; (request.fullpath <span class=\"r\">rescue</span> <span class=\"s\"><span class=\"dl\">&quot;</span><span class=\"k\">unknown</span><span class=\"dl\">&quot;</span></span>)\n<span class=\"no\">25</span>       }\n<span class=\"no\">26</span> \n<span class=\"no\">27</span>       <span class=\"co\">ActiveSupport</span>::<span class=\"co\">Notifications</span>.instrument(<span class=\"s\"><span class=\"dl\">&quot;</span><span class=\"k\">start_processing.action_controller</span><span class=\"dl\">&quot;</span></span>, raw_payload.dup)\n<span class=\"no\">28</span> \n<span class=\"no\">29</span>       <span class=\"co\">ActiveSupport</span>::<span class=\"co\">Notifications</span>.instrument(<span class=\"s\"><span class=\"dl\">&quot;</span><span class=\"k\">process_action.action_controller</span><span class=\"dl\">&quot;</span></span>, raw_payload) <span class=\"r\">do</span> |payload|\n<span class='container selected'><span class=\"no\">30</span>         result = <span class=\"r\">super</span><span class='overlay'></span></span>\n<span class=\"no\">31</span>         payload[<span class=\"sy\">:status</span>] = response.status\n<span class=\"no\">32</span>         append_info_to_payload(payload)\n<span class=\"no\">33</span>         result\n<span class=\"no\">34</span>       <span class=\"r\">end</span>\n<span class=\"no\">35</span>     <span class=\"r\">end</span>\n<span class=\"no\">36</span> \n<span class=\"no\">37</span>     <span class=\"r\">def</span> <span class=\"fu\">render</span>(*args)\n<span class=\"no\">38</span>       render_output = <span class=\"pc\">nil</span>\n<span class=\"no\">39</span>       <span class=\"pc\">self</span>.view_runtime = cleanup_view_runtime <span class=\"r\">do</span>\n<span class=\"no\">40</span>         <span class=\"co\">Benchmark</span>.ms { render_output = <span class=\"r\">super</span> }\n<span class=\"no\">41</span>       <span class=\"r\">end</span>\n</span>",
    "path": "/Users/alex/.rvm/gems/ruby-1.8.7-p302@test_app/gems/actionpack-3.0.3/lib/action_controller/metal/instrumentation.rb"
},
{
    "line": 52,
    "code": "<span class=\"CodeRay\"><span class=\"no\">42</span>     autoload <span class=\"sy\">:Fanout</span>, <span class=\"s\"><span class=\"dl\">'</span><span class=\"k\">active_support/notifications/fanout</span><span class=\"dl\">'</span></span>\n<span class=\"no\">43</span> \n<span class=\"no\">44</span>     <span class=\"iv\">@instrumenters</span> = <span class=\"co\">Hash</span>.new { |h,k| h[k] = notifier.listening?(k) }\n<span class=\"no\">45</span> \n<span class=\"no\">46</span>     <span class=\"r\">class</span> &lt;&lt; <span class=\"cl\">self</span>\n<span class=\"no\">47</span>       attr_writer <span class=\"sy\">:notifier</span>\n<span class=\"no\">48</span>       delegate <span class=\"sy\">:publish</span>, <span class=\"sy\">:to</span> =&gt; <span class=\"sy\">:notifier</span>\n<span class=\"no\">49</span> \n<span class=\"no\">50</span>       <span class=\"r\">def</span> <span class=\"fu\">instrument</span>(name, payload = {})\n<span class=\"no\">51</span>         <span class=\"r\">if</span> <span class=\"iv\">@instrumenters</span>[name]\n<span class='container selected'><span class=\"no\">52</span>           instrumenter.instrument(name, payload) { <span class=\"r\">yield</span> payload <span class=\"r\">if</span> block_given? }<span class='overlay'></span></span>\n<span class=\"no\">53</span>         <span class=\"r\">else</span>\n<span class=\"no\">54</span>           <span class=\"r\">yield</span> payload <span class=\"r\">if</span> block_given?\n<span class=\"no\">55</span>         <span class=\"r\">end</span>\n<span class=\"no\">56</span>       <span class=\"r\">end</span>\n<span class=\"no\">57</span> \n<span class=\"no\">58</span>       <span class=\"r\">def</span> <span class=\"fu\">subscribe</span>(*args, &amp;block)\n<span class=\"no\">59</span>         notifier.subscribe(*args, &amp;block).tap <span class=\"r\">do</span>\n<span class=\"no\">60</span>           <span class=\"iv\">@instrumenters</span>.clear\n<span class=\"no\">61</span>         <span class=\"r\">end</span>\n<span class=\"no\">62</span>       <span class=\"r\">end</span>\n<span class=\"no\">63</span> \n</span>",
    "path": "/Users/alex/.rvm/gems/ruby-1.8.7-p302@test_app/gems/activesupport-3.0.3/lib/active_support/notifications.rb"
},
{
    "line": 21,
    "code": "<span class=\"CodeRay\"><span class=\"no\">11</span>         <span class=\"iv\">@notifier</span> = notifier\n<span class=\"no\">12</span>       <span class=\"r\">end</span>\n<span class=\"no\">13</span> \n<span class=\"no\">14</span>       <span class=\"c\"># Instrument the given block by measuring the time taken to execute it</span>\n<span class=\"no\">15</span>       <span class=\"c\"># and publish it. Notice that events get sent even if an error occurs</span>\n<span class=\"no\">16</span>       <span class=\"c\"># in the passed-in block</span>\n<span class=\"no\">17</span>       <span class=\"r\">def</span> <span class=\"fu\">instrument</span>(name, payload={})\n<span class=\"no\">18</span>         started = <span class=\"co\">Time</span>.now\n<span class=\"no\">19</span> \n<span class=\"no\">20</span>         <span class=\"r\">begin</span>\n<span class='container selected'><span class=\"no\">21</span>           <span class=\"r\">yield</span><span class='overlay'></span></span>\n<span class=\"no\">22</span>         <span class=\"r\">rescue</span> <span class=\"co\">Exception</span> =&gt; e\n<span class=\"no\">23</span>           payload[<span class=\"sy\">:exception</span>] = [e.class.name, e.message]\n<span class=\"no\">24</span>           raise e\n<span class=\"no\">25</span>         <span class=\"r\">ensure</span>\n<span class=\"no\">26</span>           <span class=\"iv\">@notifier</span>.publish(name, started, <span class=\"co\">Time</span>.now, <span class=\"iv\">@id</span>, payload)\n<span class=\"no\">27</span>         <span class=\"r\">end</span>\n<span class=\"no\">28</span>       <span class=\"r\">end</span>\n<span class=\"no\">29</span> \n<span class=\"no\">30</span>       private\n<span class=\"no\">31</span>         <span class=\"r\">def</span> <span class=\"fu\">unique_id</span>\n<span class=\"no\">32</span>           <span class=\"co\">SecureRandom</span>.hex(<span class=\"i\">10</span>)\n</span>",
    "path": "/Users/alex/.rvm/gems/ruby-1.8.7-p302@test_app/gems/activesupport-3.0.3/lib/active_support/notifications/instrumenter.rb"
},
{
    "line": 52,
    "code": "<span class=\"CodeRay\"><span class=\"no\">42</span>     autoload <span class=\"sy\">:Fanout</span>, <span class=\"s\"><span class=\"dl\">'</span><span class=\"k\">active_support/notifications/fanout</span><span class=\"dl\">'</span></span>\n<span class=\"no\">43</span> \n<span class=\"no\">44</span>     <span class=\"iv\">@instrumenters</span> = <span class=\"co\">Hash</span>.new { |h,k| h[k] = notifier.listening?(k) }\n<span class=\"no\">45</span> \n<span class=\"no\">46</span>     <span class=\"r\">class</span> &lt;&lt; <span class=\"cl\">self</span>\n<span class=\"no\">47</span>       attr_writer <span class=\"sy\">:notifier</span>\n<span class=\"no\">48</span>       delegate <span class=\"sy\">:publish</span>, <span class=\"sy\">:to</span> =&gt; <span class=\"sy\">:notifier</span>\n<span class=\"no\">49</span> \n<span class=\"no\">50</span>       <span class=\"r\">def</span> <span class=\"fu\">instrument</span>(name, payload = {})\n<span class=\"no\">51</span>         <span class=\"r\">if</span> <span class=\"iv\">@instrumenters</span>[name]\n<span class='container selected'><span class=\"no\">52</span>           instrumenter.instrument(name, payload) { <span class=\"r\">yield</span> payload <span class=\"r\">if</span> block_given? }<span class='overlay'></span></span>\n<span class=\"no\">53</span>         <span class=\"r\">else</span>\n<span class=\"no\">54</span>           <span class=\"r\">yield</span> payload <span class=\"r\">if</span> block_given?\n<span class=\"no\">55</span>         <span class=\"r\">end</span>\n<span class=\"no\">56</span>       <span class=\"r\">end</span>\n<span class=\"no\">57</span> \n<span class=\"no\">58</span>       <span class=\"r\">def</span> <span class=\"fu\">subscribe</span>(*args, &amp;block)\n<span class=\"no\">59</span>         notifier.subscribe(*args, &amp;block).tap <span class=\"r\">do</span>\n<span class=\"no\">60</span>           <span class=\"iv\">@instrumenters</span>.clear\n<span class=\"no\">61</span>         <span class=\"r\">end</span>\n<span class=\"no\">62</span>       <span class=\"r\">end</span>\n<span class=\"no\">63</span> \n</span>",
    "path": "/Users/alex/.rvm/gems/ruby-1.8.7-p302@test_app/gems/activesupport-3.0.3/lib/active_support/notifications.rb"
},
{
    "line": 29,
    "code": "<span class=\"CodeRay\"><span class=\"no\">19</span>         <span class=\"sy\">:controller</span> =&gt; <span class=\"pc\">self</span>.class.name,\n<span class=\"no\">20</span>         <span class=\"sy\">:action</span>     =&gt; <span class=\"pc\">self</span>.action_name,\n<span class=\"no\">21</span>         <span class=\"sy\">:params</span>     =&gt; request.filtered_parameters,\n<span class=\"no\">22</span>         <span class=\"sy\">:formats</span>    =&gt; request.formats.map(&amp;<span class=\"sy\">:to_sym</span>),\n<span class=\"no\">23</span>         <span class=\"sy\">:method</span>     =&gt; request.method,\n<span class=\"no\">24</span>         <span class=\"sy\">:path</span>       =&gt; (request.fullpath <span class=\"r\">rescue</span> <span class=\"s\"><span class=\"dl\">&quot;</span><span class=\"k\">unknown</span><span class=\"dl\">&quot;</span></span>)\n<span class=\"no\">25</span>       }\n<span class=\"no\">26</span> \n<span class=\"no\">27</span>       <span class=\"co\">ActiveSupport</span>::<span class=\"co\">Notifications</span>.instrument(<span class=\"s\"><span class=\"dl\">&quot;</span><span class=\"k\">start_processing.action_controller</span><span class=\"dl\">&quot;</span></span>, raw_payload.dup)\n<span class=\"no\">28</span> \n<span class='container selected'><span class=\"no\">29</span>       <span class=\"co\">ActiveSupport</span>::<span class=\"co\">Notifications</span>.instrument(<span class=\"s\"><span class=\"dl\">&quot;</span><span class=\"k\">process_action.action_controller</span><span class=\"dl\">&quot;</span></span>, raw_payload) <span class=\"r\">do</span> |payload|<span class='overlay'></span></span>\n<span class=\"no\">30</span>         result = <span class=\"r\">super</span>\n<span class=\"no\">31</span>         payload[<span class=\"sy\">:status</span>] = response.status\n<span class=\"no\">32</span>         append_info_to_payload(payload)\n<span class=\"no\">33</span>         result\n<span class=\"no\">34</span>       <span class=\"r\">end</span>\n<span class=\"no\">35</span>     <span class=\"r\">end</span>\n<span class=\"no\">36</span> \n<span class=\"no\">37</span>     <span class=\"r\">def</span> <span class=\"fu\">render</span>(*args)\n<span class=\"no\">38</span>       render_output = <span class=\"pc\">nil</span>\n<span class=\"no\">39</span>       <span class=\"pc\">self</span>.view_runtime = cleanup_view_runtime <span class=\"r\">do</span>\n<span class=\"no\">40</span>         <span class=\"co\">Benchmark</span>.ms { render_output = <span class=\"r\">super</span> }\n</span>",
    "path": "/Users/alex/.rvm/gems/ruby-1.8.7-p302@test_app/gems/actionpack-3.0.3/lib/action_controller/metal/instrumentation.rb"
},
{
    "line": 17,
    "code": "<span class=\"CodeRay\"><span class=\"no\"> 7</span>       <span class=\"r\">if</span> (exception.respond_to?(<span class=\"sy\">:original_exception</span>) &amp;&amp;\n<span class=\"no\"> 8</span>           (orig_exception = exception.original_exception) &amp;&amp;\n<span class=\"no\"> 9</span>           handler_for_rescue(orig_exception))\n<span class=\"no\">10</span>         exception = orig_exception\n<span class=\"no\">11</span>       <span class=\"r\">end</span>\n<span class=\"no\">12</span>       <span class=\"r\">super</span>(exception)\n<span class=\"no\">13</span>     <span class=\"r\">end</span>\n<span class=\"no\">14</span> \n<span class=\"no\">15</span>     private\n<span class=\"no\">16</span>       <span class=\"r\">def</span> <span class=\"fu\">process_action</span>(*args)\n<span class='container selected'><span class=\"no\">17</span>         <span class=\"r\">super</span><span class='overlay'></span></span>\n<span class=\"no\">18</span>       <span class=\"r\">rescue</span> <span class=\"co\">Exception</span> =&gt; exception\n<span class=\"no\">19</span>         rescue_with_handler(exception) || raise(exception)\n<span class=\"no\">20</span>       <span class=\"r\">end</span>\n<span class=\"no\">21</span>   <span class=\"r\">end</span>\n<span class=\"no\">22</span> <span class=\"r\">end</span>\n</span>",
    "path": "/Users/alex/.rvm/gems/ruby-1.8.7-p302@test_app/gems/actionpack-3.0.3/lib/action_controller/metal/rescue.rb"
},
{
    "line": 120,
    "code": "<span class=\"CodeRay\"><span class=\"no\">110</span>     <span class=\"c\"># * &lt;tt&gt;self&lt;/tt&gt;</span>\n<span class=\"no\">111</span>     <span class=\"r\">def</span> <span class=\"fu\">process</span>(action, *args)\n<span class=\"no\">112</span>       <span class=\"iv\">@_action_name</span> = action_name = action.to_s\n<span class=\"no\">113</span> \n<span class=\"no\">114</span>       <span class=\"r\">unless</span> action_name = method_for_action(action_name)\n<span class=\"no\">115</span>         raise <span class=\"co\">ActionNotFound</span>, <span class=\"s\"><span class=\"dl\">&quot;</span><span class=\"k\">The action '</span><span class=\"il\"><span class=\"idl\">#{</span>action<span class=\"idl\">}</span></span><span class=\"k\">' could not be found for </span><span class=\"il\"><span class=\"idl\">#{</span><span class=\"pc\">self</span>.class.name<span class=\"idl\">}</span></span><span class=\"dl\">&quot;</span></span>\n<span class=\"no\">116</span>       <span class=\"r\">end</span>\n<span class=\"no\">117</span> \n<span class=\"no\">118</span>       <span class=\"iv\">@_response_body</span> = <span class=\"pc\">nil</span>\n<span class=\"no\">119</span> \n<span class='container selected'><span class=\"no\">120</span>       process_action(action_name, *args)<span class='overlay'></span></span>\n<span class=\"no\">121</span>     <span class=\"r\">end</span>\n<span class=\"no\">122</span> \n<span class=\"no\">123</span>     <span class=\"c\"># Delegates to the class' #controller_path</span>\n<span class=\"no\">124</span>     <span class=\"r\">def</span> <span class=\"fu\">controller_path</span>\n<span class=\"no\">125</span>       <span class=\"pc\">self</span>.class.controller_path\n<span class=\"no\">126</span>     <span class=\"r\">end</span>\n<span class=\"no\">127</span> \n<span class=\"no\">128</span>     <span class=\"r\">def</span> <span class=\"fu\">action_methods</span>\n<span class=\"no\">129</span>       <span class=\"pc\">self</span>.class.action_methods\n<span class=\"no\">130</span>     <span class=\"r\">end</span>\n<span class=\"no\">131</span> \n</span>",
    "path": "/Users/alex/.rvm/gems/ruby-1.8.7-p302@test_app/gems/actionpack-3.0.3/lib/abstract_controller/base.rb"
},
{
    "line": 40,
    "code": "<span class=\"CodeRay\"><span class=\"no\">30</span>   <span class=\"r\">end</span>\n<span class=\"no\">31</span> \n<span class=\"no\">32</span>   <span class=\"r\">module</span> <span class=\"cl\">Rendering</span>\n<span class=\"no\">33</span>     extend <span class=\"co\">ActiveSupport</span>::<span class=\"co\">Concern</span>\n<span class=\"no\">34</span> \n<span class=\"no\">35</span>     include <span class=\"co\">AbstractController</span>::<span class=\"co\">ViewPaths</span>\n<span class=\"no\">36</span> \n<span class=\"no\">37</span>     <span class=\"c\"># Overwrite process to setup I18n proxy.</span>\n<span class=\"no\">38</span>     <span class=\"r\">def</span> <span class=\"fu\">process</span>(*) <span class=\"c\">#:nodoc:</span>\n<span class=\"no\">39</span>       old_config, <span class=\"co\">I18n</span>.config = <span class=\"co\">I18n</span>.config, <span class=\"co\">I18nProxy</span>.new(<span class=\"co\">I18n</span>.config, lookup_context)\n<span class='container selected'><span class=\"no\">40</span>       <span class=\"r\">super</span><span class='overlay'></span></span>\n<span class=\"no\">41</span>     <span class=\"r\">ensure</span>\n<span class=\"no\">42</span>       <span class=\"co\">I18n</span>.config = old_config\n<span class=\"no\">43</span>     <span class=\"r\">end</span>\n<span class=\"no\">44</span> \n<span class=\"no\">45</span>     <span class=\"r\">module</span> <span class=\"cl\">ClassMethods</span>\n<span class=\"no\">46</span>       <span class=\"r\">def</span> <span class=\"fu\">view_context_class</span>\n<span class=\"no\">47</span>         <span class=\"iv\">@view_context_class</span> ||= <span class=\"r\">begin</span>\n<span class=\"no\">48</span>           controller = <span class=\"pc\">self</span>\n<span class=\"no\">49</span>           <span class=\"co\">Class</span>.new(<span class=\"co\">ActionView</span>::<span class=\"co\">Base</span>) <span class=\"r\">do</span>\n<span class=\"no\">50</span>             <span class=\"r\">if</span> controller.respond_to?(<span class=\"sy\">:_routes</span>)\n<span class=\"no\">51</span>               include controller._routes.url_helpers\n</span>",
    "path": "/Users/alex/.rvm/gems/ruby-1.8.7-p302@test_app/gems/actionpack-3.0.3/lib/abstract_controller/rendering.rb"
},
{
    "line": 138,
    "code": "<span class=\"CodeRay\"><span class=\"no\">128</span>     <span class=\"r\">def</span> <span class=\"fu\">response_body=</span>(val)\n<span class=\"no\">129</span>       body = val.respond_to?(<span class=\"sy\">:each</span>) ? val : [val]\n<span class=\"no\">130</span>       <span class=\"r\">super</span> body\n<span class=\"no\">131</span>     <span class=\"r\">end</span>\n<span class=\"no\">132</span> \n<span class=\"no\">133</span>     <span class=\"c\"># :api: private</span>\n<span class=\"no\">134</span>     <span class=\"r\">def</span> <span class=\"fu\">dispatch</span>(name, request)\n<span class=\"no\">135</span>       <span class=\"iv\">@_request</span> = request\n<span class=\"no\">136</span>       <span class=\"iv\">@_env</span> = request.env\n<span class=\"no\">137</span>       <span class=\"iv\">@_env</span>[<span class=\"s\"><span class=\"dl\">'</span><span class=\"k\">action_controller.instance</span><span class=\"dl\">'</span></span>] = <span class=\"pc\">self</span>\n<span class='container selected'><span class=\"no\">138</span>       process(name)<span class='overlay'></span></span>\n<span class=\"no\">139</span>       to_a\n<span class=\"no\">140</span>     <span class=\"r\">end</span>\n<span class=\"no\">141</span> \n<span class=\"no\">142</span>     <span class=\"c\"># :api: private</span>\n<span class=\"no\">143</span>     <span class=\"r\">def</span> <span class=\"fu\">to_a</span>\n<span class=\"no\">144</span>       response ? response.to_a : [status, headers, response_body]\n<span class=\"no\">145</span>     <span class=\"r\">end</span>\n<span class=\"no\">146</span> \n<span class=\"no\">147</span>     class_attribute <span class=\"sy\">:middleware_stack</span>\n<span class=\"no\">148</span>     <span class=\"pc\">self</span>.middleware_stack = <span class=\"co\">ActionController</span>::<span class=\"co\">MiddlewareStack</span>.new\n<span class=\"no\">149</span> \n</span>",
    "path": "/Users/alex/.rvm/gems/ruby-1.8.7-p302@test_app/gems/actionpack-3.0.3/lib/action_controller/metal.rb"
},
{
    "line": 14,
    "code": "<span class=\"CodeRay\"><span class=\"no\"> 4</span> <span class=\"r\">module</span> <span class=\"cl\">ActionController</span>\n<span class=\"no\"> 5</span>   <span class=\"r\">module</span> <span class=\"cl\">RackDelegation</span>\n<span class=\"no\"> 6</span>     extend <span class=\"co\">ActiveSupport</span>::<span class=\"co\">Concern</span>\n<span class=\"no\"> 7</span> \n<span class=\"no\"> 8</span>     delegate <span class=\"sy\">:headers</span>, <span class=\"sy\">:status=</span>, <span class=\"sy\">:location=</span>, <span class=\"sy\">:content_type=</span>,\n<span class=\"no\"> 9</span>              <span class=\"sy\">:status</span>, <span class=\"sy\">:location</span>, <span class=\"sy\">:content_type</span>, <span class=\"sy\">:to</span> =&gt; <span class=\"s\"><span class=\"dl\">&quot;</span><span class=\"k\">@_response</span><span class=\"dl\">&quot;</span></span>\n<span class=\"no\">10</span> \n<span class=\"no\">11</span>     <span class=\"r\">def</span> <span class=\"fu\">dispatch</span>(action, request, response = <span class=\"co\">ActionDispatch</span>::<span class=\"co\">Response</span>.new)\n<span class=\"no\">12</span>       <span class=\"iv\">@_response</span> ||= response\n<span class=\"no\">13</span>       <span class=\"iv\">@_response</span>.request ||= request\n<span class='container selected'><span class=\"no\">14</span>       <span class=\"r\">super</span>(action, request)<span class='overlay'></span></span>\n<span class=\"no\">15</span>     <span class=\"r\">end</span>\n<span class=\"no\">16</span> \n<span class=\"no\">17</span>     <span class=\"r\">def</span> <span class=\"fu\">response_body=</span>(body)\n<span class=\"no\">18</span>       response.body = body <span class=\"r\">if</span> response\n<span class=\"no\">19</span>       <span class=\"r\">super</span>\n<span class=\"no\">20</span>     <span class=\"r\">end</span>\n<span class=\"no\">21</span> \n<span class=\"no\">22</span>     <span class=\"r\">def</span> <span class=\"fu\">reset_session</span>\n<span class=\"no\">23</span>       <span class=\"iv\">@_request</span>.reset_session\n<span class=\"no\">24</span>     <span class=\"r\">end</span>\n<span class=\"no\">25</span>   <span class=\"r\">end</span>\n</span>",
    "path": "/Users/alex/.rvm/gems/ruby-1.8.7-p302@test_app/gems/actionpack-3.0.3/lib/action_controller/metal/rack_delegation.rb"
},
{
    "line": 178,
    "code": "<span class=\"CodeRay\"><span class=\"no\">168</span>     <span class=\"c\"># multiple calls into MyController.action will return the same object</span>\n<span class=\"no\">169</span>     <span class=\"c\"># for the same action.</span>\n<span class=\"no\">170</span>     <span class=\"c\">#</span>\n<span class=\"no\">171</span>     <span class=\"c\"># ==== Parameters</span>\n<span class=\"no\">172</span>     <span class=\"c\"># action&lt;#to_s&gt;:: An action name</span>\n<span class=\"no\">173</span>     <span class=\"c\">#</span>\n<span class=\"no\">174</span>     <span class=\"c\"># ==== Returns</span>\n<span class=\"no\">175</span>     <span class=\"c\"># Proc:: A rack application</span>\n<span class=\"no\">176</span>     <span class=\"r\">def</span> <span class=\"pc\">self</span>.<span class=\"fu\">action</span>(name, klass = <span class=\"co\">ActionDispatch</span>::<span class=\"co\">Request</span>)\n<span class=\"no\">177</span>       middleware_stack.build(name.to_s) <span class=\"r\">do</span> |env|\n<span class='container selected'><span class=\"no\">178</span>         new.dispatch(name, klass.new(env))<span class='overlay'></span></span>\n<span class=\"no\">179</span>       <span class=\"r\">end</span>\n<span class=\"no\">180</span>     <span class=\"r\">end</span>\n<span class=\"no\">181</span>   <span class=\"r\">end</span>\n<span class=\"no\">182</span> <span class=\"r\">end</span>\n</span>",
    "path": "/Users/alex/.rvm/gems/ruby-1.8.7-p302@test_app/gems/actionpack-3.0.3/lib/action_controller/metal.rb"
},
{
    "line": 62,
    "code": "<span class=\"CodeRay\"><span class=\"no\">52</span>         <span class=\"r\">def</span> <span class=\"fu\">controller_reference</span>(controller_param)\n<span class=\"no\">53</span>           <span class=\"r\">unless</span> controller = <span class=\"iv\">@controllers</span>[controller_param]\n<span class=\"no\">54</span>             controller_name = <span class=\"s\"><span class=\"dl\">&quot;</span><span class=\"il\"><span class=\"idl\">#{</span>controller_param.camelize<span class=\"idl\">}</span></span><span class=\"k\">Controller</span><span class=\"dl\">&quot;</span></span>\n<span class=\"no\">55</span>             controller = <span class=\"iv\">@controllers</span>[controller_param] =\n<span class=\"no\">56</span>               <span class=\"co\">ActiveSupport</span>::<span class=\"co\">Dependencies</span>.ref(controller_name)\n<span class=\"no\">57</span>           <span class=\"r\">end</span>\n<span class=\"no\">58</span>           controller.get\n<span class=\"no\">59</span>         <span class=\"r\">end</span>\n<span class=\"no\">60</span> \n<span class=\"no\">61</span>         <span class=\"r\">def</span> <span class=\"fu\">dispatch</span>(controller, action, env)\n<span class='container selected'><span class=\"no\">62</span>           controller.action(action).call(env)<span class='overlay'></span></span>\n<span class=\"no\">63</span>         <span class=\"r\">end</span>\n<span class=\"no\">64</span> \n<span class=\"no\">65</span>         <span class=\"r\">def</span> <span class=\"fu\">merge_default_action!</span>(params)\n<span class=\"no\">66</span>           params[<span class=\"sy\">:action</span>] ||= <span class=\"s\"><span class=\"dl\">'</span><span class=\"k\">index</span><span class=\"dl\">'</span></span>\n<span class=\"no\">67</span>         <span class=\"r\">end</span>\n<span class=\"no\">68</span> \n<span class=\"no\">69</span>         <span class=\"r\">def</span> <span class=\"fu\">split_glob_param!</span>(params)\n<span class=\"no\">70</span>           params[<span class=\"iv\">@glob_param</span>] = params[<span class=\"iv\">@glob_param</span>].split(<span class=\"s\"><span class=\"dl\">'</span><span class=\"k\">/</span><span class=\"dl\">'</span></span>).map { |v| <span class=\"co\">URI</span>.unescape(v) }\n<span class=\"no\">71</span>         <span class=\"r\">end</span>\n<span class=\"no\">72</span>       <span class=\"r\">end</span>\n<span class=\"no\">73</span> \n</span>",
    "path": "/Users/alex/.rvm/gems/ruby-1.8.7-p302@test_app/gems/actionpack-3.0.3/lib/action_dispatch/routing/route_set.rb"
},
{
    "line": 62,
    "code": "<span class=\"CodeRay\"><span class=\"no\">52</span>         <span class=\"r\">def</span> <span class=\"fu\">controller_reference</span>(controller_param)\n<span class=\"no\">53</span>           <span class=\"r\">unless</span> controller = <span class=\"iv\">@controllers</span>[controller_param]\n<span class=\"no\">54</span>             controller_name = <span class=\"s\"><span class=\"dl\">&quot;</span><span class=\"il\"><span class=\"idl\">#{</span>controller_param.camelize<span class=\"idl\">}</span></span><span class=\"k\">Controller</span><span class=\"dl\">&quot;</span></span>\n<span class=\"no\">55</span>             controller = <span class=\"iv\">@controllers</span>[controller_param] =\n<span class=\"no\">56</span>               <span class=\"co\">ActiveSupport</span>::<span class=\"co\">Dependencies</span>.ref(controller_name)\n<span class=\"no\">57</span>           <span class=\"r\">end</span>\n<span class=\"no\">58</span>           controller.get\n<span class=\"no\">59</span>         <span class=\"r\">end</span>\n<span class=\"no\">60</span> \n<span class=\"no\">61</span>         <span class=\"r\">def</span> <span class=\"fu\">dispatch</span>(controller, action, env)\n<span class='container selected'><span class=\"no\">62</span>           controller.action(action).call(env)<span class='overlay'></span></span>\n<span class=\"no\">63</span>         <span class=\"r\">end</span>\n<span class=\"no\">64</span> \n<span class=\"no\">65</span>         <span class=\"r\">def</span> <span class=\"fu\">merge_default_action!</span>(params)\n<span class=\"no\">66</span>           params[<span class=\"sy\">:action</span>] ||= <span class=\"s\"><span class=\"dl\">'</span><span class=\"k\">index</span><span class=\"dl\">'</span></span>\n<span class=\"no\">67</span>         <span class=\"r\">end</span>\n<span class=\"no\">68</span> \n<span class=\"no\">69</span>         <span class=\"r\">def</span> <span class=\"fu\">split_glob_param!</span>(params)\n<span class=\"no\">70</span>           params[<span class=\"iv\">@glob_param</span>] = params[<span class=\"iv\">@glob_param</span>].split(<span class=\"s\"><span class=\"dl\">'</span><span class=\"k\">/</span><span class=\"dl\">'</span></span>).map { |v| <span class=\"co\">URI</span>.unescape(v) }\n<span class=\"no\">71</span>         <span class=\"r\">end</span>\n<span class=\"no\">72</span>       <span class=\"r\">end</span>\n<span class=\"no\">73</span> \n</span>",
    "path": "/Users/alex/.rvm/gems/ruby-1.8.7-p302@test_app/gems/actionpack-3.0.3/lib/action_dispatch/routing/route_set.rb"
},
{
    "line": 27,
    "code": "<span class=\"CodeRay\"><span class=\"no\">17</span> \n<span class=\"no\">18</span>         <span class=\"r\">def</span> <span class=\"fu\">call</span>(env)\n<span class=\"no\">19</span>           params = env[<span class=\"co\">PARAMETERS_KEY</span>]\n<span class=\"no\">20</span>           prepare_params!(params)\n<span class=\"no\">21</span> \n<span class=\"no\">22</span>           <span class=\"c\"># Just raise undefined constant errors if a controller was specified as default.</span>\n<span class=\"no\">23</span>           <span class=\"r\">unless</span> controller = controller(params, <span class=\"iv\">@defaults</span>.key?(<span class=\"sy\">:controller</span>))\n<span class=\"no\">24</span>             <span class=\"r\">return</span> [<span class=\"i\">404</span>, {<span class=\"s\"><span class=\"dl\">'</span><span class=\"k\">X-Cascade</span><span class=\"dl\">'</span></span> =&gt; <span class=\"s\"><span class=\"dl\">'</span><span class=\"k\">pass</span><span class=\"dl\">'</span></span>}, []]\n<span class=\"no\">25</span>           <span class=\"r\">end</span>\n<span class=\"no\">26</span> \n<span class='container selected'><span class=\"no\">27</span>           dispatch(controller, params[<span class=\"sy\">:action</span>], env)<span class='overlay'></span></span>\n<span class=\"no\">28</span>         <span class=\"r\">end</span>\n<span class=\"no\">29</span> \n<span class=\"no\">30</span>         <span class=\"r\">def</span> <span class=\"fu\">prepare_params!</span>(params)\n<span class=\"no\">31</span>           merge_default_action!(params)\n<span class=\"no\">32</span>           split_glob_param!(params) <span class=\"r\">if</span> <span class=\"iv\">@glob_param</span>\n<span class=\"no\">33</span>         <span class=\"r\">end</span>\n<span class=\"no\">34</span> \n<span class=\"no\">35</span>         <span class=\"c\"># If this is a default_controller (i.e. a controller specified by the user)</span>\n<span class=\"no\">36</span>         <span class=\"c\"># we should raise an error in case it's not found, because it usually means</span>\n<span class=\"no\">37</span>         <span class=\"c\"># an user error. However, if the controller was retrieved through a dynamic</span>\n<span class=\"no\">38</span>         <span class=\"c\"># segment, as in :controller(/:action), we should simply return nil and</span>\n</span>",
    "path": "/Users/alex/.rvm/gems/ruby-1.8.7-p302@test_app/gems/actionpack-3.0.3/lib/action_dispatch/routing/route_set.rb"
},
{
    "line": 148,
    "code": "<span class=\"CodeRay\"><span class=\"no\">138</span>       req = <span class=\"iv\">@request_class</span>.new(env)\n<span class=\"no\">139</span>       recognize(req) <span class=\"r\">do</span> |route, matches, params|\n<span class=\"no\">140</span>         <span class=\"c\"># TODO: We only want to unescape params from uri related methods</span>\n<span class=\"no\">141</span>         params.each { |k, v| params[k] = <span class=\"co\">Utils</span>.unescape_uri(v) <span class=\"r\">if</span> v.is_a?(<span class=\"co\">String</span>) }\n<span class=\"no\">142</span> \n<span class=\"no\">143</span>         <span class=\"r\">if</span> route.prefix?\n<span class=\"no\">144</span>           env[<span class=\"co\">Prefix</span>::<span class=\"co\">KEY</span>] = matches[<span class=\"sy\">:path_info</span>].to_s\n<span class=\"no\">145</span>         <span class=\"r\">end</span>\n<span class=\"no\">146</span> \n<span class=\"no\">147</span>         env[<span class=\"iv\">@parameters_key</span>] = params\n<span class='container selected'><span class=\"no\">148</span>         result = route.app.call(env)<span class='overlay'></span></span>\n<span class=\"no\">149</span>         <span class=\"r\">return</span> result <span class=\"r\">unless</span> result[<span class=\"i\">1</span>][<span class=\"co\">X_CASCADE</span>] == <span class=\"co\">PASS</span>\n<span class=\"no\">150</span>       <span class=\"r\">end</span>\n<span class=\"no\">151</span> \n<span class=\"no\">152</span>       request || [<span class=\"i\">404</span>, {<span class=\"s\"><span class=\"dl\">'</span><span class=\"k\">Content-Type</span><span class=\"dl\">'</span></span> =&gt; <span class=\"s\"><span class=\"dl\">'</span><span class=\"k\">text/html</span><span class=\"dl\">'</span></span>, <span class=\"s\"><span class=\"dl\">'</span><span class=\"k\">X-Cascade</span><span class=\"dl\">'</span></span> =&gt; <span class=\"s\"><span class=\"dl\">'</span><span class=\"k\">pass</span><span class=\"dl\">'</span></span>}, [<span class=\"s\"><span class=\"dl\">'</span><span class=\"k\">Not Found</span><span class=\"dl\">'</span></span>]]\n<span class=\"no\">153</span>     <span class=\"r\">end</span>\n<span class=\"no\">154</span> \n<span class=\"no\">155</span>     <span class=\"c\"># Generates a url from Rack env and identifiers or significant keys.</span>\n<span class=\"no\">156</span>     <span class=\"c\">#</span>\n<span class=\"no\">157</span>     <span class=\"c\"># To generate a url by named route, pass the name in as a +Symbol+.</span>\n<span class=\"no\">158</span>     <span class=\"c\">#   url(env, :dashboard) # =&gt; &quot;/dashboard&quot;</span>\n<span class=\"no\">159</span>     <span class=\"c\">#</span>\n</span>",
    "path": "/Users/alex/.rvm/gems/ruby-1.8.7-p302@test_app/gems/rack-mount-0.6.13/lib/rack/mount/route_set.rb"
},
{
    "line": 93,
    "code": "<span class=\"CodeRay\"><span class=\"no\"> 83</span> \n<span class=\"no\"> 84</span>         remove_metaclass_method <span class=\"sy\">:recognize</span>\n<span class=\"no\"> 85</span> \n<span class=\"no\"> 86</span>         instance_eval(<span class=\"s\"><span class=\"dl\">&lt;&lt;-RUBY</span></span>, <span class=\"pc\">__FILE__</span>, <span class=\"pc\">__LINE__</span>)<span class=\"s\"><span class=\"k\">\n<span class=\"no\"> 87</span>           def recognize(obj)\n<span class=\"no\"> 88</span>             cache = {}\n<span class=\"no\"> 89</span>             container = @recognition_graph[</span><span class=\"il\"><span class=\"idl\">#{</span>keys<span class=\"idl\">}</span></span><span class=\"k\">]\n<span class=\"no\"> 90</span>             optimize_container_iterator(container) unless container.respond_to?(:optimized_each)\n<span class=\"no\"> 91</span> \n<span class=\"no\"> 92</span>             if block_given?\n<span class='container selected'><span class=\"no\"> 93</span>               container.optimized_each(obj) do |route, matches, params|<span class='overlay'></span></span>\n<span class=\"no\"> 94</span>                 yield route, matches, params\n<span class=\"no\"> 95</span>               end\n<span class=\"no\"> 96</span>             else\n<span class=\"no\"> 97</span>               container.optimized_each(obj) do |route, matches, params|\n<span class=\"no\"> 98</span>                 return route, matches, params\n<span class=\"no\"> 99</span>               end\n<span class=\"no\">100</span>             end\n<span class=\"no\">101</span> \n<span class=\"no\">102</span>             nil\n<span class=\"no\">103</span>           end</span><span class=\"dl\">\n<span class=\"no\">104</span>         RUBY</span></span>\n</span>",
    "path": "/Users/alex/.rvm/gems/ruby-1.8.7-p302@test_app/gems/rack-mount-0.6.13/lib/rack/mount/code_generation.rb"
},
{
    "line": 68,
    "code": "<span class=\"CodeRay\"><span class=\"no\">58</span>               <span class=\"r\">yield</span> route, matches, params\n<span class=\"no\">59</span>             <span class=\"r\">end</span>\n<span class=\"no\">60</span>           <span class=\"co\">RUBY</span>\n<span class=\"no\">61</span>         }\n<span class=\"no\">62</span> \n<span class=\"no\">63</span>         container.instance_eval(<span class=\"s\"><span class=\"dl\">&lt;&lt;-RUBY</span></span>, <span class=\"pc\">__FILE__</span>, <span class=\"pc\">__LINE__</span>)<span class=\"s\"><span class=\"k\">\n<span class=\"no\">64</span>           def optimized_each(obj)\n<span class=\"no\">65</span>             </span><span class=\"il\"><span class=\"idl\">#{</span>body.join(<span class=\"s\"><span class=\"dl\">&quot;</span><span class=\"ch\">\\n</span><span class=\"dl\">&quot;</span></span>)<span class=\"idl\">}</span></span><span class=\"k\">\n<span class=\"no\">66</span>             nil\n<span class=\"no\">67</span>           end</span><span class=\"dl\">\n<span class='container selected'><span class=\"no\">68</span>         RUBY</span></span><span class='overlay'></span></span>\n<span class=\"no\">69</span>       <span class=\"r\">end</span>\n<span class=\"no\">70</span> \n<span class=\"no\">71</span>       <span class=\"r\">def</span> <span class=\"fu\">optimize_recognize!</span>\n<span class=\"no\">72</span>         <span class=\"co\">Utils</span>.debug <span class=\"s\"><span class=\"dl\">&quot;</span><span class=\"k\">optimizing recognize</span><span class=\"dl\">&quot;</span></span>\n<span class=\"no\">73</span> \n<span class=\"no\">74</span>         keys = <span class=\"iv\">@recognition_keys</span>.map { |key|\n<span class=\"no\">75</span>           <span class=\"r\">if</span> key.respond_to?(<span class=\"sy\">:call_source</span>)\n<span class=\"no\">76</span>             key.call_source(<span class=\"sy\">:cache</span>, <span class=\"sy\">:obj</span>)\n<span class=\"no\">77</span>           <span class=\"r\">else</span>\n<span class=\"no\">78</span>             <span class=\"s\"><span class=\"dl\">&quot;</span><span class=\"k\">obj.</span><span class=\"il\"><span class=\"idl\">#{</span>key<span class=\"idl\">}</span></span><span class=\"dl\">&quot;</span></span>\n<span class=\"no\">79</span>           <span class=\"r\">end</span>\n</span>",
    "path": "/Users/alex/.rvm/gems/ruby-1.8.7-p302@test_app/gems/rack-mount-0.6.13/lib/rack/mount/code_generation.rb"
},
{
    "line": 92,
    "code": "<span class=\"CodeRay\"><span class=\"no\"> 82</span>         <span class=\"iv\">@optimized_recognize_defined</span> = <span class=\"pc\">true</span>\n<span class=\"no\"> 83</span> \n<span class=\"no\"> 84</span>         remove_metaclass_method <span class=\"sy\">:recognize</span>\n<span class=\"no\"> 85</span> \n<span class=\"no\"> 86</span>         instance_eval(<span class=\"s\"><span class=\"dl\">&lt;&lt;-RUBY</span></span>, <span class=\"pc\">__FILE__</span>, <span class=\"pc\">__LINE__</span>)<span class=\"s\"><span class=\"k\">\n<span class=\"no\"> 87</span>           def recognize(obj)\n<span class=\"no\"> 88</span>             cache = {}\n<span class=\"no\"> 89</span>             container = @recognition_graph[</span><span class=\"il\"><span class=\"idl\">#{</span>keys<span class=\"idl\">}</span></span><span class=\"k\">]\n<span class=\"no\"> 90</span>             optimize_container_iterator(container) unless container.respond_to?(:optimized_each)\n<span class=\"no\"> 91</span> \n<span class='container selected'><span class=\"no\"> 92</span>             if block_given?<span class='overlay'></span></span>\n<span class=\"no\"> 93</span>               container.optimized_each(obj) do |route, matches, params|\n<span class=\"no\"> 94</span>                 yield route, matches, params\n<span class=\"no\"> 95</span>               end\n<span class=\"no\"> 96</span>             else\n<span class=\"no\"> 97</span>               container.optimized_each(obj) do |route, matches, params|\n<span class=\"no\"> 98</span>                 return route, matches, params\n<span class=\"no\"> 99</span>               end\n<span class=\"no\">100</span>             end\n<span class=\"no\">101</span> \n<span class=\"no\">102</span>             nil\n<span class=\"no\">103</span>           end\n<span class=\"no\">104</span> </span></span></span>",
    "path": "/Users/alex/.rvm/gems/ruby-1.8.7-p302@test_app/gems/rack-mount-0.6.13/lib/rack/mount/code_generation.rb"
},
{
    "line": 139,
    "code": "<span class=\"CodeRay\"><span class=\"no\">129</span>     <span class=\"c\">#</span>\n<span class=\"no\">130</span>     <span class=\"c\"># This method can only be invoked after the RouteSet has been</span>\n<span class=\"no\">131</span>     <span class=\"c\"># finalized.</span>\n<span class=\"no\">132</span>     <span class=\"r\">def</span> <span class=\"fu\">call</span>(env)\n<span class=\"no\">133</span>       raise <span class=\"s\"><span class=\"dl\">'</span><span class=\"k\">route set not finalized</span><span class=\"dl\">'</span></span> <span class=\"r\">unless</span> <span class=\"iv\">@recognition_graph</span>\n<span class=\"no\">134</span> \n<span class=\"no\">135</span>       env[<span class=\"co\">PATH_INFO</span>] = <span class=\"co\">Utils</span>.normalize_path(env[<span class=\"co\">PATH_INFO</span>])\n<span class=\"no\">136</span> \n<span class=\"no\">137</span>       request = <span class=\"pc\">nil</span>\n<span class=\"no\">138</span>       req = <span class=\"iv\">@request_class</span>.new(env)\n<span class='container selected'><span class=\"no\">139</span>       recognize(req) <span class=\"r\">do</span> |route, matches, params|<span class='overlay'></span></span>\n<span class=\"no\">140</span>         <span class=\"c\"># TODO: We only want to unescape params from uri related methods</span>\n<span class=\"no\">141</span>         params.each { |k, v| params[k] = <span class=\"co\">Utils</span>.unescape_uri(v) <span class=\"r\">if</span> v.is_a?(<span class=\"co\">String</span>) }\n<span class=\"no\">142</span> \n<span class=\"no\">143</span>         <span class=\"r\">if</span> route.prefix?\n<span class=\"no\">144</span>           env[<span class=\"co\">Prefix</span>::<span class=\"co\">KEY</span>] = matches[<span class=\"sy\">:path_info</span>].to_s\n<span class=\"no\">145</span>         <span class=\"r\">end</span>\n<span class=\"no\">146</span> \n<span class=\"no\">147</span>         env[<span class=\"iv\">@parameters_key</span>] = params\n<span class=\"no\">148</span>         result = route.app.call(env)\n<span class=\"no\">149</span>         <span class=\"r\">return</span> result <span class=\"r\">unless</span> result[<span class=\"i\">1</span>][<span class=\"co\">X_CASCADE</span>] == <span class=\"co\">PASS</span>\n<span class=\"no\">150</span>       <span class=\"r\">end</span>\n</span>",
    "path": "/Users/alex/.rvm/gems/ruby-1.8.7-p302@test_app/gems/rack-mount-0.6.13/lib/rack/mount/route_set.rb"
},
{
    "line": 492,
    "code": "<span class=\"CodeRay\"><span class=\"no\">482</span> \n<span class=\"no\">483</span>         <span class=\"c\"># ROUTES TODO: This can be called directly, so script_name should probably be set in the routes</span>\n<span class=\"no\">484</span>         rewritten_url &lt;&lt; (options[<span class=\"sy\">:trailing_slash</span>] ? path.sub(<span class=\"rx\"><span class=\"dl\">/</span><span class=\"ch\">\\?</span><span class=\"k\">|</span><span class=\"ch\">\\z</span><span class=\"dl\">/</span></span>) { <span class=\"s\"><span class=\"dl\">&quot;</span><span class=\"k\">/</span><span class=\"dl\">&quot;</span></span> + <span class=\"gv\">$&amp;</span> } : path)\n<span class=\"no\">485</span>         rewritten_url &lt;&lt; <span class=\"s\"><span class=\"dl\">&quot;</span><span class=\"k\">#</span><span class=\"il\"><span class=\"idl\">#{</span><span class=\"co\">Rack</span>::<span class=\"co\">Mount</span>::<span class=\"co\">Utils</span>.escape_uri(options[<span class=\"sy\">:anchor</span>].to_param.to_s)<span class=\"idl\">}</span></span><span class=\"dl\">&quot;</span></span> <span class=\"r\">if</span> options[<span class=\"sy\">:anchor</span>]\n<span class=\"no\">486</span> \n<span class=\"no\">487</span>         rewritten_url\n<span class=\"no\">488</span>       <span class=\"r\">end</span>\n<span class=\"no\">489</span> \n<span class=\"no\">490</span>       <span class=\"r\">def</span> <span class=\"fu\">call</span>(env)\n<span class=\"no\">491</span>         finalize!\n<span class='container selected'><span class=\"no\">492</span>         <span class=\"iv\">@set</span>.call(env)<span class='overlay'></span></span>\n<span class=\"no\">493</span>       <span class=\"r\">end</span>\n<span class=\"no\">494</span> \n<span class=\"no\">495</span>       <span class=\"r\">def</span> <span class=\"fu\">recognize_path</span>(path, environment = {})\n<span class=\"no\">496</span>         method = (environment[<span class=\"sy\">:method</span>] || <span class=\"s\"><span class=\"dl\">&quot;</span><span class=\"k\">GET</span><span class=\"dl\">&quot;</span></span>).to_s.upcase\n<span class=\"no\">497</span>         path = <span class=\"co\">Rack</span>::<span class=\"co\">Mount</span>::<span class=\"co\">Utils</span>.normalize_path(path) <span class=\"r\">unless</span> path =~ <span class=\"rx\"><span class=\"dl\">%r{</span><span class=\"k\">://</span><span class=\"dl\">}</span></span>\n<span class=\"no\">498</span> \n<span class=\"no\">499</span>         <span class=\"r\">begin</span>\n<span class=\"no\">500</span>           env = <span class=\"co\">Rack</span>::<span class=\"co\">MockRequest</span>.env_for(path, {<span class=\"sy\">:method</span> =&gt; method})\n<span class=\"no\">501</span>         <span class=\"r\">rescue</span> <span class=\"co\">URI</span>::<span class=\"co\">InvalidURIError</span> =&gt; e\n<span class=\"no\">502</span>           raise <span class=\"co\">ActionController</span>::<span class=\"co\">RoutingError</span>, e.message\n<span class=\"no\">503</span>         <span class=\"r\">end</span>\n</span>",
    "path": "/Users/alex/.rvm/gems/ruby-1.8.7-p302@test_app/gems/actionpack-3.0.3/lib/action_dispatch/routing/route_set.rb"
},
{
    "line": 17,
    "code": "<span class=\"CodeRay\"><span class=\"no\"> 7</span>       <span class=\"r\">when</span> <span class=\"pc\">true</span>\n<span class=\"no\"> 8</span>         <span class=\"s\"><span class=\"dl\">&quot;</span><span class=\"k\">IE=Edge,chrome=1</span><span class=\"dl\">&quot;</span></span>\n<span class=\"no\"> 9</span>       <span class=\"r\">when</span> <span class=\"sy\">:builtin</span>\n<span class=\"no\">10</span>         <span class=\"s\"><span class=\"dl\">&quot;</span><span class=\"k\">IE=Edge</span><span class=\"dl\">&quot;</span></span>\n<span class=\"no\">11</span>       <span class=\"r\">when</span> <span class=\"pc\">false</span>\n<span class=\"no\">12</span>         <span class=\"pc\">nil</span>\n<span class=\"no\">13</span>       <span class=\"r\">end</span>\n<span class=\"no\">14</span>     <span class=\"r\">end</span>\n<span class=\"no\">15</span> \n<span class=\"no\">16</span>     <span class=\"r\">def</span> <span class=\"fu\">call</span>(env)\n<span class='container selected'><span class=\"no\">17</span>       status, headers, body = <span class=\"iv\">@app</span>.call(env)<span class='overlay'></span></span>\n<span class=\"no\">18</span>       headers[<span class=\"s\"><span class=\"dl\">&quot;</span><span class=\"k\">X-UA-Compatible</span><span class=\"dl\">&quot;</span></span>] = <span class=\"iv\">@header</span>\n<span class=\"no\">19</span>       [status, headers, body]\n<span class=\"no\">20</span>     <span class=\"r\">end</span>\n<span class=\"no\">21</span>   <span class=\"r\">end</span>\n<span class=\"no\">22</span> <span class=\"r\">end</span>\n</span>",
    "path": "/Users/alex/.rvm/gems/ruby-1.8.7-p302@test_app/gems/actionpack-3.0.3/lib/action_dispatch/middleware/best_standards_support.rb"
},
{
    "line": 14,
    "code": "<span class=\"CodeRay\"><span class=\"no\"> 4</span>       <span class=\"iv\">@app</span> = app\n<span class=\"no\"> 5</span>     <span class=\"r\">end</span>\n<span class=\"no\"> 6</span> \n<span class=\"no\"> 7</span>     <span class=\"r\">def</span> <span class=\"fu\">call</span>(env)\n<span class=\"no\"> 8</span>       <span class=\"r\">if</span> env[<span class=\"s\"><span class=\"dl\">&quot;</span><span class=\"k\">REQUEST_METHOD</span><span class=\"dl\">&quot;</span></span>] == <span class=\"s\"><span class=\"dl\">&quot;</span><span class=\"k\">HEAD</span><span class=\"dl\">&quot;</span></span>\n<span class=\"no\"> 9</span>         env[<span class=\"s\"><span class=\"dl\">&quot;</span><span class=\"k\">REQUEST_METHOD</span><span class=\"dl\">&quot;</span></span>] = <span class=\"s\"><span class=\"dl\">&quot;</span><span class=\"k\">GET</span><span class=\"dl\">&quot;</span></span>\n<span class=\"no\">10</span>         env[<span class=\"s\"><span class=\"dl\">&quot;</span><span class=\"k\">rack.methodoverride.original_method</span><span class=\"dl\">&quot;</span></span>] = <span class=\"s\"><span class=\"dl\">&quot;</span><span class=\"k\">HEAD</span><span class=\"dl\">&quot;</span></span>\n<span class=\"no\">11</span>         status, headers, body = <span class=\"iv\">@app</span>.call(env)\n<span class=\"no\">12</span>         [status, headers, []]\n<span class=\"no\">13</span>       <span class=\"r\">else</span>\n<span class='container selected'><span class=\"no\">14</span>         <span class=\"iv\">@app</span>.call(env)<span class='overlay'></span></span>\n<span class=\"no\">15</span>       <span class=\"r\">end</span>\n<span class=\"no\">16</span>     <span class=\"r\">end</span>\n<span class=\"no\">17</span>   <span class=\"r\">end</span>\n<span class=\"no\">18</span> <span class=\"r\">end</span>\n</span>",
    "path": "/Users/alex/.rvm/gems/ruby-1.8.7-p302@test_app/gems/actionpack-3.0.3/lib/action_dispatch/middleware/head.rb"
},
{
    "line": 24,
    "code": "<span class=\"CodeRay\"><span class=\"no\">14</span>         req = <span class=\"co\">Request</span>.new(env)\n<span class=\"no\">15</span>         method = req.<span class=\"co\">POST</span>[<span class=\"co\">METHOD_OVERRIDE_PARAM_KEY</span>] ||\n<span class=\"no\">16</span>           env[<span class=\"co\">HTTP_METHOD_OVERRIDE_HEADER</span>]\n<span class=\"no\">17</span>         method = method.to_s.upcase\n<span class=\"no\">18</span>         <span class=\"r\">if</span> <span class=\"co\">HTTP_METHODS</span>.include?(method)\n<span class=\"no\">19</span>           env[<span class=\"s\"><span class=\"dl\">&quot;</span><span class=\"k\">rack.methodoverride.original_method</span><span class=\"dl\">&quot;</span></span>] = env[<span class=\"s\"><span class=\"dl\">&quot;</span><span class=\"k\">REQUEST_METHOD</span><span class=\"dl\">&quot;</span></span>]\n<span class=\"no\">20</span>           env[<span class=\"s\"><span class=\"dl\">&quot;</span><span class=\"k\">REQUEST_METHOD</span><span class=\"dl\">&quot;</span></span>] = method\n<span class=\"no\">21</span>         <span class=\"r\">end</span>\n<span class=\"no\">22</span>       <span class=\"r\">end</span>\n<span class=\"no\">23</span> \n<span class='container selected'><span class=\"no\">24</span>       <span class=\"iv\">@app</span>.call(env)<span class='overlay'></span></span>\n<span class=\"no\">25</span>     <span class=\"r\">end</span>\n<span class=\"no\">26</span>   <span class=\"r\">end</span>\n<span class=\"no\">27</span> <span class=\"r\">end</span>\n</span>",
    "path": "/Users/alex/.rvm/gems/ruby-1.8.7-p302@test_app/gems/rack-1.2.1/lib/rack/methodoverride.rb"
},
{
    "line": 21,
    "code": "<span class=\"CodeRay\"><span class=\"no\">11</span> \n<span class=\"no\">12</span>     <span class=\"r\">def</span> <span class=\"fu\">initialize</span>(app, parsers = {})\n<span class=\"no\">13</span>       <span class=\"iv\">@app</span>, <span class=\"iv\">@parsers</span> = app, <span class=\"co\">DEFAULT_PARSERS</span>.merge(parsers)\n<span class=\"no\">14</span>     <span class=\"r\">end</span>\n<span class=\"no\">15</span> \n<span class=\"no\">16</span>     <span class=\"r\">def</span> <span class=\"fu\">call</span>(env)\n<span class=\"no\">17</span>       <span class=\"r\">if</span> params = parse_formatted_parameters(env)\n<span class=\"no\">18</span>         env[<span class=\"s\"><span class=\"dl\">&quot;</span><span class=\"k\">action_dispatch.request.request_parameters</span><span class=\"dl\">&quot;</span></span>] = params\n<span class=\"no\">19</span>       <span class=\"r\">end</span>\n<span class=\"no\">20</span> \n<span class='container selected'><span class=\"no\">21</span>       <span class=\"iv\">@app</span>.call(env)<span class='overlay'></span></span>\n<span class=\"no\">22</span>     <span class=\"r\">end</span>\n<span class=\"no\">23</span> \n<span class=\"no\">24</span>     private\n<span class=\"no\">25</span>       <span class=\"r\">def</span> <span class=\"fu\">parse_formatted_parameters</span>(env)\n<span class=\"no\">26</span>         request = <span class=\"co\">Request</span>.new(env)\n<span class=\"no\">27</span> \n<span class=\"no\">28</span>         <span class=\"r\">return</span> <span class=\"pc\">false</span> <span class=\"r\">if</span> request.content_length.zero?\n<span class=\"no\">29</span> \n<span class=\"no\">30</span>         mime_type = content_type_from_legacy_post_data_format_header(env) ||\n<span class=\"no\">31</span>           request.content_mime_type\n<span class=\"no\">32</span> \n</span>",
    "path": "/Users/alex/.rvm/gems/ruby-1.8.7-p302@test_app/gems/actionpack-3.0.3/lib/action_dispatch/middleware/params_parser.rb"
},
{
    "line": 182,
    "code": "<span class=\"CodeRay\"><span class=\"no\">172</span> \n<span class=\"no\">173</span>     <span class=\"r\">def</span> <span class=\"fu\">initialize</span>(app)\n<span class=\"no\">174</span>       <span class=\"iv\">@app</span> = app\n<span class=\"no\">175</span>     <span class=\"r\">end</span>\n<span class=\"no\">176</span> \n<span class=\"no\">177</span>     <span class=\"r\">def</span> <span class=\"fu\">call</span>(env)\n<span class=\"no\">178</span>       <span class=\"r\">if</span> (session = env[<span class=\"s\"><span class=\"dl\">'</span><span class=\"k\">rack.session</span><span class=\"dl\">'</span></span>]) &amp;&amp; (flash = session[<span class=\"s\"><span class=\"dl\">'</span><span class=\"k\">flash</span><span class=\"dl\">'</span></span>])\n<span class=\"no\">179</span>         flash.sweep\n<span class=\"no\">180</span>       <span class=\"r\">end</span>\n<span class=\"no\">181</span> \n<span class='container selected'><span class=\"no\">182</span>       <span class=\"iv\">@app</span>.call(env)<span class='overlay'></span></span>\n<span class=\"no\">183</span>     <span class=\"r\">ensure</span>\n<span class=\"no\">184</span>       session    = env[<span class=\"s\"><span class=\"dl\">'</span><span class=\"k\">rack.session</span><span class=\"dl\">'</span></span>] || {}\n<span class=\"no\">185</span>       flash_hash = env[<span class=\"s\"><span class=\"dl\">'</span><span class=\"k\">action_dispatch.request.flash_hash</span><span class=\"dl\">'</span></span>]\n<span class=\"no\">186</span> \n<span class=\"no\">187</span>       <span class=\"r\">if</span> flash_hash &amp;&amp; (!flash_hash.empty? || session.key?(<span class=\"s\"><span class=\"dl\">'</span><span class=\"k\">flash</span><span class=\"dl\">'</span></span>))\n<span class=\"no\">188</span>         session[<span class=\"s\"><span class=\"dl\">&quot;</span><span class=\"k\">flash</span><span class=\"dl\">&quot;</span></span>] = flash_hash\n<span class=\"no\">189</span>       <span class=\"r\">end</span>\n<span class=\"no\">190</span> \n<span class=\"no\">191</span>       <span class=\"r\">if</span> session.key?(<span class=\"s\"><span class=\"dl\">'</span><span class=\"k\">flash</span><span class=\"dl\">'</span></span>) &amp;&amp; session[<span class=\"s\"><span class=\"dl\">'</span><span class=\"k\">flash</span><span class=\"dl\">'</span></span>].empty?\n<span class=\"no\">192</span>         session.delete(<span class=\"s\"><span class=\"dl\">'</span><span class=\"k\">flash</span><span class=\"dl\">'</span></span>)\n<span class=\"no\">193</span>       <span class=\"r\">end</span>\n</span>",
    "path": "/Users/alex/.rvm/gems/ruby-1.8.7-p302@test_app/gems/actionpack-3.0.3/lib/action_dispatch/middleware/flash.rb"
},
{
    "line": 149,
    "code": "<span class=\"CodeRay\"><span class=\"no\">139</span>       <span class=\"r\">def</span> <span class=\"fu\">initialize</span>(app, options = {})\n<span class=\"no\">140</span>         <span class=\"iv\">@app</span> = app\n<span class=\"no\">141</span>         <span class=\"iv\">@default_options</span> = <span class=\"co\">DEFAULT_OPTIONS</span>.merge(options)\n<span class=\"no\">142</span>         <span class=\"iv\">@key</span> = <span class=\"iv\">@default_options</span>.delete(<span class=\"sy\">:key</span>).freeze\n<span class=\"no\">143</span>         <span class=\"iv\">@cookie_only</span> = <span class=\"iv\">@default_options</span>.delete(<span class=\"sy\">:cookie_only</span>)\n<span class=\"no\">144</span>         ensure_session_key!\n<span class=\"no\">145</span>       <span class=\"r\">end</span>\n<span class=\"no\">146</span> \n<span class=\"no\">147</span>       <span class=\"r\">def</span> <span class=\"fu\">call</span>(env)\n<span class=\"no\">148</span>         prepare!(env)\n<span class='container selected'><span class=\"no\">149</span>         response = <span class=\"iv\">@app</span>.call(env)<span class='overlay'></span></span>\n<span class=\"no\">150</span> \n<span class=\"no\">151</span>         session_data = env[<span class=\"co\">ENV_SESSION_KEY</span>]\n<span class=\"no\">152</span>         options = env[<span class=\"co\">ENV_SESSION_OPTIONS_KEY</span>]\n<span class=\"no\">153</span> \n<span class=\"no\">154</span>         <span class=\"r\">if</span> !session_data.is_a?(<span class=\"co\">AbstractStore</span>::<span class=\"co\">SessionHash</span>) || session_data.loaded? || options[<span class=\"sy\">:expire_after</span>]\n<span class=\"no\">155</span>           session_data.send(<span class=\"sy\">:load!</span>) <span class=\"r\">if</span> session_data.is_a?(<span class=\"co\">AbstractStore</span>::<span class=\"co\">SessionHash</span>) &amp;&amp; !session_data.loaded?\n<span class=\"no\">156</span> \n<span class=\"no\">157</span>           sid = options[<span class=\"sy\">:id</span>] || generate_sid\n<span class=\"no\">158</span>           session_data = session_data.to_hash\n<span class=\"no\">159</span> \n<span class=\"no\">160</span>           value = set_session(env, sid, session_data)\n</span>",
    "path": "/Users/alex/.rvm/gems/ruby-1.8.7-p302@test_app/gems/actionpack-3.0.3/lib/action_dispatch/middleware/session/abstract_store.rb"
},
{
    "line": 295,
    "code": "<span class=\"CodeRay\"><span class=\"no\">285</span>             <span class=\"s\"><span class=\"dl\">&quot;</span><span class=\"k\">of </span><span class=\"il\"><span class=\"idl\">#{</span><span class=\"co\">SECRET_MIN_LENGTH</span><span class=\"idl\">}</span></span><span class=\"k\"> characters</span><span class=\"dl\">&quot;</span></span>\n<span class=\"no\">286</span>         <span class=\"r\">end</span>\n<span class=\"no\">287</span>       <span class=\"r\">end</span>\n<span class=\"no\">288</span>     <span class=\"r\">end</span>\n<span class=\"no\">289</span> \n<span class=\"no\">290</span>     <span class=\"r\">def</span> <span class=\"fu\">initialize</span>(app)\n<span class=\"no\">291</span>       <span class=\"iv\">@app</span> = app\n<span class=\"no\">292</span>     <span class=\"r\">end</span>\n<span class=\"no\">293</span> \n<span class=\"no\">294</span>     <span class=\"r\">def</span> <span class=\"fu\">call</span>(env)\n<span class='container selected'><span class=\"no\">295</span>       status, headers, body = <span class=\"iv\">@app</span>.call(env)<span class='overlay'></span></span>\n<span class=\"no\">296</span> \n<span class=\"no\">297</span>       <span class=\"r\">if</span> cookie_jar = env[<span class=\"s\"><span class=\"dl\">'</span><span class=\"k\">action_dispatch.cookies</span><span class=\"dl\">'</span></span>]\n<span class=\"no\">298</span>         cookie_jar.write(headers)\n<span class=\"no\">299</span>         <span class=\"r\">if</span> headers[<span class=\"co\">HTTP_HEADER</span>].respond_to?(<span class=\"sy\">:join</span>)\n<span class=\"no\">300</span>           headers[<span class=\"co\">HTTP_HEADER</span>] = headers[<span class=\"co\">HTTP_HEADER</span>].join(<span class=\"s\"><span class=\"dl\">&quot;</span><span class=\"ch\">\\n</span><span class=\"dl\">&quot;</span></span>)\n<span class=\"no\">301</span>         <span class=\"r\">end</span>\n<span class=\"no\">302</span>       <span class=\"r\">end</span>\n<span class=\"no\">303</span> \n<span class=\"no\">304</span>       [status, headers, body]\n<span class=\"no\">305</span>     <span class=\"r\">end</span>\n<span class=\"no\">306</span>   <span class=\"r\">end</span>\n</span>",
    "path": "/Users/alex/.rvm/gems/ruby-1.8.7-p302@test_app/gems/actionpack-3.0.3/lib/action_dispatch/middleware/cookies.rb"
},
{
    "line": 32,
    "code": "<span class=\"CodeRay\"><span class=\"no\">22</span>         <span class=\"r\">end</span>\n<span class=\"no\">23</span>       <span class=\"r\">end</span>\n<span class=\"no\">24</span>     <span class=\"r\">end</span>\n<span class=\"no\">25</span> \n<span class=\"no\">26</span>     <span class=\"r\">def</span> <span class=\"fu\">initialize</span>(app)\n<span class=\"no\">27</span>       <span class=\"iv\">@app</span> = app\n<span class=\"no\">28</span>     <span class=\"r\">end</span>\n<span class=\"no\">29</span> \n<span class=\"no\">30</span>     <span class=\"r\">def</span> <span class=\"fu\">call</span>(env)\n<span class=\"no\">31</span>       <span class=\"co\">ActiveRecord</span>::<span class=\"co\">Base</span>.cache <span class=\"r\">do</span>\n<span class='container selected'><span class=\"no\">32</span>         <span class=\"iv\">@app</span>.call(env)<span class='overlay'></span></span>\n<span class=\"no\">33</span>       <span class=\"r\">end</span>\n<span class=\"no\">34</span>     <span class=\"r\">end</span>\n<span class=\"no\">35</span>   <span class=\"r\">end</span>\n<span class=\"no\">36</span> <span class=\"r\">end</span>\n</span>",
    "path": "/Users/alex/.rvm/gems/ruby-1.8.7-p302@test_app/gems/activerecord-3.0.3/lib/active_record/query_cache.rb"
},
{
    "line": 28,
    "code": "<span class=\"CodeRay\"><span class=\"no\">18</span>             end_code\n<span class=\"no\">19</span>           <span class=\"r\">end</span>\n<span class=\"no\">20</span>         <span class=\"r\">end</span>\n<span class=\"no\">21</span>       <span class=\"r\">end</span>\n<span class=\"no\">22</span> \n<span class=\"no\">23</span>       attr_reader <span class=\"sy\">:query_cache</span>, <span class=\"sy\">:query_cache_enabled</span>\n<span class=\"no\">24</span> \n<span class=\"no\">25</span>       <span class=\"c\"># Enable the query cache within the block.</span>\n<span class=\"no\">26</span>       <span class=\"r\">def</span> <span class=\"fu\">cache</span>\n<span class=\"no\">27</span>         old, <span class=\"iv\">@query_cache_enabled</span> = <span class=\"iv\">@query_cache_enabled</span>, <span class=\"pc\">true</span>\n<span class='container selected'><span class=\"no\">28</span>         <span class=\"r\">yield</span><span class='overlay'></span></span>\n<span class=\"no\">29</span>       <span class=\"r\">ensure</span>\n<span class=\"no\">30</span>         clear_query_cache\n<span class=\"no\">31</span>         <span class=\"iv\">@query_cache_enabled</span> = old\n<span class=\"no\">32</span>       <span class=\"r\">end</span>\n<span class=\"no\">33</span> \n<span class=\"no\">34</span>       <span class=\"c\"># Disable the query cache within the block.</span>\n<span class=\"no\">35</span>       <span class=\"r\">def</span> <span class=\"fu\">uncached</span>\n<span class=\"no\">36</span>         old, <span class=\"iv\">@query_cache_enabled</span> = <span class=\"iv\">@query_cache_enabled</span>, <span class=\"pc\">false</span>\n<span class=\"no\">37</span>         <span class=\"r\">yield</span>\n<span class=\"no\">38</span>       <span class=\"r\">ensure</span>\n<span class=\"no\">39</span>         <span class=\"iv\">@query_cache_enabled</span> = old\n</span>",
    "path": "/Users/alex/.rvm/gems/ruby-1.8.7-p302@test_app/gems/activerecord-3.0.3/lib/active_record/connection_adapters/abstract/query_cache.rb"
},
{
    "line": 12,
    "code": "<span class=\"CodeRay\"><span class=\"no\"> 2</span> \n<span class=\"no\"> 3</span> <span class=\"r\">module</span> <span class=\"cl\">ActiveRecord</span>\n<span class=\"no\"> 4</span>   <span class=\"c\"># = Active Record Query Cache</span>\n<span class=\"no\"> 5</span>   <span class=\"r\">class</span> <span class=\"cl\">QueryCache</span>\n<span class=\"no\"> 6</span>     <span class=\"r\">module</span> <span class=\"cl\">ClassMethods</span>\n<span class=\"no\"> 7</span>       <span class=\"c\"># Enable the query cache within the block if Active Record is configured.</span>\n<span class=\"no\"> 8</span>       <span class=\"r\">def</span> <span class=\"fu\">cache</span>(&amp;block)\n<span class=\"no\"> 9</span>         <span class=\"r\">if</span> <span class=\"co\">ActiveRecord</span>::<span class=\"co\">Base</span>.configurations.blank?\n<span class=\"no\">10</span>           <span class=\"r\">yield</span>\n<span class=\"no\">11</span>         <span class=\"r\">else</span>\n<span class='container selected'><span class=\"no\">12</span>           connection.cache(&amp;block)<span class='overlay'></span></span>\n<span class=\"no\">13</span>         <span class=\"r\">end</span>\n<span class=\"no\">14</span>       <span class=\"r\">end</span>\n<span class=\"no\">15</span> \n<span class=\"no\">16</span>       <span class=\"c\"># Disable the query cache within the block if Active Record is configured.</span>\n<span class=\"no\">17</span>       <span class=\"r\">def</span> <span class=\"fu\">uncached</span>(&amp;block)\n<span class=\"no\">18</span>         <span class=\"r\">if</span> <span class=\"co\">ActiveRecord</span>::<span class=\"co\">Base</span>.configurations.blank?\n<span class=\"no\">19</span>           <span class=\"r\">yield</span>\n<span class=\"no\">20</span>         <span class=\"r\">else</span>\n<span class=\"no\">21</span>           connection.uncached(&amp;block)\n<span class=\"no\">22</span>         <span class=\"r\">end</span>\n<span class=\"no\">23</span>       <span class=\"r\">end</span>\n</span>",
    "path": "/Users/alex/.rvm/gems/ruby-1.8.7-p302@test_app/gems/activerecord-3.0.3/lib/active_record/query_cache.rb"
},
{
    "line": 31,
    "code": "<span class=\"CodeRay\"><span class=\"no\">21</span>           connection.uncached(&amp;block)\n<span class=\"no\">22</span>         <span class=\"r\">end</span>\n<span class=\"no\">23</span>       <span class=\"r\">end</span>\n<span class=\"no\">24</span>     <span class=\"r\">end</span>\n<span class=\"no\">25</span> \n<span class=\"no\">26</span>     <span class=\"r\">def</span> <span class=\"fu\">initialize</span>(app)\n<span class=\"no\">27</span>       <span class=\"iv\">@app</span> = app\n<span class=\"no\">28</span>     <span class=\"r\">end</span>\n<span class=\"no\">29</span> \n<span class=\"no\">30</span>     <span class=\"r\">def</span> <span class=\"fu\">call</span>(env)\n<span class='container selected'><span class=\"no\">31</span>       <span class=\"co\">ActiveRecord</span>::<span class=\"co\">Base</span>.cache <span class=\"r\">do</span><span class='overlay'></span></span>\n<span class=\"no\">32</span>         <span class=\"iv\">@app</span>.call(env)\n<span class=\"no\">33</span>       <span class=\"r\">end</span>\n<span class=\"no\">34</span>     <span class=\"r\">end</span>\n<span class=\"no\">35</span>   <span class=\"r\">end</span>\n<span class=\"no\">36</span> <span class=\"r\">end</span>\n</span>",
    "path": "/Users/alex/.rvm/gems/ruby-1.8.7-p302@test_app/gems/activerecord-3.0.3/lib/active_record/query_cache.rb"
},
{
    "line": 353,
    "code": "<span class=\"CodeRay\"><span class=\"no\">343</span>         retrieve_connection_pool klass.superclass\n<span class=\"no\">344</span>       <span class=\"r\">end</span>\n<span class=\"no\">345</span>     <span class=\"r\">end</span>\n<span class=\"no\">346</span> \n<span class=\"no\">347</span>     <span class=\"r\">class</span> <span class=\"cl\">ConnectionManagement</span>\n<span class=\"no\">348</span>       <span class=\"r\">def</span> <span class=\"fu\">initialize</span>(app)\n<span class=\"no\">349</span>         <span class=\"iv\">@app</span> = app\n<span class=\"no\">350</span>       <span class=\"r\">end</span>\n<span class=\"no\">351</span> \n<span class=\"no\">352</span>       <span class=\"r\">def</span> <span class=\"fu\">call</span>(env)\n<span class='container selected'><span class=\"no\">353</span>         <span class=\"iv\">@app</span>.call(env)<span class='overlay'></span></span>\n<span class=\"no\">354</span>       <span class=\"r\">ensure</span>\n<span class=\"no\">355</span>         <span class=\"c\"># Don't return connection (and perform implicit rollback) if</span>\n<span class=\"no\">356</span>         <span class=\"c\"># this request is a part of integration test</span>\n<span class=\"no\">357</span>         <span class=\"r\">unless</span> env.key?(<span class=\"s\"><span class=\"dl\">&quot;</span><span class=\"k\">rack.test</span><span class=\"dl\">&quot;</span></span>)\n<span class=\"no\">358</span>           <span class=\"co\">ActiveRecord</span>::<span class=\"co\">Base</span>.clear_active_connections!\n<span class=\"no\">359</span>         <span class=\"r\">end</span>\n<span class=\"no\">360</span>       <span class=\"r\">end</span>\n<span class=\"no\">361</span>     <span class=\"r\">end</span>\n<span class=\"no\">362</span>   <span class=\"r\">end</span>\n<span class=\"no\">363</span> <span class=\"r\">end</span>\n</span>",
    "path": "/Users/alex/.rvm/gems/ruby-1.8.7-p302@test_app/gems/activerecord-3.0.3/lib/active_record/connection_adapters/abstract/connection_pool.rb"
},
{
    "line": 46,
    "code": "<span class=\"CodeRay\"><span class=\"no\">36</span>     <span class=\"r\">end</span>\n<span class=\"no\">37</span> \n<span class=\"no\">38</span>     <span class=\"r\">def</span> <span class=\"fu\">initialize</span>(app, prepare_each_request = <span class=\"pc\">false</span>)\n<span class=\"no\">39</span>       <span class=\"iv\">@app</span>, <span class=\"iv\">@prepare_each_request</span> = app, prepare_each_request\n<span class=\"no\">40</span>       _run_prepare_callbacks\n<span class=\"no\">41</span>     <span class=\"r\">end</span>\n<span class=\"no\">42</span> \n<span class=\"no\">43</span>     <span class=\"r\">def</span> <span class=\"fu\">call</span>(env)\n<span class=\"no\">44</span>       _run_call_callbacks <span class=\"r\">do</span>\n<span class=\"no\">45</span>         _run_prepare_callbacks <span class=\"r\">if</span> <span class=\"iv\">@prepare_each_request</span>\n<span class='container selected'><span class=\"no\">46</span>         <span class=\"iv\">@app</span>.call(env)<span class='overlay'></span></span>\n<span class=\"no\">47</span>       <span class=\"r\">end</span>\n<span class=\"no\">48</span>     <span class=\"r\">end</span>\n<span class=\"no\">49</span>   <span class=\"r\">end</span>\n<span class=\"no\">50</span> <span class=\"r\">end</span>\n</span>",
    "path": "/Users/alex/.rvm/gems/ruby-1.8.7-p302@test_app/gems/actionpack-3.0.3/lib/action_dispatch/middleware/callbacks.rb"
},
{
    "line": 415,
    "code": "<span class=\"CodeRay\"><span class=\"no\">405</span>                 <span class=\"r\">unless</span> respond_to?(name)\n<span class=\"no\">406</span>                   <span class=\"pc\">self</span>.class.__create_keyed_callback(name, :<span class=\"c\">#{symbol}, self, &amp;blk)</span>\n<span class=\"no\">407</span>                 <span class=\"r\">end</span>\n<span class=\"no\">408</span> \n<span class=\"no\">409</span>                 send(name, &amp;blk)\n<span class=\"no\">410</span>               <span class=\"r\">else</span>\n<span class=\"no\">411</span>                 <span class=\"c\">#{body}</span>\n<span class=\"no\">412</span>               <span class=\"r\">end</span>\n<span class=\"no\">413</span>             <span class=\"r\">end</span>\n<span class=\"no\">414</span>             private <span class=\"sy\">:_run_</span><span class=\"c\">#{symbol}_callbacks</span>\n<span class='container selected'><span class=\"no\">415</span>           <span class=\"co\">RUBY_EVAL</span><span class='overlay'></span></span>\n<span class=\"no\">416</span>         <span class=\"r\">end</span>\n<span class=\"no\">417</span>       <span class=\"r\">end</span>\n<span class=\"no\">418</span> \n<span class=\"no\">419</span>       <span class=\"c\"># This is called the first time a callback is called with a particular</span>\n<span class=\"no\">420</span>       <span class=\"c\"># key. It creates a new callback method for the key, calculating</span>\n<span class=\"no\">421</span>       <span class=\"c\"># which callbacks can be omitted because of per_key conditions.</span>\n<span class=\"no\">422</span>       <span class=\"c\">#</span>\n<span class=\"no\">423</span>       <span class=\"r\">def</span> <span class=\"fu\">__create_keyed_callback</span>(name, kind, object, &amp;blk) <span class=\"c\">#:nodoc:</span>\n<span class=\"no\">424</span>         <span class=\"iv\">@_keyed_callbacks</span> ||= {}\n<span class=\"no\">425</span>         <span class=\"iv\">@_keyed_callbacks</span>[name] ||= <span class=\"r\">begin</span>\n<span class=\"no\">426</span>           str = send(<span class=\"s\"><span class=\"dl\">&quot;</span><span class=\"k\">_</span><span class=\"il\"><span class=\"idl\">#{</span>kind<span class=\"idl\">}</span></span><span class=\"k\">_callbacks</span><span class=\"dl\">&quot;</span></span>).compile(name, object)\n</span>",
    "path": "/Users/alex/.rvm/gems/ruby-1.8.7-p302@test_app/gems/activesupport-3.0.3/lib/active_support/callbacks.rb"
},
{
    "line": 44,
    "code": "<span class=\"CodeRay\"><span class=\"no\">34</span>     <span class=\"r\">def</span> <span class=\"pc\">self</span>.<span class=\"fu\">after</span>(*args, &amp;block)\n<span class=\"no\">35</span>       set_callback(<span class=\"sy\">:call</span>, <span class=\"sy\">:after</span>, *args, &amp;block)\n<span class=\"no\">36</span>     <span class=\"r\">end</span>\n<span class=\"no\">37</span> \n<span class=\"no\">38</span>     <span class=\"r\">def</span> <span class=\"fu\">initialize</span>(app, prepare_each_request = <span class=\"pc\">false</span>)\n<span class=\"no\">39</span>       <span class=\"iv\">@app</span>, <span class=\"iv\">@prepare_each_request</span> = app, prepare_each_request\n<span class=\"no\">40</span>       _run_prepare_callbacks\n<span class=\"no\">41</span>     <span class=\"r\">end</span>\n<span class=\"no\">42</span> \n<span class=\"no\">43</span>     <span class=\"r\">def</span> <span class=\"fu\">call</span>(env)\n<span class='container selected'><span class=\"no\">44</span>       _run_call_callbacks <span class=\"r\">do</span><span class='overlay'></span></span>\n<span class=\"no\">45</span>         _run_prepare_callbacks <span class=\"r\">if</span> <span class=\"iv\">@prepare_each_request</span>\n<span class=\"no\">46</span>         <span class=\"iv\">@app</span>.call(env)\n<span class=\"no\">47</span>       <span class=\"r\">end</span>\n<span class=\"no\">48</span>     <span class=\"r\">end</span>\n<span class=\"no\">49</span>   <span class=\"r\">end</span>\n<span class=\"no\">50</span> <span class=\"r\">end</span>\n</span>",
    "path": "/Users/alex/.rvm/gems/ruby-1.8.7-p302@test_app/gems/actionpack-3.0.3/lib/action_dispatch/middleware/callbacks.rb"
},
{
    "line": 107,
    "code": "<span class=\"CodeRay\"><span class=\"no\"> 97</span> \n<span class=\"no\"> 98</span>   <span class=\"r\">class</span> <span class=\"cl\">Sendfile</span>\n<span class=\"no\"> 99</span>     <span class=\"co\">F</span> = ::<span class=\"co\">File</span>\n<span class=\"no\">100</span> \n<span class=\"no\">101</span>     <span class=\"r\">def</span> <span class=\"fu\">initialize</span>(app, variation=<span class=\"pc\">nil</span>)\n<span class=\"no\">102</span>       <span class=\"iv\">@app</span> = app\n<span class=\"no\">103</span>       <span class=\"iv\">@variation</span> = variation\n<span class=\"no\">104</span>     <span class=\"r\">end</span>\n<span class=\"no\">105</span> \n<span class=\"no\">106</span>     <span class=\"r\">def</span> <span class=\"fu\">call</span>(env)\n<span class='container selected'><span class=\"no\">107</span>       status, headers, body = <span class=\"iv\">@app</span>.call(env)<span class='overlay'></span></span>\n<span class=\"no\">108</span>       <span class=\"r\">if</span> body.respond_to?(<span class=\"sy\">:to_path</span>)\n<span class=\"no\">109</span>         <span class=\"r\">case</span> type = variation(env)\n<span class=\"no\">110</span>         <span class=\"r\">when</span> <span class=\"s\"><span class=\"dl\">'</span><span class=\"k\">X-Accel-Redirect</span><span class=\"dl\">'</span></span>\n<span class=\"no\">111</span>           path = <span class=\"co\">F</span>.expand_path(body.to_path)\n<span class=\"no\">112</span>           <span class=\"r\">if</span> url = map_accel_path(env, path)\n<span class=\"no\">113</span>             headers[type] = url\n<span class=\"no\">114</span>             body = []\n<span class=\"no\">115</span>           <span class=\"r\">else</span>\n<span class=\"no\">116</span>             env[<span class=\"s\"><span class=\"dl\">'</span><span class=\"k\">rack.errors</span><span class=\"dl\">'</span></span>] &lt;&lt; <span class=\"s\"><span class=\"dl\">&quot;</span><span class=\"k\">X-Accel-Mapping header missing</span><span class=\"dl\">&quot;</span></span>\n<span class=\"no\">117</span>           <span class=\"r\">end</span>\n<span class=\"no\">118</span>         <span class=\"r\">when</span> <span class=\"s\"><span class=\"dl\">'</span><span class=\"k\">X-Sendfile</span><span class=\"dl\">'</span></span>, <span class=\"s\"><span class=\"dl\">'</span><span class=\"k\">X-Lighttpd-Send-File</span><span class=\"dl\">'</span></span>\n</span>",
    "path": "/Users/alex/.rvm/gems/ruby-1.8.7-p302@test_app/gems/rack-1.2.1/lib/rack/sendfile.rb"
},
{
    "line": 48,
    "code": "<span class=\"CodeRay\"><span class=\"no\">38</span>     <span class=\"r\">def</span> <span class=\"fu\">initialize</span>(app, check_ip_spoofing = <span class=\"pc\">true</span>, trusted_proxies = <span class=\"pc\">nil</span>)\n<span class=\"no\">39</span>       <span class=\"iv\">@app</span> = app\n<span class=\"no\">40</span>       <span class=\"iv\">@check_ip_spoofing</span> = check_ip_spoofing\n<span class=\"no\">41</span>       regex = <span class=\"s\"><span class=\"dl\">'</span><span class=\"k\">(^127</span><span class=\"k\">\\.</span><span class=\"k\">0</span><span class=\"k\">\\.</span><span class=\"k\">0</span><span class=\"k\">\\.</span><span class=\"k\">1$|^(10|172</span><span class=\"k\">\\.</span><span class=\"k\">(1[6-9]|2[0-9]|30|31)|192</span><span class=\"k\">\\.</span><span class=\"k\">168)</span><span class=\"k\">\\.</span><span class=\"k\">)</span><span class=\"dl\">'</span></span>\n<span class=\"no\">42</span>       regex &lt;&lt; <span class=\"s\"><span class=\"dl\">&quot;</span><span class=\"k\">|(</span><span class=\"il\"><span class=\"idl\">#{</span>trusted_proxies<span class=\"idl\">}</span></span><span class=\"k\">)</span><span class=\"dl\">&quot;</span></span> <span class=\"r\">if</span> trusted_proxies\n<span class=\"no\">43</span>       <span class=\"iv\">@trusted_proxies</span> = <span class=\"co\">Regexp</span>.new(regex, <span class=\"s\"><span class=\"dl\">&quot;</span><span class=\"k\">i</span><span class=\"dl\">&quot;</span></span>)\n<span class=\"no\">44</span>     <span class=\"r\">end</span>\n<span class=\"no\">45</span> \n<span class=\"no\">46</span>     <span class=\"r\">def</span> <span class=\"fu\">call</span>(env)\n<span class=\"no\">47</span>       env[<span class=\"s\"><span class=\"dl\">&quot;</span><span class=\"k\">action_dispatch.remote_ip</span><span class=\"dl\">&quot;</span></span>] = <span class=\"co\">RemoteIpGetter</span>.new(env, <span class=\"iv\">@check_ip_spoofing</span>, <span class=\"iv\">@trusted_proxies</span>)\n<span class='container selected'><span class=\"no\">48</span>       <span class=\"iv\">@app</span>.call(env)<span class='overlay'></span></span>\n<span class=\"no\">49</span>     <span class=\"r\">end</span>\n<span class=\"no\">50</span>   <span class=\"r\">end</span>\n<span class=\"no\">51</span> <span class=\"r\">end</span></span>",
    "path": "/Users/alex/.rvm/gems/ruby-1.8.7-p302@test_app/gems/actionpack-3.0.3/lib/action_dispatch/middleware/remote_ip.rb"
},
{
    "line": 46,
    "code": "<span class=\"CodeRay\"><span class=\"no\">36</span>        <span class=\"s\"><span class=\"dl\">&quot;</span><span class=\"k\">If you are the administrator of this website, then please read this web </span><span class=\"dl\">&quot;</span></span> &lt;&lt;\n<span class=\"no\">37</span>        <span class=\"s\"><span class=\"dl\">&quot;</span><span class=\"k\">application's log file and/or the web server's log file to find out what </span><span class=\"dl\">&quot;</span></span> &lt;&lt;\n<span class=\"no\">38</span>        <span class=\"s\"><span class=\"dl\">&quot;</span><span class=\"k\">went wrong.&lt;/body&gt;&lt;/html&gt;</span><span class=\"dl\">&quot;</span></span>]]\n<span class=\"no\">39</span> \n<span class=\"no\">40</span>     <span class=\"r\">def</span> <span class=\"fu\">initialize</span>(app, consider_all_requests_local = <span class=\"pc\">false</span>)\n<span class=\"no\">41</span>       <span class=\"iv\">@app</span> = app\n<span class=\"no\">42</span>       <span class=\"iv\">@consider_all_requests_local</span> = consider_all_requests_local\n<span class=\"no\">43</span>     <span class=\"r\">end</span>\n<span class=\"no\">44</span> \n<span class=\"no\">45</span>     <span class=\"r\">def</span> <span class=\"fu\">call</span>(env)\n<span class='container selected'><span class=\"no\">46</span>       status, headers, body = <span class=\"iv\">@app</span>.call(env)<span class='overlay'></span></span>\n<span class=\"no\">47</span> \n<span class=\"no\">48</span>       <span class=\"c\"># Only this middleware cares about RoutingError. So, let's just raise</span>\n<span class=\"no\">49</span>       <span class=\"c\"># it here.</span>\n<span class=\"no\">50</span>       <span class=\"c\"># TODO: refactor this middleware to handle the X-Cascade scenario without</span>\n<span class=\"no\">51</span>       <span class=\"c\"># having to raise an exception.</span>\n<span class=\"no\">52</span>       <span class=\"r\">if</span> headers[<span class=\"s\"><span class=\"dl\">'</span><span class=\"k\">X-Cascade</span><span class=\"dl\">'</span></span>] == <span class=\"s\"><span class=\"dl\">'</span><span class=\"k\">pass</span><span class=\"dl\">'</span></span>\n<span class=\"no\">53</span>         raise <span class=\"co\">ActionController</span>::<span class=\"co\">RoutingError</span>, <span class=\"s\"><span class=\"dl\">&quot;</span><span class=\"k\">No route matches </span><span class=\"il\"><span class=\"idl\">#{</span>env[<span class=\"s\"><span class=\"dl\">'</span><span class=\"k\">PATH_INFO</span><span class=\"dl\">'</span></span>].inspect<span class=\"idl\">}</span></span><span class=\"dl\">&quot;</span></span>\n<span class=\"no\">54</span>       <span class=\"r\">end</span>\n<span class=\"no\">55</span> \n<span class=\"no\">56</span>       [status, headers, body]\n<span class=\"no\">57</span>     <span class=\"r\">rescue</span> <span class=\"co\">Exception</span> =&gt; exception\n</span>",
    "path": "/Users/alex/.rvm/gems/ruby-1.8.7-p302@test_app/gems/actionpack-3.0.3/lib/action_dispatch/middleware/show_exceptions.rb"
},
{
    "line": 12,
    "code": "<span class=\"CodeRay\"><span class=\"no\"> 2</span>   <span class=\"r\">class</span> <span class=\"cl\">ShowApp</span>\n<span class=\"no\"> 3</span>     <span class=\"r\">def</span> <span class=\"fu\">initialize</span>(app)\n<span class=\"no\"> 4</span>       <span class=\"iv\">@app</span> = app\n<span class=\"no\"> 5</span>     <span class=\"r\">end</span>\n<span class=\"no\"> 6</span> \n<span class=\"no\"> 7</span>     <span class=\"r\">def</span> <span class=\"fu\">call</span>(env)\n<span class=\"no\"> 8</span>       <span class=\"r\">if</span> env[<span class=\"s\"><span class=\"dl\">'</span><span class=\"k\">PATH_INFO</span><span class=\"dl\">'</span></span>] =~ <span class=\"rx\"><span class=\"dl\">/</span><span class=\"k\">^</span><span class=\"ch\">\\/</span><span class=\"k\">code_buddy(.*)</span><span class=\"dl\">/</span></span> <span class=\"c\">#&amp;&amp; Rails.env.development?</span>\n<span class=\"no\"> 9</span>         env[<span class=\"s\"><span class=\"dl\">'</span><span class=\"k\">PATH_INFO</span><span class=\"dl\">'</span></span>] = <span class=\"gv\">$1</span>\n<span class=\"no\">10</span>         <span class=\"co\">App</span>.new.call(env)\n<span class=\"no\">11</span>       <span class=\"r\">else</span>\n<span class='container selected'><span class=\"no\">12</span>         <span class=\"iv\">@app</span>.call(env)<span class='overlay'></span></span>\n<span class=\"no\">13</span>       <span class=\"r\">end</span>\n<span class=\"no\">14</span>     <span class=\"r\">end</span>\n<span class=\"no\">15</span>   <span class=\"r\">end</span>\n<span class=\"no\">16</span> <span class=\"r\">end</span>\n</span>",
    "path": "/Users/alex/.rvm/gems/ruby-1.8.7-p302@test_app/gems/code_buddy-0.0.8/lib/code_buddy/middleware.rb"
},
{
    "line": 13,
    "code": "<span class=\"CodeRay\"><span class=\"no\"> 3</span> <span class=\"r\">module</span> <span class=\"cl\">Rails</span>\n<span class=\"no\"> 4</span>   <span class=\"r\">module</span> <span class=\"cl\">Rack</span>\n<span class=\"no\"> 5</span>     <span class=\"c\"># Log the request started and flush all loggers after it.</span>\n<span class=\"no\"> 6</span>     <span class=\"r\">class</span> <span class=\"cl\">Logger</span> &lt; <span class=\"co\">ActiveSupport</span>::<span class=\"co\">LogSubscriber</span>\n<span class=\"no\"> 7</span>       <span class=\"r\">def</span> <span class=\"fu\">initialize</span>(app)\n<span class=\"no\"> 8</span>         <span class=\"iv\">@app</span> = app\n<span class=\"no\"> 9</span>       <span class=\"r\">end</span>\n<span class=\"no\">10</span> \n<span class=\"no\">11</span>       <span class=\"r\">def</span> <span class=\"fu\">call</span>(env)\n<span class=\"no\">12</span>         before_dispatch(env)\n<span class='container selected'><span class=\"no\">13</span>         <span class=\"iv\">@app</span>.call(env)<span class='overlay'></span></span>\n<span class=\"no\">14</span>       <span class=\"r\">ensure</span>\n<span class=\"no\">15</span>         after_dispatch(env)\n<span class=\"no\">16</span>       <span class=\"r\">end</span>\n<span class=\"no\">17</span> \n<span class=\"no\">18</span>     protected\n<span class=\"no\">19</span> \n<span class=\"no\">20</span>       <span class=\"r\">def</span> <span class=\"fu\">before_dispatch</span>(env)\n<span class=\"no\">21</span>         request = <span class=\"co\">ActionDispatch</span>::<span class=\"co\">Request</span>.new(env)\n<span class=\"no\">22</span>         path = request.fullpath\n<span class=\"no\">23</span> \n<span class=\"no\">24</span>         info <span class=\"s\"><span class=\"dl\">&quot;</span><span class=\"ch\">\\n</span><span class=\"ch\">\\n</span><span class=\"k\">Started </span><span class=\"il\"><span class=\"idl\">#{</span>env[<span class=\"s\"><span class=\"dl\">&quot;</span><span class=\"k\">REQUEST_METHOD</span><span class=\"dl\">&quot;</span></span>]<span class=\"idl\">}</span></span><span class=\"k\"> </span><span class=\"ch\">\\&quot;</span><span class=\"il\"><span class=\"idl\">#{</span>path<span class=\"idl\">}</span></span><span class=\"ch\">\\&quot;</span><span class=\"k\"> </span><span class=\"dl\">&quot;</span></span> \\\n</span>",
    "path": "/Users/alex/.rvm/gems/ruby-1.8.7-p302@test_app/gems/railties-3.0.3/lib/rails/rack/logger.rb"
},
{
    "line": 17,
    "code": "<span class=\"CodeRay\"><span class=\"no\"> 7</span>   <span class=\"c\"># too.</span>\n<span class=\"no\"> 8</span>   <span class=\"r\">class</span> <span class=\"cl\">Runtime</span>\n<span class=\"no\"> 9</span>     <span class=\"r\">def</span> <span class=\"fu\">initialize</span>(app, name = <span class=\"pc\">nil</span>)\n<span class=\"no\">10</span>       <span class=\"iv\">@app</span> = app\n<span class=\"no\">11</span>       <span class=\"iv\">@header_name</span> = <span class=\"s\"><span class=\"dl\">&quot;</span><span class=\"k\">X-Runtime</span><span class=\"dl\">&quot;</span></span>\n<span class=\"no\">12</span>       <span class=\"iv\">@header_name</span> &lt;&lt; <span class=\"s\"><span class=\"dl\">&quot;</span><span class=\"k\">-</span><span class=\"il\"><span class=\"idl\">#{</span>name<span class=\"idl\">}</span></span><span class=\"dl\">&quot;</span></span> <span class=\"r\">if</span> name\n<span class=\"no\">13</span>     <span class=\"r\">end</span>\n<span class=\"no\">14</span> \n<span class=\"no\">15</span>     <span class=\"r\">def</span> <span class=\"fu\">call</span>(env)\n<span class=\"no\">16</span>       start_time = <span class=\"co\">Time</span>.now\n<span class='container selected'><span class=\"no\">17</span>       status, headers, body = <span class=\"iv\">@app</span>.call(env)<span class='overlay'></span></span>\n<span class=\"no\">18</span>       request_time = <span class=\"co\">Time</span>.now - start_time\n<span class=\"no\">19</span> \n<span class=\"no\">20</span>       <span class=\"r\">if</span> !headers.has_key?(<span class=\"iv\">@header_name</span>)\n<span class=\"no\">21</span>         headers[<span class=\"iv\">@header_name</span>] = <span class=\"s\"><span class=\"dl\">&quot;</span><span class=\"k\">%0.6f</span><span class=\"dl\">&quot;</span></span> % request_time\n<span class=\"no\">22</span>       <span class=\"r\">end</span>\n<span class=\"no\">23</span> \n<span class=\"no\">24</span>       [status, headers, body]\n<span class=\"no\">25</span>     <span class=\"r\">end</span>\n<span class=\"no\">26</span>   <span class=\"r\">end</span>\n<span class=\"no\">27</span> <span class=\"r\">end</span>\n</span>",
    "path": "/Users/alex/.rvm/gems/ruby-1.8.7-p302@test_app/gems/rack-1.2.1/lib/rack/runtime.rb"
},
{
    "line": 72,
    "code": "<span class=\"CodeRay\"><span class=\"no\">62</span>                 <span class=\"r\">end</span>\n<span class=\"no\">63</span>                 <span class=\"r\">alias</span> <span class=\"sy\">:to_s</span> <span class=\"sy\">:name</span>\n<span class=\"no\">64</span>               <span class=\"r\">end</span>\n<span class=\"no\">65</span> \n<span class=\"no\">66</span>               <span class=\"r\">def</span> <span class=\"fu\">initialize</span>(app)\n<span class=\"no\">67</span>                 <span class=\"iv\">@app</span> = app\n<span class=\"no\">68</span>               <span class=\"r\">end</span>\n<span class=\"no\">69</span> \n<span class=\"no\">70</span>               <span class=\"r\">def</span> <span class=\"fu\">call</span>(env)\n<span class=\"no\">71</span>                 <span class=\"co\">Thread</span>.current[:<span class=\"c\">#{thread_local_key}] = LocalStore.new</span>\n<span class='container selected'><span class=\"no\">72</span>                 <span class=\"iv\">@app</span>.call(env)<span class='overlay'></span></span>\n<span class=\"no\">73</span>               <span class=\"r\">ensure</span>\n<span class=\"no\">74</span>                 <span class=\"co\">Thread</span>.current[:<span class=\"c\">#{thread_local_key}] = nil</span>\n<span class=\"no\">75</span>               <span class=\"r\">end</span>\n<span class=\"no\">76</span>             <span class=\"co\">EOS</span>\n<span class=\"no\">77</span>             klass\n<span class=\"no\">78</span>           <span class=\"r\">end</span>\n<span class=\"no\">79</span>         <span class=\"r\">end</span>\n<span class=\"no\">80</span> \n<span class=\"no\">81</span>         <span class=\"r\">def</span> <span class=\"fu\">clear</span>(options = <span class=\"pc\">nil</span>) <span class=\"c\"># :nodoc:</span>\n<span class=\"no\">82</span>           local_cache.clear(options) <span class=\"r\">if</span> local_cache\n<span class=\"no\">83</span>           <span class=\"r\">super</span>\n</span>",
    "path": "/Users/alex/.rvm/gems/ruby-1.8.7-p302@test_app/gems/activesupport-3.0.3/lib/active_support/cache/strategy/local_cache.rb"
},
{
    "line": 11,
    "code": "<span class=\"CodeRay\"><span class=\"no\"> 1</span> <span class=\"r\">module</span> <span class=\"cl\">Rack</span>\n<span class=\"no\"> 2</span>   <span class=\"r\">class</span> <span class=\"cl\">Lock</span>\n<span class=\"no\"> 3</span>     <span class=\"co\">FLAG</span> = <span class=\"s\"><span class=\"dl\">'</span><span class=\"k\">rack.multithread</span><span class=\"dl\">'</span></span>.freeze\n<span class=\"no\"> 4</span> \n<span class=\"no\"> 5</span>     <span class=\"r\">def</span> <span class=\"fu\">initialize</span>(app, lock = <span class=\"co\">Mutex</span>.new)\n<span class=\"no\"> 6</span>       <span class=\"iv\">@app</span>, <span class=\"iv\">@lock</span> = app, lock\n<span class=\"no\"> 7</span>     <span class=\"r\">end</span>\n<span class=\"no\"> 8</span> \n<span class=\"no\"> 9</span>     <span class=\"r\">def</span> <span class=\"fu\">call</span>(env)\n<span class=\"no\">10</span>       old, env[<span class=\"co\">FLAG</span>] = env[<span class=\"co\">FLAG</span>], <span class=\"pc\">false</span>\n<span class='container selected'><span class=\"no\">11</span>       <span class=\"iv\">@lock</span>.synchronize { <span class=\"iv\">@app</span>.call(env) }<span class='overlay'></span></span>\n<span class=\"no\">12</span>     <span class=\"r\">ensure</span>\n<span class=\"no\">13</span>       env[<span class=\"co\">FLAG</span>] = old\n<span class=\"no\">14</span>     <span class=\"r\">end</span>\n<span class=\"no\">15</span>   <span class=\"r\">end</span>\n<span class=\"no\">16</span> <span class=\"r\">end</span>\n</span>",
    "path": "/Users/alex/.rvm/gems/ruby-1.8.7-p302@test_app/gems/rack-1.2.1/lib/rack/lock.rb"
},
{
    "line": 11,
    "code": "<span class=\"CodeRay\"><span class=\"no\"> 1</span> <span class=\"r\">module</span> <span class=\"cl\">Rack</span>\n<span class=\"no\"> 2</span>   <span class=\"r\">class</span> <span class=\"cl\">Lock</span>\n<span class=\"no\"> 3</span>     <span class=\"co\">FLAG</span> = <span class=\"s\"><span class=\"dl\">'</span><span class=\"k\">rack.multithread</span><span class=\"dl\">'</span></span>.freeze\n<span class=\"no\"> 4</span> \n<span class=\"no\"> 5</span>     <span class=\"r\">def</span> <span class=\"fu\">initialize</span>(app, lock = <span class=\"co\">Mutex</span>.new)\n<span class=\"no\"> 6</span>       <span class=\"iv\">@app</span>, <span class=\"iv\">@lock</span> = app, lock\n<span class=\"no\"> 7</span>     <span class=\"r\">end</span>\n<span class=\"no\"> 8</span> \n<span class=\"no\"> 9</span>     <span class=\"r\">def</span> <span class=\"fu\">call</span>(env)\n<span class=\"no\">10</span>       old, env[<span class=\"co\">FLAG</span>] = env[<span class=\"co\">FLAG</span>], <span class=\"pc\">false</span>\n<span class='container selected'><span class=\"no\">11</span>       <span class=\"iv\">@lock</span>.synchronize { <span class=\"iv\">@app</span>.call(env) }<span class='overlay'></span></span>\n<span class=\"no\">12</span>     <span class=\"r\">ensure</span>\n<span class=\"no\">13</span>       env[<span class=\"co\">FLAG</span>] = old\n<span class=\"no\">14</span>     <span class=\"r\">end</span>\n<span class=\"no\">15</span>   <span class=\"r\">end</span>\n<span class=\"no\">16</span> <span class=\"r\">end</span>\n</span>",
    "path": "/Users/alex/.rvm/gems/ruby-1.8.7-p302@test_app/gems/rack-1.2.1/lib/rack/lock.rb"
},
{
    "line": 11,
    "code": "<span class=\"CodeRay\"><span class=\"no\"> 1</span> <span class=\"r\">module</span> <span class=\"cl\">Rack</span>\n<span class=\"no\"> 2</span>   <span class=\"r\">class</span> <span class=\"cl\">Lock</span>\n<span class=\"no\"> 3</span>     <span class=\"co\">FLAG</span> = <span class=\"s\"><span class=\"dl\">'</span><span class=\"k\">rack.multithread</span><span class=\"dl\">'</span></span>.freeze\n<span class=\"no\"> 4</span> \n<span class=\"no\"> 5</span>     <span class=\"r\">def</span> <span class=\"fu\">initialize</span>(app, lock = <span class=\"co\">Mutex</span>.new)\n<span class=\"no\"> 6</span>       <span class=\"iv\">@app</span>, <span class=\"iv\">@lock</span> = app, lock\n<span class=\"no\"> 7</span>     <span class=\"r\">end</span>\n<span class=\"no\"> 8</span> \n<span class=\"no\"> 9</span>     <span class=\"r\">def</span> <span class=\"fu\">call</span>(env)\n<span class=\"no\">10</span>       old, env[<span class=\"co\">FLAG</span>] = env[<span class=\"co\">FLAG</span>], <span class=\"pc\">false</span>\n<span class='container selected'><span class=\"no\">11</span>       <span class=\"iv\">@lock</span>.synchronize { <span class=\"iv\">@app</span>.call(env) }<span class='overlay'></span></span>\n<span class=\"no\">12</span>     <span class=\"r\">ensure</span>\n<span class=\"no\">13</span>       env[<span class=\"co\">FLAG</span>] = old\n<span class=\"no\">14</span>     <span class=\"r\">end</span>\n<span class=\"no\">15</span>   <span class=\"r\">end</span>\n<span class=\"no\">16</span> <span class=\"r\">end</span>\n</span>",
    "path": "/Users/alex/.rvm/gems/ruby-1.8.7-p302@test_app/gems/rack-1.2.1/lib/rack/lock.rb"
},
{
    "line": 30,
    "code": "<span class=\"CodeRay\"><span class=\"no\">20</span>           cached_path = directory_exist?(path) ? <span class=\"s\"><span class=\"dl\">&quot;</span><span class=\"il\"><span class=\"idl\">#{</span>path<span class=\"idl\">}</span></span><span class=\"k\">/index</span><span class=\"dl\">&quot;</span></span> : path\n<span class=\"no\">21</span>           cached_path += ::<span class=\"co\">ActionController</span>::<span class=\"co\">Base</span>.page_cache_extension\n<span class=\"no\">22</span> \n<span class=\"no\">23</span>           <span class=\"r\">if</span> file_exist?(cached_path)\n<span class=\"no\">24</span>             env[<span class=\"s\"><span class=\"dl\">'</span><span class=\"k\">PATH_INFO</span><span class=\"dl\">'</span></span>] = cached_path\n<span class=\"no\">25</span>             <span class=\"r\">return</span> <span class=\"iv\">@file_server</span>.call(env)\n<span class=\"no\">26</span>           <span class=\"r\">end</span>\n<span class=\"no\">27</span>         <span class=\"r\">end</span>\n<span class=\"no\">28</span>       <span class=\"r\">end</span>\n<span class=\"no\">29</span> \n<span class='container selected'><span class=\"no\">30</span>       <span class=\"iv\">@app</span>.call(env)<span class='overlay'></span></span>\n<span class=\"no\">31</span>     <span class=\"r\">end</span>\n<span class=\"no\">32</span> \n<span class=\"no\">33</span>     private\n<span class=\"no\">34</span>       <span class=\"r\">def</span> <span class=\"fu\">file_exist?</span>(path)\n<span class=\"no\">35</span>         full_path = <span class=\"co\">File</span>.join(<span class=\"iv\">@file_server</span>.root, ::<span class=\"co\">Rack</span>::<span class=\"co\">Utils</span>.unescape(path))\n<span class=\"no\">36</span>         <span class=\"co\">File</span>.file?(full_path) &amp;&amp; <span class=\"co\">File</span>.readable?(full_path)\n<span class=\"no\">37</span>       <span class=\"r\">end</span>\n<span class=\"no\">38</span> \n<span class=\"no\">39</span>       <span class=\"r\">def</span> <span class=\"fu\">directory_exist?</span>(path)\n<span class=\"no\">40</span>         full_path = <span class=\"co\">File</span>.join(<span class=\"iv\">@file_server</span>.root, ::<span class=\"co\">Rack</span>::<span class=\"co\">Utils</span>.unescape(path))\n<span class=\"no\">41</span>         <span class=\"co\">File</span>.directory?(full_path) &amp;&amp; <span class=\"co\">File</span>.readable?(full_path)\n</span>",
    "path": "/Users/alex/.rvm/gems/ruby-1.8.7-p302@test_app/gems/actionpack-3.0.3/lib/action_dispatch/middleware/static.rb"
},
{
    "line": 168,
    "code": "<span class=\"CodeRay\"><span class=\"no\">158</span> \n<span class=\"no\">159</span>     <span class=\"r\">def</span> <span class=\"fu\">app</span>\n<span class=\"no\">160</span>       <span class=\"iv\">@app</span> ||= <span class=\"r\">begin</span>\n<span class=\"no\">161</span>         config.middleware = config.middleware.merge_into(default_middleware_stack)\n<span class=\"no\">162</span>         config.middleware.build(routes)\n<span class=\"no\">163</span>       <span class=\"r\">end</span>\n<span class=\"no\">164</span>     <span class=\"r\">end</span>\n<span class=\"no\">165</span>     <span class=\"r\">alias</span> <span class=\"sy\">:build_middleware_stack</span> <span class=\"sy\">:app</span>\n<span class=\"no\">166</span> \n<span class=\"no\">167</span>     <span class=\"r\">def</span> <span class=\"fu\">call</span>(env)\n<span class='container selected'><span class=\"no\">168</span>       app.call(env.reverse_merge!(env_defaults))<span class='overlay'></span></span>\n<span class=\"no\">169</span>     <span class=\"r\">end</span>\n<span class=\"no\">170</span> \n<span class=\"no\">171</span>     <span class=\"r\">def</span> <span class=\"fu\">env_defaults</span>\n<span class=\"no\">172</span>       <span class=\"iv\">@env_defaults</span> ||= {\n<span class=\"no\">173</span>         <span class=\"s\"><span class=\"dl\">&quot;</span><span class=\"k\">action_dispatch.parameter_filter</span><span class=\"dl\">&quot;</span></span> =&gt; config.filter_parameters,\n<span class=\"no\">174</span>         <span class=\"s\"><span class=\"dl\">&quot;</span><span class=\"k\">action_dispatch.secret_token</span><span class=\"dl\">&quot;</span></span> =&gt; config.secret_token\n<span class=\"no\">175</span>       }\n<span class=\"no\">176</span>     <span class=\"r\">end</span>\n<span class=\"no\">177</span> \n<span class=\"no\">178</span>     <span class=\"r\">def</span> <span class=\"fu\">initializers</span>\n<span class=\"no\">179</span>       initializers = <span class=\"co\">Bootstrap</span>.initializers_for(<span class=\"pc\">self</span>)\n</span>",
    "path": "/Users/alex/.rvm/gems/ruby-1.8.7-p302@test_app/gems/railties-3.0.3/lib/rails/application.rb"
},
{
    "line": 77,
    "code": "<span class=\"CodeRay\"><span class=\"no\">67</span>         <span class=\"co\">ActiveSupport</span>.run_load_hooks(<span class=\"sy\">:before_configuration</span>, base.instance)\n<span class=\"no\">68</span>       <span class=\"r\">end</span>\n<span class=\"no\">69</span> \n<span class=\"no\">70</span>       <span class=\"r\">def</span> <span class=\"fu\">respond_to?</span>(*args)\n<span class=\"no\">71</span>         <span class=\"r\">super</span> || instance.respond_to?(*args)\n<span class=\"no\">72</span>       <span class=\"r\">end</span>\n<span class=\"no\">73</span> \n<span class=\"no\">74</span>     protected\n<span class=\"no\">75</span> \n<span class=\"no\">76</span>       <span class=\"r\">def</span> <span class=\"fu\">method_missing</span>(*args, &amp;block)\n<span class='container selected'><span class=\"no\">77</span>         instance.send(*args, &amp;block)<span class='overlay'></span></span>\n<span class=\"no\">78</span>       <span class=\"r\">end</span>\n<span class=\"no\">79</span>     <span class=\"r\">end</span>\n<span class=\"no\">80</span> \n<span class=\"no\">81</span>     delegate <span class=\"sy\">:middleware</span>, <span class=\"sy\">:to</span> =&gt; <span class=\"sy\">:config</span>\n<span class=\"no\">82</span> \n<span class=\"no\">83</span>     <span class=\"c\"># This method is called just after an application inherits from Rails::Application,</span>\n<span class=\"no\">84</span>     <span class=\"c\"># allowing the developer to load classes in lib and use them during application</span>\n<span class=\"no\">85</span>     <span class=\"c\"># configuration.</span>\n<span class=\"no\">86</span>     <span class=\"c\">#</span>\n<span class=\"no\">87</span>     <span class=\"c\">#   class MyApplication &lt; Rails::Application</span>\n<span class=\"no\">88</span>     <span class=\"c\">#     require &quot;my_backend&quot; # in lib/my_backend</span>\n</span>",
    "path": "/Users/alex/.rvm/gems/ruby-1.8.7-p302@test_app/gems/railties-3.0.3/lib/rails/application.rb"
},
{
    "line": 77,
    "code": "<span class=\"CodeRay\"><span class=\"no\">67</span>         <span class=\"co\">ActiveSupport</span>.run_load_hooks(<span class=\"sy\">:before_configuration</span>, base.instance)\n<span class=\"no\">68</span>       <span class=\"r\">end</span>\n<span class=\"no\">69</span> \n<span class=\"no\">70</span>       <span class=\"r\">def</span> <span class=\"fu\">respond_to?</span>(*args)\n<span class=\"no\">71</span>         <span class=\"r\">super</span> || instance.respond_to?(*args)\n<span class=\"no\">72</span>       <span class=\"r\">end</span>\n<span class=\"no\">73</span> \n<span class=\"no\">74</span>     protected\n<span class=\"no\">75</span> \n<span class=\"no\">76</span>       <span class=\"r\">def</span> <span class=\"fu\">method_missing</span>(*args, &amp;block)\n<span class='container selected'><span class=\"no\">77</span>         instance.send(*args, &amp;block)<span class='overlay'></span></span>\n<span class=\"no\">78</span>       <span class=\"r\">end</span>\n<span class=\"no\">79</span>     <span class=\"r\">end</span>\n<span class=\"no\">80</span> \n<span class=\"no\">81</span>     delegate <span class=\"sy\">:middleware</span>, <span class=\"sy\">:to</span> =&gt; <span class=\"sy\">:config</span>\n<span class=\"no\">82</span> \n<span class=\"no\">83</span>     <span class=\"c\"># This method is called just after an application inherits from Rails::Application,</span>\n<span class=\"no\">84</span>     <span class=\"c\"># allowing the developer to load classes in lib and use them during application</span>\n<span class=\"no\">85</span>     <span class=\"c\"># configuration.</span>\n<span class=\"no\">86</span>     <span class=\"c\">#</span>\n<span class=\"no\">87</span>     <span class=\"c\">#   class MyApplication &lt; Rails::Application</span>\n<span class=\"no\">88</span>     <span class=\"c\">#     require &quot;my_backend&quot; # in lib/my_backend</span>\n</span>",
    "path": "/Users/alex/.rvm/gems/ruby-1.8.7-p302@test_app/gems/railties-3.0.3/lib/rails/application.rb"
},
{
    "line": 14,
    "code": "<span class=\"CodeRay\"><span class=\"no\"> 4</span>       <span class=\"r\">def</span> <span class=\"fu\">initialize</span>(app, log = <span class=\"pc\">nil</span>)\n<span class=\"no\"> 5</span>         <span class=\"iv\">@app</span> = app\n<span class=\"no\"> 6</span> \n<span class=\"no\"> 7</span>         path = <span class=\"co\">Pathname</span>.new(log || <span class=\"s\"><span class=\"dl\">&quot;</span><span class=\"il\"><span class=\"idl\">#{</span><span class=\"co\">File</span>.expand_path(<span class=\"co\">Rails</span>.root)<span class=\"idl\">}</span></span><span class=\"k\">/log/</span><span class=\"il\"><span class=\"idl\">#{</span><span class=\"co\">Rails</span>.env<span class=\"idl\">}</span></span><span class=\"k\">.log</span><span class=\"dl\">&quot;</span></span>).cleanpath\n<span class=\"no\"> 8</span>         <span class=\"iv\">@cursor</span> = ::<span class=\"co\">File</span>.size(path)\n<span class=\"no\"> 9</span> \n<span class=\"no\">10</span>         <span class=\"iv\">@file</span> = ::<span class=\"co\">File</span>.open(path, <span class=\"s\"><span class=\"dl\">'</span><span class=\"k\">r</span><span class=\"dl\">'</span></span>)\n<span class=\"no\">11</span>       <span class=\"r\">end</span>\n<span class=\"no\">12</span> \n<span class=\"no\">13</span>       <span class=\"r\">def</span> <span class=\"fu\">call</span>(env)\n<span class='container selected'><span class=\"no\">14</span>         response = <span class=\"iv\">@app</span>.call(env)<span class='overlay'></span></span>\n<span class=\"no\">15</span>         tail!\n<span class=\"no\">16</span>         response\n<span class=\"no\">17</span>       <span class=\"r\">end</span>\n<span class=\"no\">18</span> \n<span class=\"no\">19</span>       <span class=\"r\">def</span> <span class=\"fu\">tail!</span>\n<span class=\"no\">20</span>         <span class=\"iv\">@file</span>.seek <span class=\"iv\">@cursor</span>\n<span class=\"no\">21</span> \n<span class=\"no\">22</span>         <span class=\"r\">if</span> !<span class=\"iv\">@file</span>.eof?\n<span class=\"no\">23</span>           contents = <span class=\"iv\">@file</span>.read\n<span class=\"no\">24</span>           <span class=\"iv\">@cursor</span> = <span class=\"iv\">@file</span>.tell\n<span class=\"no\">25</span>           <span class=\"gv\">$stdout</span>.print contents\n</span>",
    "path": "/Users/alex/.rvm/gems/ruby-1.8.7-p302@test_app/gems/railties-3.0.3/lib/rails/rack/log_tailer.rb"
},
{
    "line": 13,
    "code": "<span class=\"CodeRay\"><span class=\"no\"> 3</span> <span class=\"r\">module</span> <span class=\"cl\">Rack</span>\n<span class=\"no\"> 4</span>   <span class=\"c\"># Sets the Content-Length header on responses with fixed-length bodies.</span>\n<span class=\"no\"> 5</span>   <span class=\"r\">class</span> <span class=\"cl\">ContentLength</span>\n<span class=\"no\"> 6</span>     include <span class=\"co\">Rack</span>::<span class=\"co\">Utils</span>\n<span class=\"no\"> 7</span> \n<span class=\"no\"> 8</span>     <span class=\"r\">def</span> <span class=\"fu\">initialize</span>(app)\n<span class=\"no\"> 9</span>       <span class=\"iv\">@app</span> = app\n<span class=\"no\">10</span>     <span class=\"r\">end</span>\n<span class=\"no\">11</span> \n<span class=\"no\">12</span>     <span class=\"r\">def</span> <span class=\"fu\">call</span>(env)\n<span class='container selected'><span class=\"no\">13</span>       status, headers, body = <span class=\"iv\">@app</span>.call(env)<span class='overlay'></span></span>\n<span class=\"no\">14</span>       headers = <span class=\"co\">HeaderHash</span>.new(headers)\n<span class=\"no\">15</span> \n<span class=\"no\">16</span>       <span class=\"r\">if</span> !<span class=\"co\">STATUS_WITH_NO_ENTITY_BODY</span>.include?(status.to_i) &amp;&amp;\n<span class=\"no\">17</span>          !headers[<span class=\"s\"><span class=\"dl\">'</span><span class=\"k\">Content-Length</span><span class=\"dl\">'</span></span>] &amp;&amp;\n<span class=\"no\">18</span>          !headers[<span class=\"s\"><span class=\"dl\">'</span><span class=\"k\">Transfer-Encoding</span><span class=\"dl\">'</span></span>] &amp;&amp;\n<span class=\"no\">19</span>          (body.respond_to?(<span class=\"sy\">:to_ary</span>) || body.respond_to?(<span class=\"sy\">:to_str</span>))\n<span class=\"no\">20</span> \n<span class=\"no\">21</span>         body = [body] <span class=\"r\">if</span> body.respond_to?(<span class=\"sy\">:to_str</span>) <span class=\"c\"># rack 0.4 compat</span>\n<span class=\"no\">22</span>         length = body.to_ary.inject(<span class=\"i\">0</span>) { |len, part| len + bytesize(part) }\n<span class=\"no\">23</span>         headers[<span class=\"s\"><span class=\"dl\">'</span><span class=\"k\">Content-Length</span><span class=\"dl\">'</span></span>] = length.to_s\n<span class=\"no\">24</span>       <span class=\"r\">end</span>\n</span>",
    "path": "/Users/alex/.rvm/gems/ruby-1.8.7-p302@test_app/gems/rack-1.2.1/lib/rack/content_length.rb"
},
{
    "line": 52,
    "code": "<span class=\"CodeRay\"><span class=\"no\">42</span>                    })\n<span class=\"no\">43</span> \n<span class=\"no\">44</span>         env[<span class=\"s\"><span class=\"dl\">&quot;</span><span class=\"k\">HTTP_VERSION</span><span class=\"dl\">&quot;</span></span>] ||= env[<span class=\"s\"><span class=\"dl\">&quot;</span><span class=\"k\">SERVER_PROTOCOL</span><span class=\"dl\">&quot;</span></span>]\n<span class=\"no\">45</span>         env[<span class=\"s\"><span class=\"dl\">&quot;</span><span class=\"k\">QUERY_STRING</span><span class=\"dl\">&quot;</span></span>] ||= <span class=\"s\"><span class=\"dl\">&quot;</span><span class=\"dl\">&quot;</span></span>\n<span class=\"no\">46</span>         env[<span class=\"s\"><span class=\"dl\">&quot;</span><span class=\"k\">REQUEST_PATH</span><span class=\"dl\">&quot;</span></span>] ||= <span class=\"s\"><span class=\"dl\">&quot;</span><span class=\"k\">/</span><span class=\"dl\">&quot;</span></span>\n<span class=\"no\">47</span>         <span class=\"r\">unless</span> env[<span class=\"s\"><span class=\"dl\">&quot;</span><span class=\"k\">PATH_INFO</span><span class=\"dl\">&quot;</span></span>] == <span class=\"s\"><span class=\"dl\">&quot;</span><span class=\"dl\">&quot;</span></span>\n<span class=\"no\">48</span>           path, n = req.request_uri.path, env[<span class=\"s\"><span class=\"dl\">&quot;</span><span class=\"k\">SCRIPT_NAME</span><span class=\"dl\">&quot;</span></span>].length\n<span class=\"no\">49</span>           env[<span class=\"s\"><span class=\"dl\">&quot;</span><span class=\"k\">PATH_INFO</span><span class=\"dl\">&quot;</span></span>] = path[n, path.length-n]\n<span class=\"no\">50</span>         <span class=\"r\">end</span>\n<span class=\"no\">51</span> \n<span class='container selected'><span class=\"no\">52</span>         status, headers, body = <span class=\"iv\">@app</span>.call(env)<span class='overlay'></span></span>\n<span class=\"no\">53</span>         <span class=\"r\">begin</span>\n<span class=\"no\">54</span>           res.status = status.to_i\n<span class=\"no\">55</span>           headers.each { |k, vs|\n<span class=\"no\">56</span>             <span class=\"r\">if</span> k.downcase == <span class=\"s\"><span class=\"dl\">&quot;</span><span class=\"k\">set-cookie</span><span class=\"dl\">&quot;</span></span>\n<span class=\"no\">57</span>               res.cookies.concat vs.split(<span class=\"s\"><span class=\"dl\">&quot;</span><span class=\"ch\">\\n</span><span class=\"dl\">&quot;</span></span>)\n<span class=\"no\">58</span>             <span class=\"r\">else</span>\n<span class=\"no\">59</span>               vs.split(<span class=\"s\"><span class=\"dl\">&quot;</span><span class=\"ch\">\\n</span><span class=\"dl\">&quot;</span></span>).each { |v|\n<span class=\"no\">60</span>                 res[k] = v\n<span class=\"no\">61</span>               }\n<span class=\"no\">62</span>             <span class=\"r\">end</span>\n<span class=\"no\">63</span>           }\n</span>",
    "path": "/Users/alex/.rvm/gems/ruby-1.8.7-p302@test_app/gems/rack-1.2.1/lib/rack/handler/webrick.rb"
},
{
    "line": 104,
    "code": "<span class=\"CodeRay\"><span class=\"no\"> 94</span>         <span class=\"r\">end</span>\n<span class=\"no\"> 95</span>         raise <span class=\"co\">HTTPStatus</span>::<span class=\"co\">NotFound</span>, <span class=\"s\"><span class=\"dl\">&quot;</span><span class=\"k\">`</span><span class=\"il\"><span class=\"idl\">#{</span>req.unparsed_uri<span class=\"idl\">}</span></span><span class=\"k\">' not found.</span><span class=\"dl\">&quot;</span></span>\n<span class=\"no\"> 96</span>       <span class=\"r\">end</span>\n<span class=\"no\"> 97</span> \n<span class=\"no\"> 98</span>       servlet, options, script_name, path_info = search_servlet(req.path)\n<span class=\"no\"> 99</span>       raise <span class=\"co\">HTTPStatus</span>::<span class=\"co\">NotFound</span>, <span class=\"s\"><span class=\"dl\">&quot;</span><span class=\"k\">`</span><span class=\"il\"><span class=\"idl\">#{</span>req.path<span class=\"idl\">}</span></span><span class=\"k\">' not found.</span><span class=\"dl\">&quot;</span></span> <span class=\"r\">unless</span> servlet\n<span class=\"no\">100</span>       req.script_name = script_name\n<span class=\"no\">101</span>       req.path_info = path_info\n<span class=\"no\">102</span>       si = servlet.get_instance(<span class=\"pc\">self</span>, *options)\n<span class=\"no\">103</span>       <span class=\"iv\">@logger</span>.debug(format(<span class=\"s\"><span class=\"dl\">&quot;</span><span class=\"k\">%s is invoked.</span><span class=\"dl\">&quot;</span></span>, si.class.name))\n<span class='container selected'><span class=\"no\">104</span>       si.service(req, res)<span class='overlay'></span></span>\n<span class=\"no\">105</span>     <span class=\"r\">end</span>\n<span class=\"no\">106</span> \n<span class=\"no\">107</span>     <span class=\"r\">def</span> <span class=\"fu\">do_OPTIONS</span>(req, res)\n<span class=\"no\">108</span>       res[<span class=\"s\"><span class=\"dl\">&quot;</span><span class=\"k\">allow</span><span class=\"dl\">&quot;</span></span>] = <span class=\"s\"><span class=\"dl\">&quot;</span><span class=\"k\">GET,HEAD,POST,OPTIONS</span><span class=\"dl\">&quot;</span></span>\n<span class=\"no\">109</span>     <span class=\"r\">end</span>\n<span class=\"no\">110</span> \n<span class=\"no\">111</span>     <span class=\"r\">def</span> <span class=\"fu\">mount</span>(dir, servlet, *options)\n<span class=\"no\">112</span>       <span class=\"iv\">@logger</span>.debug(sprintf(<span class=\"s\"><span class=\"dl\">&quot;</span><span class=\"k\">%s is mounted on %s.</span><span class=\"dl\">&quot;</span></span>, servlet.inspect, dir))\n<span class=\"no\">113</span>       <span class=\"iv\">@mount_tab</span>[dir] = [ servlet, options ]\n<span class=\"no\">114</span>     <span class=\"r\">end</span>\n<span class=\"no\">115</span> \n</span>",
    "path": "/Users/alex/.rvm/rubies/ruby-1.8.7-p302/lib/ruby/1.8/webrick/httpserver.rb"
},
{
    "line": 65,
    "code": "<span class=\"CodeRay\"><span class=\"no\">55</span>           raise <span class=\"co\">HTTPStatus</span>::<span class=\"co\">EOFError</span> <span class=\"r\">if</span> timeout &lt;= <span class=\"i\">0</span> || sock.eof?\n<span class=\"no\">56</span>           req.parse(sock)\n<span class=\"no\">57</span>           res.request_method = req.request_method\n<span class=\"no\">58</span>           res.request_uri = req.request_uri\n<span class=\"no\">59</span>           res.request_http_version = req.http_version\n<span class=\"no\">60</span>           res.keep_alive = req.keep_alive?\n<span class=\"no\">61</span>           server = lookup_server(req) || <span class=\"pc\">self</span>\n<span class=\"no\">62</span>           <span class=\"r\">if</span> callback = server[<span class=\"sy\">:RequestCallback</span>] || server[<span class=\"sy\">:RequestHandler</span>]\n<span class=\"no\">63</span>             callback.call(req, res)\n<span class=\"no\">64</span>           <span class=\"r\">end</span>\n<span class='container selected'><span class=\"no\">65</span>           server.service(req, res)<span class='overlay'></span></span>\n<span class=\"no\">66</span>         <span class=\"r\">rescue</span> <span class=\"co\">HTTPStatus</span>::<span class=\"co\">EOFError</span>, <span class=\"co\">HTTPStatus</span>::<span class=\"co\">RequestTimeout</span> =&gt; ex\n<span class=\"no\">67</span>           res.set_error(ex)\n<span class=\"no\">68</span>         <span class=\"r\">rescue</span> <span class=\"co\">HTTPStatus</span>::<span class=\"co\">Error</span> =&gt; ex\n<span class=\"no\">69</span>           <span class=\"iv\">@logger</span>.error(ex.message)\n<span class=\"no\">70</span>           res.set_error(ex)\n<span class=\"no\">71</span>         <span class=\"r\">rescue</span> <span class=\"co\">HTTPStatus</span>::<span class=\"co\">Status</span> =&gt; ex\n<span class=\"no\">72</span>           res.status = ex.code\n<span class=\"no\">73</span>         <span class=\"r\">rescue</span> <span class=\"co\">StandardError</span> =&gt; ex\n<span class=\"no\">74</span>           <span class=\"iv\">@logger</span>.error(ex)\n<span class=\"no\">75</span>           res.set_error(ex, <span class=\"pc\">true</span>)\n<span class=\"no\">76</span>         <span class=\"r\">ensure</span>\n</span>",
    "path": "/Users/alex/.rvm/rubies/ruby-1.8.7-p302/lib/ruby/1.8/webrick/httpserver.rb"
},
{
    "line": 173,
    "code": "<span class=\"CodeRay\"><span class=\"no\">163</span>         <span class=\"r\">begin</span>\n<span class=\"no\">164</span>           <span class=\"co\">Thread</span>.current[<span class=\"sy\">:WEBrickSocket</span>] = sock\n<span class=\"no\">165</span>           <span class=\"r\">begin</span>\n<span class=\"no\">166</span>             addr = sock.peeraddr\n<span class=\"no\">167</span>             <span class=\"iv\">@logger</span>.debug <span class=\"s\"><span class=\"dl\">&quot;</span><span class=\"k\">accept: </span><span class=\"il\"><span class=\"idl\">#{</span>addr[<span class=\"i\">3</span>]<span class=\"idl\">}</span></span><span class=\"k\">:</span><span class=\"il\"><span class=\"idl\">#{</span>addr[<span class=\"i\">1</span>]<span class=\"idl\">}</span></span><span class=\"dl\">&quot;</span></span>\n<span class=\"no\">168</span>           <span class=\"r\">rescue</span> <span class=\"co\">SocketError</span>\n<span class=\"no\">169</span>             <span class=\"iv\">@logger</span>.debug <span class=\"s\"><span class=\"dl\">&quot;</span><span class=\"k\">accept: &lt;address unknown&gt;</span><span class=\"dl\">&quot;</span></span>\n<span class=\"no\">170</span>             raise\n<span class=\"no\">171</span>           <span class=\"r\">end</span>\n<span class=\"no\">172</span>           call_callback(<span class=\"sy\">:AcceptCallback</span>, sock)\n<span class='container selected'><span class=\"no\">173</span>           block ? block.call(sock) : run(sock)<span class='overlay'></span></span>\n<span class=\"no\">174</span>         <span class=\"r\">rescue</span> <span class=\"co\">Errno</span>::<span class=\"co\">ENOTCONN</span>\n<span class=\"no\">175</span>           <span class=\"iv\">@logger</span>.debug <span class=\"s\"><span class=\"dl\">&quot;</span><span class=\"k\">Errno::ENOTCONN raised</span><span class=\"dl\">&quot;</span></span>\n<span class=\"no\">176</span>         <span class=\"r\">rescue</span> <span class=\"co\">ServerError</span> =&gt; ex\n<span class=\"no\">177</span>           msg = <span class=\"s\"><span class=\"dl\">&quot;</span><span class=\"il\"><span class=\"idl\">#{</span>ex.class<span class=\"idl\">}</span></span><span class=\"k\">: </span><span class=\"il\"><span class=\"idl\">#{</span>ex.message<span class=\"idl\">}</span></span><span class=\"ch\">\\n</span><span class=\"ch\">\\t</span><span class=\"il\"><span class=\"idl\">#{</span>ex.backtrace[<span class=\"i\">0</span>]<span class=\"idl\">}</span></span><span class=\"dl\">&quot;</span></span>\n<span class=\"no\">178</span>           <span class=\"iv\">@logger</span>.error msg\n<span class=\"no\">179</span>         <span class=\"r\">rescue</span> <span class=\"co\">Exception</span> =&gt; ex\n<span class=\"no\">180</span>           <span class=\"iv\">@logger</span>.error ex\n<span class=\"no\">181</span>         <span class=\"r\">ensure</span>\n<span class=\"no\">182</span>           <span class=\"iv\">@tokens</span>.push(<span class=\"pc\">nil</span>)\n<span class=\"no\">183</span>           <span class=\"co\">Thread</span>.current[<span class=\"sy\">:WEBrickSocket</span>] = <span class=\"pc\">nil</span>\n<span class=\"no\">184</span>           <span class=\"r\">if</span> addr\n</span>",
    "path": "/Users/alex/.rvm/rubies/ruby-1.8.7-p302/lib/ruby/1.8/webrick/server.rb"
},
{
    "line": 162,
    "code": "<span class=\"CodeRay\"><span class=\"no\">152</span>         <span class=\"c\"># TCP connection was established but RST segment was sent</span>\n<span class=\"no\">153</span>         <span class=\"c\"># from peer before calling TCPServer#accept.</span>\n<span class=\"no\">154</span>       <span class=\"r\">rescue</span> <span class=\"co\">Exception</span> =&gt; ex\n<span class=\"no\">155</span>         msg = <span class=\"s\"><span class=\"dl\">&quot;</span><span class=\"il\"><span class=\"idl\">#{</span>ex.class<span class=\"idl\">}</span></span><span class=\"k\">: </span><span class=\"il\"><span class=\"idl\">#{</span>ex.message<span class=\"idl\">}</span></span><span class=\"ch\">\\n</span><span class=\"ch\">\\t</span><span class=\"il\"><span class=\"idl\">#{</span>ex.backtrace[<span class=\"i\">0</span>]<span class=\"idl\">}</span></span><span class=\"dl\">&quot;</span></span>\n<span class=\"no\">156</span>         <span class=\"iv\">@logger</span>.error msg\n<span class=\"no\">157</span>       <span class=\"r\">end</span>\n<span class=\"no\">158</span>       <span class=\"r\">return</span> sock\n<span class=\"no\">159</span>     <span class=\"r\">end</span>\n<span class=\"no\">160</span> \n<span class=\"no\">161</span>     <span class=\"r\">def</span> <span class=\"fu\">start_thread</span>(sock, &amp;block)\n<span class='container selected'><span class=\"no\">162</span>       <span class=\"co\">Thread</span>.start{<span class='overlay'></span></span>\n<span class=\"no\">163</span>         <span class=\"r\">begin</span>\n<span class=\"no\">164</span>           <span class=\"co\">Thread</span>.current[<span class=\"sy\">:WEBrickSocket</span>] = sock\n<span class=\"no\">165</span>           <span class=\"r\">begin</span>\n<span class=\"no\">166</span>             addr = sock.peeraddr\n<span class=\"no\">167</span>             <span class=\"iv\">@logger</span>.debug <span class=\"s\"><span class=\"dl\">&quot;</span><span class=\"k\">accept: </span><span class=\"il\"><span class=\"idl\">#{</span>addr[<span class=\"i\">3</span>]<span class=\"idl\">}</span></span><span class=\"k\">:</span><span class=\"il\"><span class=\"idl\">#{</span>addr[<span class=\"i\">1</span>]<span class=\"idl\">}</span></span><span class=\"dl\">&quot;</span></span>\n<span class=\"no\">168</span>           <span class=\"r\">rescue</span> <span class=\"co\">SocketError</span>\n<span class=\"no\">169</span>             <span class=\"iv\">@logger</span>.debug <span class=\"s\"><span class=\"dl\">&quot;</span><span class=\"k\">accept: &lt;address unknown&gt;</span><span class=\"dl\">&quot;</span></span>\n<span class=\"no\">170</span>             raise\n<span class=\"no\">171</span>           <span class=\"r\">end</span>\n<span class=\"no\">172</span>           call_callback(<span class=\"sy\">:AcceptCallback</span>, sock)\n<span class=\"no\">173</span>           block ? block.call(sock) : run(sock)\n</span>",
    "path": "/Users/alex/.rvm/rubies/ruby-1.8.7-p302/lib/ruby/1.8/webrick/server.rb"
},
{
    "line": 162,
    "code": "<span class=\"CodeRay\"><span class=\"no\">152</span>         <span class=\"c\"># TCP connection was established but RST segment was sent</span>\n<span class=\"no\">153</span>         <span class=\"c\"># from peer before calling TCPServer#accept.</span>\n<span class=\"no\">154</span>       <span class=\"r\">rescue</span> <span class=\"co\">Exception</span> =&gt; ex\n<span class=\"no\">155</span>         msg = <span class=\"s\"><span class=\"dl\">&quot;</span><span class=\"il\"><span class=\"idl\">#{</span>ex.class<span class=\"idl\">}</span></span><span class=\"k\">: </span><span class=\"il\"><span class=\"idl\">#{</span>ex.message<span class=\"idl\">}</span></span><span class=\"ch\">\\n</span><span class=\"ch\">\\t</span><span class=\"il\"><span class=\"idl\">#{</span>ex.backtrace[<span class=\"i\">0</span>]<span class=\"idl\">}</span></span><span class=\"dl\">&quot;</span></span>\n<span class=\"no\">156</span>         <span class=\"iv\">@logger</span>.error msg\n<span class=\"no\">157</span>       <span class=\"r\">end</span>\n<span class=\"no\">158</span>       <span class=\"r\">return</span> sock\n<span class=\"no\">159</span>     <span class=\"r\">end</span>\n<span class=\"no\">160</span> \n<span class=\"no\">161</span>     <span class=\"r\">def</span> <span class=\"fu\">start_thread</span>(sock, &amp;block)\n<span class='container selected'><span class=\"no\">162</span>       <span class=\"co\">Thread</span>.start{<span class='overlay'></span></span>\n<span class=\"no\">163</span>         <span class=\"r\">begin</span>\n<span class=\"no\">164</span>           <span class=\"co\">Thread</span>.current[<span class=\"sy\">:WEBrickSocket</span>] = sock\n<span class=\"no\">165</span>           <span class=\"r\">begin</span>\n<span class=\"no\">166</span>             addr = sock.peeraddr\n<span class=\"no\">167</span>             <span class=\"iv\">@logger</span>.debug <span class=\"s\"><span class=\"dl\">&quot;</span><span class=\"k\">accept: </span><span class=\"il\"><span class=\"idl\">#{</span>addr[<span class=\"i\">3</span>]<span class=\"idl\">}</span></span><span class=\"k\">:</span><span class=\"il\"><span class=\"idl\">#{</span>addr[<span class=\"i\">1</span>]<span class=\"idl\">}</span></span><span class=\"dl\">&quot;</span></span>\n<span class=\"no\">168</span>           <span class=\"r\">rescue</span> <span class=\"co\">SocketError</span>\n<span class=\"no\">169</span>             <span class=\"iv\">@logger</span>.debug <span class=\"s\"><span class=\"dl\">&quot;</span><span class=\"k\">accept: &lt;address unknown&gt;</span><span class=\"dl\">&quot;</span></span>\n<span class=\"no\">170</span>             raise\n<span class=\"no\">171</span>           <span class=\"r\">end</span>\n<span class=\"no\">172</span>           call_callback(<span class=\"sy\">:AcceptCallback</span>, sock)\n<span class=\"no\">173</span>           block ? block.call(sock) : run(sock)\n</span>",
    "path": "/Users/alex/.rvm/rubies/ruby-1.8.7-p302/lib/ruby/1.8/webrick/server.rb"
},
{
    "line": 95,
    "code": "<span class=\"CodeRay\"><span class=\"no\"> 85</span>         call_callback(<span class=\"sy\">:StartCallback</span>)\n<span class=\"no\"> 86</span> \n<span class=\"no\"> 87</span>         thgroup = <span class=\"co\">ThreadGroup</span>.new\n<span class=\"no\"> 88</span>         <span class=\"iv\">@status</span> = <span class=\"sy\">:Running</span>\n<span class=\"no\"> 89</span>         <span class=\"r\">while</span> <span class=\"iv\">@status</span> == <span class=\"sy\">:Running</span>\n<span class=\"no\"> 90</span>           <span class=\"r\">begin</span>\n<span class=\"no\"> 91</span>             <span class=\"r\">if</span> svrs = <span class=\"co\">IO</span>.select(<span class=\"iv\">@listeners</span>, <span class=\"pc\">nil</span>, <span class=\"pc\">nil</span>, <span class=\"fl\">2.0</span>)\n<span class=\"no\"> 92</span>               svrs[<span class=\"i\">0</span>].each{|svr|\n<span class=\"no\"> 93</span>                 <span class=\"iv\">@tokens</span>.pop          <span class=\"c\"># blocks while no token is there.</span>\n<span class=\"no\"> 94</span>                 <span class=\"r\">if</span> sock = accept_client(svr)\n<span class='container selected'><span class=\"no\"> 95</span>                   th = start_thread(sock, &amp;block)<span class='overlay'></span></span>\n<span class=\"no\"> 96</span>                   th[<span class=\"sy\">:WEBrickThread</span>] = <span class=\"pc\">true</span>\n<span class=\"no\"> 97</span>                   thgroup.add(th)\n<span class=\"no\"> 98</span>                 <span class=\"r\">else</span>\n<span class=\"no\"> 99</span>                   <span class=\"iv\">@tokens</span>.push(<span class=\"pc\">nil</span>)\n<span class=\"no\">100</span>                 <span class=\"r\">end</span>\n<span class=\"no\">101</span>               }\n<span class=\"no\">102</span>             <span class=\"r\">end</span>\n<span class=\"no\">103</span>           <span class=\"r\">rescue</span> <span class=\"co\">Errno</span>::<span class=\"co\">EBADF</span>, <span class=\"co\">IOError</span> =&gt; ex\n<span class=\"no\">104</span>             <span class=\"c\"># if the listening socket was closed in GenericServer#shutdown,</span>\n<span class=\"no\">105</span>             <span class=\"c\"># IO::select raise it.</span>\n<span class=\"no\">106</span>           <span class=\"r\">rescue</span> <span class=\"co\">Exception</span> =&gt; ex\n</span>",
    "path": "/Users/alex/.rvm/rubies/ruby-1.8.7-p302/lib/ruby/1.8/webrick/server.rb"
},
{
    "line": 92,
    "code": "<span class=\"CodeRay\"><span class=\"no\"> 82</span>       server_type.start{\n<span class=\"no\"> 83</span>         <span class=\"iv\">@logger</span>.info \\\n<span class=\"no\"> 84</span>           <span class=\"s\"><span class=\"dl\">&quot;</span><span class=\"il\"><span class=\"idl\">#{</span><span class=\"pc\">self</span>.class<span class=\"idl\">}</span></span><span class=\"k\">#start: pid=</span><span class=\"il\"><span class=\"idl\">#{</span><span class=\"gv\">$$</span><span class=\"idl\">}</span></span><span class=\"k\"> port=</span><span class=\"il\"><span class=\"idl\">#{</span><span class=\"iv\">@config</span>[<span class=\"sy\">:Port</span>]<span class=\"idl\">}</span></span><span class=\"dl\">&quot;</span></span>\n<span class=\"no\"> 85</span>         call_callback(<span class=\"sy\">:StartCallback</span>)\n<span class=\"no\"> 86</span> \n<span class=\"no\"> 87</span>         thgroup = <span class=\"co\">ThreadGroup</span>.new\n<span class=\"no\"> 88</span>         <span class=\"iv\">@status</span> = <span class=\"sy\">:Running</span>\n<span class=\"no\"> 89</span>         <span class=\"r\">while</span> <span class=\"iv\">@status</span> == <span class=\"sy\">:Running</span>\n<span class=\"no\"> 90</span>           <span class=\"r\">begin</span>\n<span class=\"no\"> 91</span>             <span class=\"r\">if</span> svrs = <span class=\"co\">IO</span>.select(<span class=\"iv\">@listeners</span>, <span class=\"pc\">nil</span>, <span class=\"pc\">nil</span>, <span class=\"fl\">2.0</span>)\n<span class='container selected'><span class=\"no\"> 92</span>               svrs[<span class=\"i\">0</span>].each{|svr|<span class='overlay'></span></span>\n<span class=\"no\"> 93</span>                 <span class=\"iv\">@tokens</span>.pop          <span class=\"c\"># blocks while no token is there.</span>\n<span class=\"no\"> 94</span>                 <span class=\"r\">if</span> sock = accept_client(svr)\n<span class=\"no\"> 95</span>                   th = start_thread(sock, &amp;block)\n<span class=\"no\"> 96</span>                   th[<span class=\"sy\">:WEBrickThread</span>] = <span class=\"pc\">true</span>\n<span class=\"no\"> 97</span>                   thgroup.add(th)\n<span class=\"no\"> 98</span>                 <span class=\"r\">else</span>\n<span class=\"no\"> 99</span>                   <span class=\"iv\">@tokens</span>.push(<span class=\"pc\">nil</span>)\n<span class=\"no\">100</span>                 <span class=\"r\">end</span>\n<span class=\"no\">101</span>               }\n<span class=\"no\">102</span>             <span class=\"r\">end</span>\n<span class=\"no\">103</span>           <span class=\"r\">rescue</span> <span class=\"co\">Errno</span>::<span class=\"co\">EBADF</span>, <span class=\"co\">IOError</span> =&gt; ex\n</span>",
    "path": "/Users/alex/.rvm/rubies/ruby-1.8.7-p302/lib/ruby/1.8/webrick/server.rb"
},
{
    "line": 92,
    "code": "<span class=\"CodeRay\"><span class=\"no\"> 82</span>       server_type.start{\n<span class=\"no\"> 83</span>         <span class=\"iv\">@logger</span>.info \\\n<span class=\"no\"> 84</span>           <span class=\"s\"><span class=\"dl\">&quot;</span><span class=\"il\"><span class=\"idl\">#{</span><span class=\"pc\">self</span>.class<span class=\"idl\">}</span></span><span class=\"k\">#start: pid=</span><span class=\"il\"><span class=\"idl\">#{</span><span class=\"gv\">$$</span><span class=\"idl\">}</span></span><span class=\"k\"> port=</span><span class=\"il\"><span class=\"idl\">#{</span><span class=\"iv\">@config</span>[<span class=\"sy\">:Port</span>]<span class=\"idl\">}</span></span><span class=\"dl\">&quot;</span></span>\n<span class=\"no\"> 85</span>         call_callback(<span class=\"sy\">:StartCallback</span>)\n<span class=\"no\"> 86</span> \n<span class=\"no\"> 87</span>         thgroup = <span class=\"co\">ThreadGroup</span>.new\n<span class=\"no\"> 88</span>         <span class=\"iv\">@status</span> = <span class=\"sy\">:Running</span>\n<span class=\"no\"> 89</span>         <span class=\"r\">while</span> <span class=\"iv\">@status</span> == <span class=\"sy\">:Running</span>\n<span class=\"no\"> 90</span>           <span class=\"r\">begin</span>\n<span class=\"no\"> 91</span>             <span class=\"r\">if</span> svrs = <span class=\"co\">IO</span>.select(<span class=\"iv\">@listeners</span>, <span class=\"pc\">nil</span>, <span class=\"pc\">nil</span>, <span class=\"fl\">2.0</span>)\n<span class='container selected'><span class=\"no\"> 92</span>               svrs[<span class=\"i\">0</span>].each{|svr|<span class='overlay'></span></span>\n<span class=\"no\"> 93</span>                 <span class=\"iv\">@tokens</span>.pop          <span class=\"c\"># blocks while no token is there.</span>\n<span class=\"no\"> 94</span>                 <span class=\"r\">if</span> sock = accept_client(svr)\n<span class=\"no\"> 95</span>                   th = start_thread(sock, &amp;block)\n<span class=\"no\"> 96</span>                   th[<span class=\"sy\">:WEBrickThread</span>] = <span class=\"pc\">true</span>\n<span class=\"no\"> 97</span>                   thgroup.add(th)\n<span class=\"no\"> 98</span>                 <span class=\"r\">else</span>\n<span class=\"no\"> 99</span>                   <span class=\"iv\">@tokens</span>.push(<span class=\"pc\">nil</span>)\n<span class=\"no\">100</span>                 <span class=\"r\">end</span>\n<span class=\"no\">101</span>               }\n<span class=\"no\">102</span>             <span class=\"r\">end</span>\n<span class=\"no\">103</span>           <span class=\"r\">rescue</span> <span class=\"co\">Errno</span>::<span class=\"co\">EBADF</span>, <span class=\"co\">IOError</span> =&gt; ex\n</span>",
    "path": "/Users/alex/.rvm/rubies/ruby-1.8.7-p302/lib/ruby/1.8/webrick/server.rb"
},
{
    "line": 23,
    "code": "<span class=\"CodeRay\"><span class=\"no\">13</span> require <span class=\"s\"><span class=\"dl\">'</span><span class=\"k\">timeout</span><span class=\"dl\">'</span></span>\n<span class=\"no\">14</span> require <span class=\"s\"><span class=\"dl\">'</span><span class=\"k\">webrick/config</span><span class=\"dl\">'</span></span>\n<span class=\"no\">15</span> require <span class=\"s\"><span class=\"dl\">'</span><span class=\"k\">webrick/log</span><span class=\"dl\">'</span></span>\n<span class=\"no\">16</span> \n<span class=\"no\">17</span> <span class=\"r\">module</span> <span class=\"cl\">WEBrick</span>\n<span class=\"no\">18</span> \n<span class=\"no\">19</span>   <span class=\"r\">class</span> <span class=\"cl\">ServerError</span> &lt; <span class=\"co\">StandardError</span>; <span class=\"r\">end</span>\n<span class=\"no\">20</span> \n<span class=\"no\">21</span>   <span class=\"r\">class</span> <span class=\"cl\">SimpleServer</span>\n<span class=\"no\">22</span>     <span class=\"r\">def</span> <span class=\"co\">SimpleServer</span>.start\n<span class='container selected'><span class=\"no\">23</span>       <span class=\"r\">yield</span><span class='overlay'></span></span>\n<span class=\"no\">24</span>     <span class=\"r\">end</span>\n<span class=\"no\">25</span>   <span class=\"r\">end</span>\n<span class=\"no\">26</span> \n<span class=\"no\">27</span>   <span class=\"r\">class</span> <span class=\"cl\">Daemon</span>\n<span class=\"no\">28</span>     <span class=\"r\">def</span> <span class=\"co\">Daemon</span>.start\n<span class=\"no\">29</span>       exit!(<span class=\"i\">0</span>) <span class=\"r\">if</span> fork\n<span class=\"no\">30</span>       <span class=\"co\">Process</span>::setsid\n<span class=\"no\">31</span>       exit!(<span class=\"i\">0</span>) <span class=\"r\">if</span> fork\n<span class=\"no\">32</span>       <span class=\"co\">Dir</span>::chdir(<span class=\"s\"><span class=\"dl\">&quot;</span><span class=\"k\">/</span><span class=\"dl\">&quot;</span></span>)\n<span class=\"no\">33</span>       <span class=\"co\">File</span>::umask(<span class=\"i\">0</span>)\n<span class=\"no\">34</span>       <span class=\"co\">STDIN</span>.reopen(<span class=\"s\"><span class=\"dl\">&quot;</span><span class=\"k\">/dev/null</span><span class=\"dl\">&quot;</span></span>)\n</span>",
    "path": "/Users/alex/.rvm/rubies/ruby-1.8.7-p302/lib/ruby/1.8/webrick/server.rb"
},
{
    "line": 82,
    "code": "<span class=\"CodeRay\"><span class=\"no\">72</span>     <span class=\"r\">end</span>\n<span class=\"no\">73</span> \n<span class=\"no\">74</span>     <span class=\"r\">def</span> <span class=\"fu\">listen</span>(address, port)\n<span class=\"no\">75</span>       <span class=\"iv\">@listeners</span> += <span class=\"co\">Utils</span>::create_listeners(address, port, <span class=\"iv\">@logger</span>)\n<span class=\"no\">76</span>     <span class=\"r\">end</span>\n<span class=\"no\">77</span> \n<span class=\"no\">78</span>     <span class=\"r\">def</span> <span class=\"fu\">start</span>(&amp;block)\n<span class=\"no\">79</span>       raise <span class=\"co\">ServerError</span>, <span class=\"s\"><span class=\"dl\">&quot;</span><span class=\"k\">already started.</span><span class=\"dl\">&quot;</span></span> <span class=\"r\">if</span> <span class=\"iv\">@status</span> != <span class=\"sy\">:Stop</span>\n<span class=\"no\">80</span>       server_type = <span class=\"iv\">@config</span>[<span class=\"sy\">:ServerType</span>] || <span class=\"co\">SimpleServer</span>\n<span class=\"no\">81</span> \n<span class='container selected'><span class=\"no\">82</span>       server_type.start{<span class='overlay'></span></span>\n<span class=\"no\">83</span>         <span class=\"iv\">@logger</span>.info \\\n<span class=\"no\">84</span>           <span class=\"s\"><span class=\"dl\">&quot;</span><span class=\"il\"><span class=\"idl\">#{</span><span class=\"pc\">self</span>.class<span class=\"idl\">}</span></span><span class=\"k\">#start: pid=</span><span class=\"il\"><span class=\"idl\">#{</span><span class=\"gv\">$$</span><span class=\"idl\">}</span></span><span class=\"k\"> port=</span><span class=\"il\"><span class=\"idl\">#{</span><span class=\"iv\">@config</span>[<span class=\"sy\">:Port</span>]<span class=\"idl\">}</span></span><span class=\"dl\">&quot;</span></span>\n<span class=\"no\">85</span>         call_callback(<span class=\"sy\">:StartCallback</span>)\n<span class=\"no\">86</span> \n<span class=\"no\">87</span>         thgroup = <span class=\"co\">ThreadGroup</span>.new\n<span class=\"no\">88</span>         <span class=\"iv\">@status</span> = <span class=\"sy\">:Running</span>\n<span class=\"no\">89</span>         <span class=\"r\">while</span> <span class=\"iv\">@status</span> == <span class=\"sy\">:Running</span>\n<span class=\"no\">90</span>           <span class=\"r\">begin</span>\n<span class=\"no\">91</span>             <span class=\"r\">if</span> svrs = <span class=\"co\">IO</span>.select(<span class=\"iv\">@listeners</span>, <span class=\"pc\">nil</span>, <span class=\"pc\">nil</span>, <span class=\"fl\">2.0</span>)\n<span class=\"no\">92</span>               svrs[<span class=\"i\">0</span>].each{|svr|\n<span class=\"no\">93</span>                 <span class=\"iv\">@tokens</span>.pop          <span class=\"c\"># blocks while no token is there.</span>\n</span>",
    "path": "/Users/alex/.rvm/rubies/ruby-1.8.7-p302/lib/ruby/1.8/webrick/server.rb"
},
{
    "line": 13,
    "code": "<span class=\"CodeRay\"><span class=\"no\"> 3</span> require <span class=\"s\"><span class=\"dl\">'</span><span class=\"k\">rack/content_length</span><span class=\"dl\">'</span></span>\n<span class=\"no\"> 4</span> \n<span class=\"no\"> 5</span> <span class=\"r\">module</span> <span class=\"cl\">Rack</span>\n<span class=\"no\"> 6</span>   <span class=\"r\">module</span> <span class=\"cl\">Handler</span>\n<span class=\"no\"> 7</span>     <span class=\"r\">class</span> <span class=\"cl\">WEBrick</span> &lt; ::<span class=\"co\">WEBrick</span>::<span class=\"co\">HTTPServlet</span>::<span class=\"co\">AbstractServlet</span>\n<span class=\"no\"> 8</span>       <span class=\"r\">def</span> <span class=\"pc\">self</span>.<span class=\"fu\">run</span>(app, options={})\n<span class=\"no\"> 9</span>         options[<span class=\"sy\">:BindAddress</span>] = options.delete(<span class=\"sy\">:Host</span>) <span class=\"r\">if</span> options[<span class=\"sy\">:Host</span>]\n<span class=\"no\">10</span>         <span class=\"iv\">@server</span> = ::<span class=\"co\">WEBrick</span>::<span class=\"co\">HTTPServer</span>.new(options)\n<span class=\"no\">11</span>         <span class=\"iv\">@server</span>.mount <span class=\"s\"><span class=\"dl\">&quot;</span><span class=\"k\">/</span><span class=\"dl\">&quot;</span></span>, <span class=\"co\">Rack</span>::<span class=\"co\">Handler</span>::<span class=\"co\">WEBrick</span>, app\n<span class=\"no\">12</span>         <span class=\"r\">yield</span> <span class=\"iv\">@server</span>  <span class=\"r\">if</span> block_given?\n<span class='container selected'><span class=\"no\">13</span>         <span class=\"iv\">@server</span>.start<span class='overlay'></span></span>\n<span class=\"no\">14</span>       <span class=\"r\">end</span>\n<span class=\"no\">15</span> \n<span class=\"no\">16</span>       <span class=\"r\">def</span> <span class=\"pc\">self</span>.<span class=\"fu\">shutdown</span>\n<span class=\"no\">17</span>         <span class=\"iv\">@server</span>.shutdown\n<span class=\"no\">18</span>         <span class=\"iv\">@server</span> = <span class=\"pc\">nil</span>\n<span class=\"no\">19</span>       <span class=\"r\">end</span>\n<span class=\"no\">20</span> \n<span class=\"no\">21</span>       <span class=\"r\">def</span> <span class=\"fu\">initialize</span>(server, app)\n<span class=\"no\">22</span>         <span class=\"r\">super</span> server\n<span class=\"no\">23</span>         <span class=\"iv\">@app</span> = <span class=\"co\">Rack</span>::<span class=\"co\">ContentLength</span>.new(app)\n<span class=\"no\">24</span>       <span class=\"r\">end</span>\n</span>",
    "path": "/Users/alex/.rvm/gems/ruby-1.8.7-p302@test_app/gems/rack-1.2.1/lib/rack/handler/webrick.rb"
},
{
    "line": 213,
    "code": "<span class=\"CodeRay\"><span class=\"no\">203</span>       write_pid <span class=\"r\">if</span> options[<span class=\"sy\">:pid</span>]\n<span class=\"no\">204</span> \n<span class=\"no\">205</span>       trap(<span class=\"sy\">:INT</span>) <span class=\"r\">do</span>\n<span class=\"no\">206</span>         <span class=\"r\">if</span> server.respond_to?(<span class=\"sy\">:shutdown</span>)\n<span class=\"no\">207</span>           server.shutdown\n<span class=\"no\">208</span>         <span class=\"r\">else</span>\n<span class=\"no\">209</span>           exit\n<span class=\"no\">210</span>         <span class=\"r\">end</span>\n<span class=\"no\">211</span>       <span class=\"r\">end</span>\n<span class=\"no\">212</span> \n<span class='container selected'><span class=\"no\">213</span>       server.run wrapped_app, options<span class='overlay'></span></span>\n<span class=\"no\">214</span>     <span class=\"r\">end</span>\n<span class=\"no\">215</span> \n<span class=\"no\">216</span>     <span class=\"r\">def</span> <span class=\"fu\">server</span>\n<span class=\"no\">217</span>       <span class=\"iv\">@_server</span> ||= <span class=\"co\">Rack</span>::<span class=\"co\">Handler</span>.get(options[<span class=\"sy\">:server</span>]) || <span class=\"co\">Rack</span>::<span class=\"co\">Handler</span>.default(options)\n<span class=\"no\">218</span>     <span class=\"r\">end</span>\n<span class=\"no\">219</span> \n<span class=\"no\">220</span>     private\n<span class=\"no\">221</span>       <span class=\"r\">def</span> <span class=\"fu\">parse_options</span>(args)\n<span class=\"no\">222</span>         options = default_options\n<span class=\"no\">223</span> \n<span class=\"no\">224</span>         <span class=\"c\"># Don't evaluate CGI ISINDEX parameters.</span>\n</span>",
    "path": "/Users/alex/.rvm/gems/ruby-1.8.7-p302@test_app/gems/rack-1.2.1/lib/rack/server.rb"
},
{
    "line": 65,
    "code": "<span class=\"CodeRay\"><span class=\"no\">55</span>       puts <span class=\"s\"><span class=\"dl\">&quot;</span><span class=\"k\">=&gt; Rails </span><span class=\"il\"><span class=\"idl\">#{</span><span class=\"co\">Rails</span>.version<span class=\"idl\">}</span></span><span class=\"k\"> application starting in </span><span class=\"il\"><span class=\"idl\">#{</span><span class=\"co\">Rails</span>.env<span class=\"idl\">}</span></span><span class=\"k\"> on http://</span><span class=\"il\"><span class=\"idl\">#{</span>options[<span class=\"sy\">:Host</span>]<span class=\"idl\">}</span></span><span class=\"k\">:</span><span class=\"il\"><span class=\"idl\">#{</span>options[<span class=\"sy\">:Port</span>]<span class=\"idl\">}</span></span><span class=\"dl\">&quot;</span></span>\n<span class=\"no\">56</span>       puts <span class=\"s\"><span class=\"dl\">&quot;</span><span class=\"k\">=&gt; Call with -d to detach</span><span class=\"dl\">&quot;</span></span> <span class=\"r\">unless</span> options[<span class=\"sy\">:daemonize</span>]\n<span class=\"no\">57</span>       trap(<span class=\"sy\">:INT</span>) { exit }\n<span class=\"no\">58</span>       puts <span class=\"s\"><span class=\"dl\">&quot;</span><span class=\"k\">=&gt; Ctrl-C to shutdown server</span><span class=\"dl\">&quot;</span></span> <span class=\"r\">unless</span> options[<span class=\"sy\">:daemonize</span>]\n<span class=\"no\">59</span> \n<span class=\"no\">60</span>       <span class=\"c\">#Create required tmp directories if not found</span>\n<span class=\"no\">61</span>       <span class=\"s\"><span class=\"dl\">%w(</span><span class=\"k\">cache pids sessions sockets</span><span class=\"dl\">)</span></span>.each <span class=\"r\">do</span> |dir_to_make|\n<span class=\"no\">62</span>         <span class=\"co\">FileUtils</span>.mkdir_p(<span class=\"co\">Rails</span>.root.join(<span class=\"s\"><span class=\"dl\">'</span><span class=\"k\">tmp</span><span class=\"dl\">'</span></span>, dir_to_make))\n<span class=\"no\">63</span>       <span class=\"r\">end</span>\n<span class=\"no\">64</span> \n<span class='container selected'><span class=\"no\">65</span>       <span class=\"r\">super</span><span class='overlay'></span></span>\n<span class=\"no\">66</span>     <span class=\"r\">ensure</span>\n<span class=\"no\">67</span>       <span class=\"c\"># The '-h' option calls exit before @options is set.</span>\n<span class=\"no\">68</span>       <span class=\"c\"># If we call 'options' with it unset, we get double help banners.</span>\n<span class=\"no\">69</span>       puts <span class=\"s\"><span class=\"dl\">'</span><span class=\"k\">Exiting</span><span class=\"dl\">'</span></span> <span class=\"r\">unless</span> <span class=\"iv\">@options</span> &amp;&amp; options[<span class=\"sy\">:daemonize</span>]\n<span class=\"no\">70</span>     <span class=\"r\">end</span>\n<span class=\"no\">71</span> \n<span class=\"no\">72</span>     <span class=\"r\">def</span> <span class=\"fu\">middleware</span>\n<span class=\"no\">73</span>       middlewares = []\n<span class=\"no\">74</span>       middlewares &lt;&lt; [<span class=\"co\">Rails</span>::<span class=\"co\">Rack</span>::<span class=\"co\">LogTailer</span>, log_path] <span class=\"r\">unless</span> options[<span class=\"sy\">:daemonize</span>]\n<span class=\"no\">75</span>       middlewares &lt;&lt; [<span class=\"co\">Rails</span>::<span class=\"co\">Rack</span>::<span class=\"co\">Debugger</span>]  <span class=\"r\">if</span> options[<span class=\"sy\">:debugger</span>]\n<span class=\"no\">76</span>       <span class=\"co\">Hash</span>.new(middlewares)\n</span>",
    "path": "/Users/alex/.rvm/gems/ruby-1.8.7-p302@test_app/gems/railties-3.0.3/lib/rails/commands/server.rb"
},
{
    "line": 30,
    "code": "<span class=\"CodeRay\"><span class=\"no\">20</span>   require <span class=\"s\"><span class=\"dl\">'</span><span class=\"k\">rails/commands/console</span><span class=\"dl\">'</span></span>\n<span class=\"no\">21</span>   require <span class=\"co\">APP_PATH</span>\n<span class=\"no\">22</span>   <span class=\"co\">Rails</span>.application.require_environment!\n<span class=\"no\">23</span>   <span class=\"co\">Rails</span>::<span class=\"co\">Console</span>.start(<span class=\"co\">Rails</span>.application)\n<span class=\"no\">24</span> \n<span class=\"no\">25</span> <span class=\"r\">when</span> <span class=\"s\"><span class=\"dl\">'</span><span class=\"k\">server</span><span class=\"dl\">'</span></span>\n<span class=\"no\">26</span>   require <span class=\"s\"><span class=\"dl\">'</span><span class=\"k\">rails/commands/server</span><span class=\"dl\">'</span></span>\n<span class=\"no\">27</span>   <span class=\"co\">Rails</span>::<span class=\"co\">Server</span>.new.tap { |server|\n<span class=\"no\">28</span>     require <span class=\"co\">APP_PATH</span>\n<span class=\"no\">29</span>     <span class=\"co\">Dir</span>.chdir(<span class=\"co\">Rails</span>.application.root)\n<span class='container selected'><span class=\"no\">30</span>     server.start<span class='overlay'></span></span>\n<span class=\"no\">31</span>   }\n<span class=\"no\">32</span> \n<span class=\"no\">33</span> <span class=\"r\">when</span> <span class=\"s\"><span class=\"dl\">'</span><span class=\"k\">dbconsole</span><span class=\"dl\">'</span></span>\n<span class=\"no\">34</span>   require <span class=\"s\"><span class=\"dl\">'</span><span class=\"k\">rails/commands/dbconsole</span><span class=\"dl\">'</span></span>\n<span class=\"no\">35</span>   require <span class=\"co\">APP_PATH</span>\n<span class=\"no\">36</span>   <span class=\"co\">Rails</span>::<span class=\"co\">DBConsole</span>.start(<span class=\"co\">Rails</span>.application)\n<span class=\"no\">37</span> \n<span class=\"no\">38</span> <span class=\"r\">when</span> <span class=\"s\"><span class=\"dl\">'</span><span class=\"k\">application</span><span class=\"dl\">'</span></span>, <span class=\"s\"><span class=\"dl\">'</span><span class=\"k\">runner</span><span class=\"dl\">'</span></span>\n<span class=\"no\">39</span>   require <span class=\"s\"><span class=\"dl\">&quot;</span><span class=\"k\">rails/commands/</span><span class=\"il\"><span class=\"idl\">#{</span>command<span class=\"idl\">}</span></span><span class=\"dl\">&quot;</span></span>\n<span class=\"no\">40</span> \n<span class=\"no\">41</span> <span class=\"r\">when</span> <span class=\"s\"><span class=\"dl\">'</span><span class=\"k\">new</span><span class=\"dl\">'</span></span>\n</span>",
    "path": "/Users/alex/.rvm/gems/ruby-1.8.7-p302@test_app/gems/railties-3.0.3/lib/rails/commands.rb"
},
{
    "line": 27,
    "code": "<span class=\"CodeRay\"><span class=\"no\">17</span>   require <span class=\"s\"><span class=\"dl\">&quot;</span><span class=\"k\">rails/commands/</span><span class=\"il\"><span class=\"idl\">#{</span>command<span class=\"idl\">}</span></span><span class=\"dl\">&quot;</span></span>\n<span class=\"no\">18</span> \n<span class=\"no\">19</span> <span class=\"r\">when</span> <span class=\"s\"><span class=\"dl\">'</span><span class=\"k\">console</span><span class=\"dl\">'</span></span>\n<span class=\"no\">20</span>   require <span class=\"s\"><span class=\"dl\">'</span><span class=\"k\">rails/commands/console</span><span class=\"dl\">'</span></span>\n<span class=\"no\">21</span>   require <span class=\"co\">APP_PATH</span>\n<span class=\"no\">22</span>   <span class=\"co\">Rails</span>.application.require_environment!\n<span class=\"no\">23</span>   <span class=\"co\">Rails</span>::<span class=\"co\">Console</span>.start(<span class=\"co\">Rails</span>.application)\n<span class=\"no\">24</span> \n<span class=\"no\">25</span> <span class=\"r\">when</span> <span class=\"s\"><span class=\"dl\">'</span><span class=\"k\">server</span><span class=\"dl\">'</span></span>\n<span class=\"no\">26</span>   require <span class=\"s\"><span class=\"dl\">'</span><span class=\"k\">rails/commands/server</span><span class=\"dl\">'</span></span>\n<span class='container selected'><span class=\"no\">27</span>   <span class=\"co\">Rails</span>::<span class=\"co\">Server</span>.new.tap { |server|<span class='overlay'></span></span>\n<span class=\"no\">28</span>     require <span class=\"co\">APP_PATH</span>\n<span class=\"no\">29</span>     <span class=\"co\">Dir</span>.chdir(<span class=\"co\">Rails</span>.application.root)\n<span class=\"no\">30</span>     server.start\n<span class=\"no\">31</span>   }\n<span class=\"no\">32</span> \n<span class=\"no\">33</span> <span class=\"r\">when</span> <span class=\"s\"><span class=\"dl\">'</span><span class=\"k\">dbconsole</span><span class=\"dl\">'</span></span>\n<span class=\"no\">34</span>   require <span class=\"s\"><span class=\"dl\">'</span><span class=\"k\">rails/commands/dbconsole</span><span class=\"dl\">'</span></span>\n<span class=\"no\">35</span>   require <span class=\"co\">APP_PATH</span>\n<span class=\"no\">36</span>   <span class=\"co\">Rails</span>::<span class=\"co\">DBConsole</span>.start(<span class=\"co\">Rails</span>.application)\n<span class=\"no\">37</span> \n<span class=\"no\">38</span> <span class=\"r\">when</span> <span class=\"s\"><span class=\"dl\">'</span><span class=\"k\">application</span><span class=\"dl\">'</span></span>, <span class=\"s\"><span class=\"dl\">'</span><span class=\"k\">runner</span><span class=\"dl\">'</span></span>\n</span>",
    "path": "/Users/alex/.rvm/gems/ruby-1.8.7-p302@test_app/gems/railties-3.0.3/lib/rails/commands.rb"
},
{
    "line": 27,
    "code": "<span class=\"CodeRay\"><span class=\"no\">17</span>   require <span class=\"s\"><span class=\"dl\">&quot;</span><span class=\"k\">rails/commands/</span><span class=\"il\"><span class=\"idl\">#{</span>command<span class=\"idl\">}</span></span><span class=\"dl\">&quot;</span></span>\n<span class=\"no\">18</span> \n<span class=\"no\">19</span> <span class=\"r\">when</span> <span class=\"s\"><span class=\"dl\">'</span><span class=\"k\">console</span><span class=\"dl\">'</span></span>\n<span class=\"no\">20</span>   require <span class=\"s\"><span class=\"dl\">'</span><span class=\"k\">rails/commands/console</span><span class=\"dl\">'</span></span>\n<span class=\"no\">21</span>   require <span class=\"co\">APP_PATH</span>\n<span class=\"no\">22</span>   <span class=\"co\">Rails</span>.application.require_environment!\n<span class=\"no\">23</span>   <span class=\"co\">Rails</span>::<span class=\"co\">Console</span>.start(<span class=\"co\">Rails</span>.application)\n<span class=\"no\">24</span> \n<span class=\"no\">25</span> <span class=\"r\">when</span> <span class=\"s\"><span class=\"dl\">'</span><span class=\"k\">server</span><span class=\"dl\">'</span></span>\n<span class=\"no\">26</span>   require <span class=\"s\"><span class=\"dl\">'</span><span class=\"k\">rails/commands/server</span><span class=\"dl\">'</span></span>\n<span class='container selected'><span class=\"no\">27</span>   <span class=\"co\">Rails</span>::<span class=\"co\">Server</span>.new.tap { |server|<span class='overlay'></span></span>\n<span class=\"no\">28</span>     require <span class=\"co\">APP_PATH</span>\n<span class=\"no\">29</span>     <span class=\"co\">Dir</span>.chdir(<span class=\"co\">Rails</span>.application.root)\n<span class=\"no\">30</span>     server.start\n<span class=\"no\">31</span>   }\n<span class=\"no\">32</span> \n<span class=\"no\">33</span> <span class=\"r\">when</span> <span class=\"s\"><span class=\"dl\">'</span><span class=\"k\">dbconsole</span><span class=\"dl\">'</span></span>\n<span class=\"no\">34</span>   require <span class=\"s\"><span class=\"dl\">'</span><span class=\"k\">rails/commands/dbconsole</span><span class=\"dl\">'</span></span>\n<span class=\"no\">35</span>   require <span class=\"co\">APP_PATH</span>\n<span class=\"no\">36</span>   <span class=\"co\">Rails</span>::<span class=\"co\">DBConsole</span>.start(<span class=\"co\">Rails</span>.application)\n<span class=\"no\">37</span> \n<span class=\"no\">38</span> <span class=\"r\">when</span> <span class=\"s\"><span class=\"dl\">'</span><span class=\"k\">application</span><span class=\"dl\">'</span></span>, <span class=\"s\"><span class=\"dl\">'</span><span class=\"k\">runner</span><span class=\"dl\">'</span></span>\n</span>",
    "path": "/Users/alex/.rvm/gems/ruby-1.8.7-p302@test_app/gems/railties-3.0.3/lib/rails/commands.rb"
},
{
    "line": 6,
    "code": "<span class=\"CodeRay\"><span class=\"no\">1</span> <span class=\"dt\">#!/usr/bin/env ruby</span>\n<span class=\"no\">2</span> <span class=\"c\"># This command will automatically be run when you run &quot;rails&quot; with Rails 3 gems installed from the root of your application.</span>\n<span class=\"no\">3</span> \n<span class=\"no\">4</span> <span class=\"co\">APP_PATH</span> = <span class=\"co\">File</span>.expand_path(<span class=\"s\"><span class=\"dl\">'</span><span class=\"k\">../../config/application</span><span class=\"dl\">'</span></span>,  <span class=\"pc\">__FILE__</span>)\n<span class=\"no\">5</span> require <span class=\"co\">File</span>.expand_path(<span class=\"s\"><span class=\"dl\">'</span><span class=\"k\">../../config/boot</span><span class=\"dl\">'</span></span>,  <span class=\"pc\">__FILE__</span>)\n<span class='container selected'><span class=\"no\">6</span> require <span class=\"s\"><span class=\"dl\">'</span><span class=\"k\">rails/commands</span><span class=\"dl\">'</span></span><span class='overlay'></span></span>\n</span>",
    "path": "script/rails"
},
{
    "line": 6,
    "code": "<span class=\"CodeRay\"><span class=\"no\">1</span> <span class=\"dt\">#!/usr/bin/env ruby</span>\n<span class=\"no\">2</span> <span class=\"c\"># This command will automatically be run when you run &quot;rails&quot; with Rails 3 gems installed from the root of your application.</span>\n<span class=\"no\">3</span> \n<span class=\"no\">4</span> <span class=\"co\">APP_PATH</span> = <span class=\"co\">File</span>.expand_path(<span class=\"s\"><span class=\"dl\">'</span><span class=\"k\">../../config/application</span><span class=\"dl\">'</span></span>,  <span class=\"pc\">__FILE__</span>)\n<span class=\"no\">5</span> require <span class=\"co\">File</span>.expand_path(<span class=\"s\"><span class=\"dl\">'</span><span class=\"k\">../../config/boot</span><span class=\"dl\">'</span></span>,  <span class=\"pc\">__FILE__</span>)\n<span class='container selected'><span class=\"no\">6</span> require <span class=\"s\"><span class=\"dl\">'</span><span class=\"k\">rails/commands</span><span class=\"dl\">'</span></span><span class='overlay'></span></span>\n</span>",
    "path": "script/rails"
}],
"selected": 0
}